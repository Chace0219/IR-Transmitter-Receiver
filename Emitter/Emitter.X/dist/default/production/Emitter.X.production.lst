

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu May 18 09:12:20 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 1.41
    48                           ; Generated 25/01/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC12F1840 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  010C                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011B                     	;# 
   131  011D                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  0191                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0194                     	;# 
   141  0195                     	;# 
   142  0196                     	;# 
   143  0197                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  020C                     	;# 
   156  0211                     	;# 
   157  0211                     	;# 
   158  0212                     	;# 
   159  0212                     	;# 
   160  0213                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0214                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0391                     	;# 
   180  0392                     	;# 
   181  0393                     	;# 
   182  039A                     	;# 
   183  039C                     	;# 
   184  039D                     	;# 
   185  039E                     	;# 
   186  039F                     	;# 
   187  0FE4                     	;# 
   188  0FE5                     	;# 
   189  0FE6                     	;# 
   190  0FE7                     	;# 
   191  0FE8                     	;# 
   192  0FE9                     	;# 
   193  0FEA                     	;# 
   194  0FEB                     	;# 
   195  0FED                     	;# 
   196  0FEE                     	;# 
   197  0FEF                     	;# 
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  008C                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  010C                     	;# 
   239  0111                     	;# 
   240  0112                     	;# 
   241  0115                     	;# 
   242  0116                     	;# 
   243  0117                     	;# 
   244  0118                     	;# 
   245  0119                     	;# 
   246  011A                     	;# 
   247  011B                     	;# 
   248  011D                     	;# 
   249  011D                     	;# 
   250  018C                     	;# 
   251  0191                     	;# 
   252  0191                     	;# 
   253  0192                     	;# 
   254  0193                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0194                     	;# 
   258  0195                     	;# 
   259  0196                     	;# 
   260  0197                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020C                     	;# 
   273  0211                     	;# 
   274  0211                     	;# 
   275  0212                     	;# 
   276  0212                     	;# 
   277  0213                     	;# 
   278  0213                     	;# 
   279  0214                     	;# 
   280  0214                     	;# 
   281  0215                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0216                     	;# 
   285  0216                     	;# 
   286  0217                     	;# 
   287  0217                     	;# 
   288  0291                     	;# 
   289  0291                     	;# 
   290  0292                     	;# 
   291  0293                     	;# 
   292  0294                     	;# 
   293  0295                     	;# 
   294  0295                     	;# 
   295  0296                     	;# 
   296  0391                     	;# 
   297  0392                     	;# 
   298  0393                     	;# 
   299  039A                     	;# 
   300  039C                     	;# 
   301  039D                     	;# 
   302  039E                     	;# 
   303  039F                     	;# 
   304  0FE4                     	;# 
   305  0FE5                     	;# 
   306  0FE6                     	;# 
   307  0FE7                     	;# 
   308  0FE8                     	;# 
   309  0FE9                     	;# 
   310  0FEA                     	;# 
   311  0FEB                     	;# 
   312  0FED                     	;# 
   313  0FEE                     	;# 
   314  0FEF                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  008C                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  010C                     	;# 
   356  0111                     	;# 
   357  0112                     	;# 
   358  0115                     	;# 
   359  0116                     	;# 
   360  0117                     	;# 
   361  0118                     	;# 
   362  0119                     	;# 
   363  011A                     	;# 
   364  011B                     	;# 
   365  011D                     	;# 
   366  011D                     	;# 
   367  018C                     	;# 
   368  0191                     	;# 
   369  0191                     	;# 
   370  0192                     	;# 
   371  0193                     	;# 
   372  0193                     	;# 
   373  0193                     	;# 
   374  0194                     	;# 
   375  0195                     	;# 
   376  0196                     	;# 
   377  0197                     	;# 
   378  0199                     	;# 
   379  019A                     	;# 
   380  019B                     	;# 
   381  019B                     	;# 
   382  019B                     	;# 
   383  019B                     	;# 
   384  019C                     	;# 
   385  019C                     	;# 
   386  019D                     	;# 
   387  019E                     	;# 
   388  019F                     	;# 
   389  020C                     	;# 
   390  0211                     	;# 
   391  0211                     	;# 
   392  0212                     	;# 
   393  0212                     	;# 
   394  0213                     	;# 
   395  0213                     	;# 
   396  0214                     	;# 
   397  0214                     	;# 
   398  0215                     	;# 
   399  0215                     	;# 
   400  0215                     	;# 
   401  0216                     	;# 
   402  0216                     	;# 
   403  0217                     	;# 
   404  0217                     	;# 
   405  0291                     	;# 
   406  0291                     	;# 
   407  0292                     	;# 
   408  0293                     	;# 
   409  0294                     	;# 
   410  0295                     	;# 
   411  0295                     	;# 
   412  0296                     	;# 
   413  0391                     	;# 
   414  0392                     	;# 
   415  0393                     	;# 
   416  039A                     	;# 
   417  039C                     	;# 
   418  039D                     	;# 
   419  039E                     	;# 
   420  039F                     	;# 
   421  0FE4                     	;# 
   422  0FE5                     	;# 
   423  0FE6                     	;# 
   424  0FE7                     	;# 
   425  0FE8                     	;# 
   426  0FE9                     	;# 
   427  0FEA                     	;# 
   428  0FEB                     	;# 
   429  0FED                     	;# 
   430  0FEE                     	;# 
   431  0FEF                     	;# 
   432  0000                     	;# 
   433  0001                     	;# 
   434  0002                     	;# 
   435  0003                     	;# 
   436  0004                     	;# 
   437  0005                     	;# 
   438  0006                     	;# 
   439  0007                     	;# 
   440  0008                     	;# 
   441  0009                     	;# 
   442  000A                     	;# 
   443  000B                     	;# 
   444  000C                     	;# 
   445  0011                     	;# 
   446  0012                     	;# 
   447  0015                     	;# 
   448  0016                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001C                     	;# 
   456  001E                     	;# 
   457  001F                     	;# 
   458  008C                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0095                     	;# 
   462  0096                     	;# 
   463  0097                     	;# 
   464  0098                     	;# 
   465  0099                     	;# 
   466  009A                     	;# 
   467  009B                     	;# 
   468  009B                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  010C                     	;# 
   473  0111                     	;# 
   474  0112                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  011A                     	;# 
   481  011B                     	;# 
   482  011D                     	;# 
   483  011D                     	;# 
   484  018C                     	;# 
   485  0191                     	;# 
   486  0191                     	;# 
   487  0192                     	;# 
   488  0193                     	;# 
   489  0193                     	;# 
   490  0193                     	;# 
   491  0194                     	;# 
   492  0195                     	;# 
   493  0196                     	;# 
   494  0197                     	;# 
   495  0199                     	;# 
   496  019A                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019C                     	;# 
   502  019C                     	;# 
   503  019D                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  020C                     	;# 
   507  0211                     	;# 
   508  0211                     	;# 
   509  0212                     	;# 
   510  0212                     	;# 
   511  0213                     	;# 
   512  0213                     	;# 
   513  0214                     	;# 
   514  0214                     	;# 
   515  0215                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0216                     	;# 
   519  0216                     	;# 
   520  0217                     	;# 
   521  0217                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0294                     	;# 
   527  0295                     	;# 
   528  0295                     	;# 
   529  0296                     	;# 
   530  0391                     	;# 
   531  0392                     	;# 
   532  0393                     	;# 
   533  039A                     	;# 
   534  039C                     	;# 
   535  039D                     	;# 
   536  039E                     	;# 
   537  039F                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0016                     	;# 
   567  0017                     	;# 
   568  0018                     	;# 
   569  0019                     	;# 
   570  001A                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  008C                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0097                     	;# 
   581  0098                     	;# 
   582  0099                     	;# 
   583  009A                     	;# 
   584  009B                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  010C                     	;# 
   590  0111                     	;# 
   591  0112                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011A                     	;# 
   598  011B                     	;# 
   599  011D                     	;# 
   600  011D                     	;# 
   601  018C                     	;# 
   602  0191                     	;# 
   603  0191                     	;# 
   604  0192                     	;# 
   605  0193                     	;# 
   606  0193                     	;# 
   607  0193                     	;# 
   608  0194                     	;# 
   609  0195                     	;# 
   610  0196                     	;# 
   611  0197                     	;# 
   612  0199                     	;# 
   613  019A                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019D                     	;# 
   621  019E                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  0211                     	;# 
   625  0211                     	;# 
   626  0212                     	;# 
   627  0212                     	;# 
   628  0213                     	;# 
   629  0213                     	;# 
   630  0214                     	;# 
   631  0214                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0216                     	;# 
   636  0216                     	;# 
   637  0217                     	;# 
   638  0217                     	;# 
   639  0291                     	;# 
   640  0291                     	;# 
   641  0292                     	;# 
   642  0293                     	;# 
   643  0294                     	;# 
   644  0295                     	;# 
   645  0295                     	;# 
   646  0296                     	;# 
   647  0391                     	;# 
   648  0392                     	;# 
   649  0393                     	;# 
   650  039A                     	;# 
   651  039C                     	;# 
   652  039D                     	;# 
   653  039E                     	;# 
   654  039F                     	;# 
   655  0FE4                     	;# 
   656  0FE5                     	;# 
   657  0FE6                     	;# 
   658  0FE7                     	;# 
   659  0FE8                     	;# 
   660  0FE9                     	;# 
   661  0FEA                     	;# 
   662  0FEB                     	;# 
   663  0FED                     	;# 
   664  0FEE                     	;# 
   665  0FEF                     	;# 
   666  0000                     	;# 
   667  0001                     	;# 
   668  0002                     	;# 
   669  0003                     	;# 
   670  0004                     	;# 
   671  0005                     	;# 
   672  0006                     	;# 
   673  0007                     	;# 
   674  0008                     	;# 
   675  0009                     	;# 
   676  000A                     	;# 
   677  000B                     	;# 
   678  000C                     	;# 
   679  0011                     	;# 
   680  0012                     	;# 
   681  0015                     	;# 
   682  0016                     	;# 
   683  0016                     	;# 
   684  0017                     	;# 
   685  0018                     	;# 
   686  0019                     	;# 
   687  001A                     	;# 
   688  001B                     	;# 
   689  001C                     	;# 
   690  001E                     	;# 
   691  001F                     	;# 
   692  008C                     	;# 
   693  0091                     	;# 
   694  0092                     	;# 
   695  0095                     	;# 
   696  0096                     	;# 
   697  0097                     	;# 
   698  0098                     	;# 
   699  0099                     	;# 
   700  009A                     	;# 
   701  009B                     	;# 
   702  009B                     	;# 
   703  009C                     	;# 
   704  009D                     	;# 
   705  009E                     	;# 
   706  010C                     	;# 
   707  0111                     	;# 
   708  0112                     	;# 
   709  0115                     	;# 
   710  0116                     	;# 
   711  0117                     	;# 
   712  0118                     	;# 
   713  0119                     	;# 
   714  011A                     	;# 
   715  011B                     	;# 
   716  011D                     	;# 
   717  011D                     	;# 
   718  018C                     	;# 
   719  0191                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0193                     	;# 
   723  0193                     	;# 
   724  0193                     	;# 
   725  0194                     	;# 
   726  0195                     	;# 
   727  0196                     	;# 
   728  0197                     	;# 
   729  0199                     	;# 
   730  019A                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019B                     	;# 
   735  019C                     	;# 
   736  019C                     	;# 
   737  019D                     	;# 
   738  019E                     	;# 
   739  019F                     	;# 
   740  020C                     	;# 
   741  0211                     	;# 
   742  0211                     	;# 
   743  0212                     	;# 
   744  0212                     	;# 
   745  0213                     	;# 
   746  0213                     	;# 
   747  0214                     	;# 
   748  0214                     	;# 
   749  0215                     	;# 
   750  0215                     	;# 
   751  0215                     	;# 
   752  0216                     	;# 
   753  0216                     	;# 
   754  0217                     	;# 
   755  0217                     	;# 
   756  0291                     	;# 
   757  0291                     	;# 
   758  0292                     	;# 
   759  0293                     	;# 
   760  0294                     	;# 
   761  0295                     	;# 
   762  0295                     	;# 
   763  0296                     	;# 
   764  0391                     	;# 
   765  0392                     	;# 
   766  0393                     	;# 
   767  039A                     	;# 
   768  039C                     	;# 
   769  039D                     	;# 
   770  039E                     	;# 
   771  039F                     	;# 
   772  0FE4                     	;# 
   773  0FE5                     	;# 
   774  0FE6                     	;# 
   775  0FE7                     	;# 
   776  0FE8                     	;# 
   777  0FE9                     	;# 
   778  0FEA                     	;# 
   779  0FEB                     	;# 
   780  0FED                     	;# 
   781  0FEE                     	;# 
   782  0FEF                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0008                     	;# 
   792  0009                     	;# 
   793  000A                     	;# 
   794  000B                     	;# 
   795  000C                     	;# 
   796  0011                     	;# 
   797  0012                     	;# 
   798  0015                     	;# 
   799  0016                     	;# 
   800  0016                     	;# 
   801  0017                     	;# 
   802  0018                     	;# 
   803  0019                     	;# 
   804  001A                     	;# 
   805  001B                     	;# 
   806  001C                     	;# 
   807  001E                     	;# 
   808  001F                     	;# 
   809  008C                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0095                     	;# 
   813  0096                     	;# 
   814  0097                     	;# 
   815  0098                     	;# 
   816  0099                     	;# 
   817  009A                     	;# 
   818  009B                     	;# 
   819  009B                     	;# 
   820  009C                     	;# 
   821  009D                     	;# 
   822  009E                     	;# 
   823  010C                     	;# 
   824  0111                     	;# 
   825  0112                     	;# 
   826  0115                     	;# 
   827  0116                     	;# 
   828  0117                     	;# 
   829  0118                     	;# 
   830  0119                     	;# 
   831  011A                     	;# 
   832  011B                     	;# 
   833  011D                     	;# 
   834  011D                     	;# 
   835  018C                     	;# 
   836  0191                     	;# 
   837  0191                     	;# 
   838  0192                     	;# 
   839  0193                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0194                     	;# 
   843  0195                     	;# 
   844  0196                     	;# 
   845  0197                     	;# 
   846  0199                     	;# 
   847  019A                     	;# 
   848  019B                     	;# 
   849  019B                     	;# 
   850  019B                     	;# 
   851  019B                     	;# 
   852  019C                     	;# 
   853  019C                     	;# 
   854  019D                     	;# 
   855  019E                     	;# 
   856  019F                     	;# 
   857  020C                     	;# 
   858  0211                     	;# 
   859  0211                     	;# 
   860  0212                     	;# 
   861  0212                     	;# 
   862  0213                     	;# 
   863  0213                     	;# 
   864  0214                     	;# 
   865  0214                     	;# 
   866  0215                     	;# 
   867  0215                     	;# 
   868  0215                     	;# 
   869  0216                     	;# 
   870  0216                     	;# 
   871  0217                     	;# 
   872  0217                     	;# 
   873  0291                     	;# 
   874  0291                     	;# 
   875  0292                     	;# 
   876  0293                     	;# 
   877  0294                     	;# 
   878  0295                     	;# 
   879  0295                     	;# 
   880  0296                     	;# 
   881  0391                     	;# 
   882  0392                     	;# 
   883  0393                     	;# 
   884  039A                     	;# 
   885  039C                     	;# 
   886  039D                     	;# 
   887  039E                     	;# 
   888  039F                     	;# 
   889  0FE4                     	;# 
   890  0FE5                     	;# 
   891  0FE6                     	;# 
   892  0FE7                     	;# 
   893  0FE8                     	;# 
   894  0FE9                     	;# 
   895  0FEA                     	;# 
   896  0FEB                     	;# 
   897  0FED                     	;# 
   898  0FEE                     	;# 
   899  0FEF                     	;# 
   900  0000                     	;# 
   901  0001                     	;# 
   902  0002                     	;# 
   903  0003                     	;# 
   904  0004                     	;# 
   905  0005                     	;# 
   906  0006                     	;# 
   907  0007                     	;# 
   908  0008                     	;# 
   909  0009                     	;# 
   910  000A                     	;# 
   911  000B                     	;# 
   912  000C                     	;# 
   913  0011                     	;# 
   914  0012                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0016                     	;# 
   918  0017                     	;# 
   919  0018                     	;# 
   920  0019                     	;# 
   921  001A                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  001E                     	;# 
   925  001F                     	;# 
   926  008C                     	;# 
   927  0091                     	;# 
   928  0092                     	;# 
   929  0095                     	;# 
   930  0096                     	;# 
   931  0097                     	;# 
   932  0098                     	;# 
   933  0099                     	;# 
   934  009A                     	;# 
   935  009B                     	;# 
   936  009B                     	;# 
   937  009C                     	;# 
   938  009D                     	;# 
   939  009E                     	;# 
   940  010C                     	;# 
   941  0111                     	;# 
   942  0112                     	;# 
   943  0115                     	;# 
   944  0116                     	;# 
   945  0117                     	;# 
   946  0118                     	;# 
   947  0119                     	;# 
   948  011A                     	;# 
   949  011B                     	;# 
   950  011D                     	;# 
   951  011D                     	;# 
   952  018C                     	;# 
   953  0191                     	;# 
   954  0191                     	;# 
   955  0192                     	;# 
   956  0193                     	;# 
   957  0193                     	;# 
   958  0193                     	;# 
   959  0194                     	;# 
   960  0195                     	;# 
   961  0196                     	;# 
   962  0197                     	;# 
   963  0199                     	;# 
   964  019A                     	;# 
   965  019B                     	;# 
   966  019B                     	;# 
   967  019B                     	;# 
   968  019B                     	;# 
   969  019C                     	;# 
   970  019C                     	;# 
   971  019D                     	;# 
   972  019E                     	;# 
   973  019F                     	;# 
   974  020C                     	;# 
   975  0211                     	;# 
   976  0211                     	;# 
   977  0212                     	;# 
   978  0212                     	;# 
   979  0213                     	;# 
   980  0213                     	;# 
   981  0214                     	;# 
   982  0214                     	;# 
   983  0215                     	;# 
   984  0215                     	;# 
   985  0215                     	;# 
   986  0216                     	;# 
   987  0216                     	;# 
   988  0217                     	;# 
   989  0217                     	;# 
   990  0291                     	;# 
   991  0291                     	;# 
   992  0292                     	;# 
   993  0293                     	;# 
   994  0294                     	;# 
   995  0295                     	;# 
   996  0295                     	;# 
   997  0296                     	;# 
   998  0391                     	;# 
   999  0392                     	;# 
  1000  0393                     	;# 
  1001  039A                     	;# 
  1002  039C                     	;# 
  1003  039D                     	;# 
  1004  039E                     	;# 
  1005  039F                     	;# 
  1006  0FE4                     	;# 
  1007  0FE5                     	;# 
  1008  0FE6                     	;# 
  1009  0FE7                     	;# 
  1010  0FE8                     	;# 
  1011  0FE9                     	;# 
  1012  0FEA                     	;# 
  1013  0FEB                     	;# 
  1014  0FED                     	;# 
  1015  0FEE                     	;# 
  1016  0FEF                     	;# 
  1017  0000                     	;# 
  1018  0001                     	;# 
  1019  0002                     	;# 
  1020  0003                     	;# 
  1021  0004                     	;# 
  1022  0005                     	;# 
  1023  0006                     	;# 
  1024  0007                     	;# 
  1025  0008                     	;# 
  1026  0009                     	;# 
  1027  000A                     	;# 
  1028  000B                     	;# 
  1029  000C                     	;# 
  1030  0011                     	;# 
  1031  0012                     	;# 
  1032  0015                     	;# 
  1033  0016                     	;# 
  1034  0016                     	;# 
  1035  0017                     	;# 
  1036  0018                     	;# 
  1037  0019                     	;# 
  1038  001A                     	;# 
  1039  001B                     	;# 
  1040  001C                     	;# 
  1041  001E                     	;# 
  1042  001F                     	;# 
  1043  008C                     	;# 
  1044  0091                     	;# 
  1045  0092                     	;# 
  1046  0095                     	;# 
  1047  0096                     	;# 
  1048  0097                     	;# 
  1049  0098                     	;# 
  1050  0099                     	;# 
  1051  009A                     	;# 
  1052  009B                     	;# 
  1053  009B                     	;# 
  1054  009C                     	;# 
  1055  009D                     	;# 
  1056  009E                     	;# 
  1057  010C                     	;# 
  1058  0111                     	;# 
  1059  0112                     	;# 
  1060  0115                     	;# 
  1061  0116                     	;# 
  1062  0117                     	;# 
  1063  0118                     	;# 
  1064  0119                     	;# 
  1065  011A                     	;# 
  1066  011B                     	;# 
  1067  011D                     	;# 
  1068  011D                     	;# 
  1069  018C                     	;# 
  1070  0191                     	;# 
  1071  0191                     	;# 
  1072  0192                     	;# 
  1073  0193                     	;# 
  1074  0193                     	;# 
  1075  0193                     	;# 
  1076  0194                     	;# 
  1077  0195                     	;# 
  1078  0196                     	;# 
  1079  0197                     	;# 
  1080  0199                     	;# 
  1081  019A                     	;# 
  1082  019B                     	;# 
  1083  019B                     	;# 
  1084  019B                     	;# 
  1085  019B                     	;# 
  1086  019C                     	;# 
  1087  019C                     	;# 
  1088  019D                     	;# 
  1089  019E                     	;# 
  1090  019F                     	;# 
  1091  020C                     	;# 
  1092  0211                     	;# 
  1093  0211                     	;# 
  1094  0212                     	;# 
  1095  0212                     	;# 
  1096  0213                     	;# 
  1097  0213                     	;# 
  1098  0214                     	;# 
  1099  0214                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0216                     	;# 
  1104  0216                     	;# 
  1105  0217                     	;# 
  1106  0217                     	;# 
  1107  0291                     	;# 
  1108  0291                     	;# 
  1109  0292                     	;# 
  1110  0293                     	;# 
  1111  0294                     	;# 
  1112  0295                     	;# 
  1113  0295                     	;# 
  1114  0296                     	;# 
  1115  0391                     	;# 
  1116  0392                     	;# 
  1117  0393                     	;# 
  1118  039A                     	;# 
  1119  039C                     	;# 
  1120  039D                     	;# 
  1121  039E                     	;# 
  1122  039F                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134  0000                     	;# 
  1135  0001                     	;# 
  1136  0002                     	;# 
  1137  0003                     	;# 
  1138  0004                     	;# 
  1139  0005                     	;# 
  1140  0006                     	;# 
  1141  0007                     	;# 
  1142  0008                     	;# 
  1143  0009                     	;# 
  1144  000A                     	;# 
  1145  000B                     	;# 
  1146  000C                     	;# 
  1147  0011                     	;# 
  1148  0012                     	;# 
  1149  0015                     	;# 
  1150  0016                     	;# 
  1151  0016                     	;# 
  1152  0017                     	;# 
  1153  0018                     	;# 
  1154  0019                     	;# 
  1155  001A                     	;# 
  1156  001B                     	;# 
  1157  001C                     	;# 
  1158  001E                     	;# 
  1159  001F                     	;# 
  1160  008C                     	;# 
  1161  0091                     	;# 
  1162  0092                     	;# 
  1163  0095                     	;# 
  1164  0096                     	;# 
  1165  0097                     	;# 
  1166  0098                     	;# 
  1167  0099                     	;# 
  1168  009A                     	;# 
  1169  009B                     	;# 
  1170  009B                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009E                     	;# 
  1174  010C                     	;# 
  1175  0111                     	;# 
  1176  0112                     	;# 
  1177  0115                     	;# 
  1178  0116                     	;# 
  1179  0117                     	;# 
  1180  0118                     	;# 
  1181  0119                     	;# 
  1182  011A                     	;# 
  1183  011B                     	;# 
  1184  011D                     	;# 
  1185  011D                     	;# 
  1186  018C                     	;# 
  1187  0191                     	;# 
  1188  0191                     	;# 
  1189  0192                     	;# 
  1190  0193                     	;# 
  1191  0193                     	;# 
  1192  0193                     	;# 
  1193  0194                     	;# 
  1194  0195                     	;# 
  1195  0196                     	;# 
  1196  0197                     	;# 
  1197  0199                     	;# 
  1198  019A                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019C                     	;# 
  1204  019C                     	;# 
  1205  019D                     	;# 
  1206  019E                     	;# 
  1207  019F                     	;# 
  1208  020C                     	;# 
  1209  0211                     	;# 
  1210  0211                     	;# 
  1211  0212                     	;# 
  1212  0212                     	;# 
  1213  0213                     	;# 
  1214  0213                     	;# 
  1215  0214                     	;# 
  1216  0214                     	;# 
  1217  0215                     	;# 
  1218  0215                     	;# 
  1219  0215                     	;# 
  1220  0216                     	;# 
  1221  0216                     	;# 
  1222  0217                     	;# 
  1223  0217                     	;# 
  1224  0291                     	;# 
  1225  0291                     	;# 
  1226  0292                     	;# 
  1227  0293                     	;# 
  1228  0294                     	;# 
  1229  0295                     	;# 
  1230  0295                     	;# 
  1231  0296                     	;# 
  1232  0391                     	;# 
  1233  0392                     	;# 
  1234  0393                     	;# 
  1235  039A                     	;# 
  1236  039C                     	;# 
  1237  039D                     	;# 
  1238  039E                     	;# 
  1239  039F                     	;# 
  1240  0FE4                     	;# 
  1241  0FE5                     	;# 
  1242  0FE6                     	;# 
  1243  0FE7                     	;# 
  1244  0FE8                     	;# 
  1245  0FE9                     	;# 
  1246  0FEA                     	;# 
  1247  0FEB                     	;# 
  1248  0FED                     	;# 
  1249  0FEE                     	;# 
  1250  0FEF                     	;# 
  1251  0000                     	;# 
  1252  0001                     	;# 
  1253  0002                     	;# 
  1254  0003                     	;# 
  1255  0004                     	;# 
  1256  0005                     	;# 
  1257  0006                     	;# 
  1258  0007                     	;# 
  1259  0008                     	;# 
  1260  0009                     	;# 
  1261  000A                     	;# 
  1262  000B                     	;# 
  1263  000C                     	;# 
  1264  0011                     	;# 
  1265  0012                     	;# 
  1266  0015                     	;# 
  1267  0016                     	;# 
  1268  0016                     	;# 
  1269  0017                     	;# 
  1270  0018                     	;# 
  1271  0019                     	;# 
  1272  001A                     	;# 
  1273  001B                     	;# 
  1274  001C                     	;# 
  1275  001E                     	;# 
  1276  001F                     	;# 
  1277  008C                     	;# 
  1278  0091                     	;# 
  1279  0092                     	;# 
  1280  0095                     	;# 
  1281  0096                     	;# 
  1282  0097                     	;# 
  1283  0098                     	;# 
  1284  0099                     	;# 
  1285  009A                     	;# 
  1286  009B                     	;# 
  1287  009B                     	;# 
  1288  009C                     	;# 
  1289  009D                     	;# 
  1290  009E                     	;# 
  1291  010C                     	;# 
  1292  0111                     	;# 
  1293  0112                     	;# 
  1294  0115                     	;# 
  1295  0116                     	;# 
  1296  0117                     	;# 
  1297  0118                     	;# 
  1298  0119                     	;# 
  1299  011A                     	;# 
  1300  011B                     	;# 
  1301  011D                     	;# 
  1302  011D                     	;# 
  1303  018C                     	;# 
  1304  0191                     	;# 
  1305  0191                     	;# 
  1306  0192                     	;# 
  1307  0193                     	;# 
  1308  0193                     	;# 
  1309  0193                     	;# 
  1310  0194                     	;# 
  1311  0195                     	;# 
  1312  0196                     	;# 
  1313  0197                     	;# 
  1314  0199                     	;# 
  1315  019A                     	;# 
  1316  019B                     	;# 
  1317  019B                     	;# 
  1318  019B                     	;# 
  1319  019B                     	;# 
  1320  019C                     	;# 
  1321  019C                     	;# 
  1322  019D                     	;# 
  1323  019E                     	;# 
  1324  019F                     	;# 
  1325  020C                     	;# 
  1326  0211                     	;# 
  1327  0211                     	;# 
  1328  0212                     	;# 
  1329  0212                     	;# 
  1330  0213                     	;# 
  1331  0213                     	;# 
  1332  0214                     	;# 
  1333  0214                     	;# 
  1334  0215                     	;# 
  1335  0215                     	;# 
  1336  0215                     	;# 
  1337  0216                     	;# 
  1338  0216                     	;# 
  1339  0217                     	;# 
  1340  0217                     	;# 
  1341  0291                     	;# 
  1342  0291                     	;# 
  1343  0292                     	;# 
  1344  0293                     	;# 
  1345  0294                     	;# 
  1346  0295                     	;# 
  1347  0295                     	;# 
  1348  0296                     	;# 
  1349  0391                     	;# 
  1350  0392                     	;# 
  1351  0393                     	;# 
  1352  039A                     	;# 
  1353  039C                     	;# 
  1354  039D                     	;# 
  1355  039E                     	;# 
  1356  039F                     	;# 
  1357  0FE4                     	;# 
  1358  0FE5                     	;# 
  1359  0FE6                     	;# 
  1360  0FE7                     	;# 
  1361  0FE8                     	;# 
  1362  0FE9                     	;# 
  1363  0FEA                     	;# 
  1364  0FEB                     	;# 
  1365  0FED                     	;# 
  1366  0FEE                     	;# 
  1367  0FEF                     	;# 
  1368                           
  1369 ;; Function _IOCAF5_DefaultInterruptHandler is unused but had its address taken
  1370  0000                     
  1371                           	psect	idataCOMMON
  1372  0236                     __pidataCOMMON:	
  1373                           
  1374                           ;initializer for _dimmLevel
  1375  0236  34DC               	retlw	220
  1376  0237  3405               	retlw	5
  1377                           
  1378                           	psect	nvCOMMON
  1379  0077                     __pnvCOMMON:	
  1380  0077                     _timer1ReloadVal:	
  1381  0077                     	ds	2
  1382                           
  1383                           	psect	nvBANK0
  1384  0028                     __pnvBANK0:	
  1385  0028                     _TMR0_InterruptHandler:	
  1386  0028                     	ds	2
  1387  002A                     _TMR1_InterruptHandler:	
  1388  002A                     	ds	2
  1389  002C                     _IOCAF5_InterruptHandler:	
  1390  002C                     	ds	2
  1391  002E                     _timer0ReloadVal:	
  1392  002E                     	ds	1
  1393  000C                     _PORTAbits	set	12
  1394  0015                     _TMR0	set	21
  1395  0019                     _T1GCONbits	set	25
  1396  0018                     _T1CONbits	set	24
  1397  0016                     _TMR1L	set	22
  1398  0017                     _TMR1H	set	23
  1399  0019                     _T1GCON	set	25
  1400  0018                     _T1CON	set	24
  1401  000B                     _INTCONbits	set	11
  1402  001C                     _T2CONbits	set	28
  1403  001A                     _TMR2	set	26
  1404  001B                     _PR2	set	27
  1405  001C                     _T2CON	set	28
  1406  0011                     _PIR1bits	set	17
  1407  0095                     _OPTION_REG	set	149
  1408  0091                     _PIE1bits	set	145
  1409  0095                     _OPTION_REGbits	set	149
  1410  008C                     _TRISA	set	140
  1411  0097                     _WDTCON	set	151
  1412  0098                     _OSCTUNE	set	152
  1413  0099                     _OSCCON	set	153
  1414  010C                     _LATAbits	set	268
  1415  011D                     _APFCON	set	285
  1416  010C                     _LATA	set	268
  1417  018C                     _ANSELA	set	396
  1418  019A                     _TXREG	set	410
  1419  0199                     _RCREG	set	409
  1420  019D                     _RCSTAbits	set	413
  1421  019C                     _SPBRGH	set	412
  1422  019B                     _SPBRGL	set	411
  1423  019E                     _TXSTA	set	414
  1424  019D                     _RCSTA	set	413
  1425  019F                     _BAUDCON	set	415
  1426  020C                     _WPUA	set	524
  1427  0292                     _CCPR1H	set	658
  1428  0291                     _CCPR1L	set	657
  1429  0296                     _PSTR1CON	set	662
  1430  0294                     _PWM1CON	set	660
  1431  0295                     _ECCP1AS	set	661
  1432  0293                     _CCP1CON	set	659
  1433  039E                     _MDCARL	set	926
  1434  039F                     _MDCARH	set	927
  1435  039D                     _MDSRC	set	925
  1436  039C                     _MDCONbits	set	924
  1437  0391                     _IOCAPbits	set	913
  1438  0392                     _IOCANbits	set	914
  1439  0393                     _IOCAFbits	set	915
  1440                           
  1441                           ; #config settings
  1442  0000                     
  1443                           	psect	cinit
  1444  0021                     start_initialization:	
  1445  0021                     __initialization:	
  1446                           
  1447                           ; Initialize objects allocated to COMMON
  1448  0021  3182  2236  3180   	fcall	__pidataCOMMON	;fetch initializer
  1449  0024  00FB               	movwf	__pdataCOMMON& (0+127)
  1450  0025  3182  2237         	fcall	__pidataCOMMON+1	;fetch initializer
  1451  0027  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
  1452                           
  1453                           ; Clear objects allocated to COMMON
  1454  0028  01F9               	clrf	__pbssCOMMON& (0+127)
  1455  0029  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1456                           
  1457                           ; Clear objects allocated to BANK0
  1458  002A  01AF               	clrf	__pbssBANK0& (0+127)
  1459  002B  01B0               	clrf	(__pbssBANK0+1)& (0+127)
  1460  002C  01B1               	clrf	(__pbssBANK0+2)& (0+127)
  1461  002D  01B2               	clrf	(__pbssBANK0+3)& (0+127)
  1462  002E  01B3               	clrf	(__pbssBANK0+4)& (0+127)
  1463  002F                     end_of_initialization:	
  1464                           ;End of C runtime variable initialization code
  1465                           
  1466  002F                     __end_of__initialization:	
  1467  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1468  0030  0020               	movlb	0
  1469  0031  3180  28CF         	ljmp	_main	;jump to C main() function
  1470                           
  1471                           	psect	bssCOMMON
  1472  0079                     __pbssCOMMON:	
  1473  0079                     _outputStatus:	
  1474  0079                     	ds	1
  1475  007A                     _softUart:	
  1476  007A                     	ds	1
  1477                           
  1478                           	psect	dataCOMMON
  1479  007B                     __pdataCOMMON:	
  1480  007B                     _dimmLevel:	
  1481  007B                     	ds	2
  1482                           
  1483                           	psect	bssBANK0
  1484  002F                     __pbssBANK0:	
  1485  002F                     _object:	
  1486  002F                     	ds	3
  1487  0032                     _TMR2_InterruptHandler:	
  1488  0032                     	ds	2
  1489                           
  1490                           	psect	cstackCOMMON
  1491  0070                     __pcstackCOMMON:	
  1492  0070                     ?_PIN_MANAGER_Initialize:	
  1493  0070                     ?_OSCILLATOR_Initialize:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_WDT_Initialize:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ?_EPWM_Initialize:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_TMR2_Initialize:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ?_TMR1_Initialize:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_DSM_Initialize:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_TMR0_Initialize:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_TMR2_StartTimer:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_TMR0_ISR:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_TMR1_ISR:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_TMR1_DefaultInterruptHandler:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ??_TMR1_DefaultInterruptHandler:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_TMR1_StartTimer:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_TMR1_CallBack:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_TMR0_DefaultInterruptHandler:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ??_TMR0_DefaultInterruptHandler:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_getSoftRX:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ??_getSoftRX:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_EUSART_Initialize:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_EUSART_Write:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_SYSTEM_Initialize:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_DSM_ModulationStart:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_INTERRUPT_InterruptManager:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_TMR1_WriteTimer:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_TMR1_Routine:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_TMR0_CustomISR:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ??_TMR0_CustomISR:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_initSoftUart:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_softUartReady:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_softUartRead:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_main:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     TMR1_WriteTimer@timerVal:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589                           
  1590                           ; 2 bytes @ 0x0
  1591  0070                     	ds	2
  1592  0072                     ??_TMR0_ISR:	
  1593  0072                     ??_TMR1_WriteTimer:	
  1594                           ; 1 bytes @ 0x2
  1595                           
  1596  0072                     ??_TMR1_Routine:	
  1597                           ; 1 bytes @ 0x2
  1598                           
  1599                           
  1600                           ; 1 bytes @ 0x2
  1601  0072                     	ds	4
  1602  0076                     ??_TMR1_ISR:	
  1603  0076                     ??_TMR1_CallBack:	
  1604                           ; 1 bytes @ 0x6
  1605                           
  1606  0076                     ??_INTERRUPT_InterruptManager:	
  1607                           ; 1 bytes @ 0x6
  1608                           
  1609                           
  1610                           ; 1 bytes @ 0x6
  1611  0076                     	ds	1
  1612                           
  1613                           	psect	cstackBANK0
  1614  0020                     __pcstackBANK0:	
  1615  0020                     ??_OSCILLATOR_Initialize:	
  1616  0020                     ??_WDT_Initialize:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0020                     ??_EPWM_Initialize:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0020                     ??_TMR2_Initialize:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0020                     ??_DSM_Initialize:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0020                     ?_IOCAF5_SetInterruptHandler:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0020                     ??_TMR2_StartTimer:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0020                     ?_TMR1_SetInterruptHandler:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0020                     ??_TMR1_StartTimer:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0020                     ?_TMR0_SetInterruptHandler:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0020                     ??_EUSART_Initialize:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0020                     ??_EUSART_Write:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0020                     ??_DSM_ModulationStart:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0020                     ??_softUartReady:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0020                     ??_softUartRead:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0020                     ?___wmul:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661  0020                     EUSART_Write@txData:	
  1662                           ; 2 bytes @ 0x0
  1663                           
  1664  0020                     IOCAF5_SetInterruptHandler@InterruptHandler:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  1668                           ; 2 bytes @ 0x0
  1669                           
  1670  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  1671                           ; 2 bytes @ 0x0
  1672                           
  1673  0020                     ___wmul@multiplier:	
  1674                           ; 2 bytes @ 0x0
  1675                           
  1676                           
  1677                           ; 2 bytes @ 0x0
  1678  0020                     	ds	2
  1679  0022                     ??_PIN_MANAGER_Initialize:	
  1680  0022                     ??_TMR1_Initialize:	
  1681                           ; 1 bytes @ 0x2
  1682                           
  1683  0022                     ??_TMR0_Initialize:	
  1684                           ; 1 bytes @ 0x2
  1685                           
  1686  0022                     ??_IOCAF5_SetInterruptHandler:	
  1687                           ; 1 bytes @ 0x2
  1688                           
  1689  0022                     ??_TMR1_SetInterruptHandler:	
  1690                           ; 1 bytes @ 0x2
  1691                           
  1692  0022                     ??_TMR0_SetInterruptHandler:	
  1693                           ; 1 bytes @ 0x2
  1694                           
  1695  0022                     ??_initSoftUart:	
  1696                           ; 1 bytes @ 0x2
  1697                           
  1698  0022                     ___wmul@multiplicand:	
  1699                           ; 1 bytes @ 0x2
  1700                           
  1701                           
  1702                           ; 2 bytes @ 0x2
  1703  0022                     	ds	1
  1704  0023                     ??_SYSTEM_Initialize:	
  1705                           
  1706                           ; 1 bytes @ 0x3
  1707  0023                     	ds	1
  1708  0024                     ??___wmul:	
  1709  0024                     ___wmul@product:	
  1710                           ; 1 bytes @ 0x4
  1711                           
  1712                           
  1713                           ; 2 bytes @ 0x4
  1714  0024                     	ds	2
  1715  0026                     ??_main:	
  1716                           
  1717                           ; 1 bytes @ 0x6
  1718  0026                     	ds	1
  1719  0027                     main@nCommand:	
  1720                           
  1721                           ; 1 bytes @ 0x7
  1722  0027                     	ds	1
  1723                           
  1724                           	psect	maintext
  1725  00CF                     __pmaintext:	
  1726 ;;
  1727 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1728 ;;
  1729 ;; *************** function _main *****************
  1730 ;; Defined at:
  1731 ;;		line 146 in file "main.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  nCommand        1    7[BANK0 ] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : B1F/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1745 ;;      Params:         0       0       0       0
  1746 ;;      Locals:         0       1       0       0
  1747 ;;      Temps:          0       1       0       0
  1748 ;;      Totals:         0       2       0       0
  1749 ;;Total ram usage:        2 bytes
  1750 ;; Hardware stack levels required when called:    8
  1751 ;; This function calls:
  1752 ;;		_DSM_ModulationStart
  1753 ;;		_EUSART_Write
  1754 ;;		_SYSTEM_Initialize
  1755 ;;		_TMR1_SetInterruptHandler
  1756 ;;		___wmul
  1757 ;;		_initSoftUart
  1758 ;;		_softUartRead
  1759 ;;		_softUartReady
  1760 ;; This function is called by:
  1761 ;;		Startup code after reset
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _main
  1767  00CF                     _main:	
  1768                           
  1769                           ;main.c: 149: SYSTEM_Initialize();
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1773  00CF  3181  212E  3180   	fcall	_SYSTEM_Initialize
  1774                           
  1775                           ;main.c: 155: (INTCONbits.GIE = 1);
  1776  00D2  178B               	bsf	11,7	;volatile
  1777                           
  1778                           ;main.c: 158: (INTCONbits.PEIE = 1);
  1779  00D3  170B               	bsf	11,6	;volatile
  1780                           
  1781                           ;main.c: 159: do { LATAbits.LATA4 = 1; } while(0);
  1782  00D4  0022               	movlb	2	; select bank2
  1783  00D5  160C               	bsf	12,4	;volatile
  1784                           
  1785                           ;main.c: 161: TMR1_SetInterruptHandler(TMR1_Routine);
  1786  00D6  3082               	movlw	low _TMR1_Routine
  1787  00D7  0020               	movlb	0	; select bank0
  1788  00D8  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1789  00D9  3000               	movlw	high _TMR1_Routine
  1790  00DA  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1791  00DB  3182  220B  3180   	fcall	_TMR1_SetInterruptHandler
  1792                           
  1793                           ;main.c: 163: initSoftUart();
  1794  00DE  3181  21D4  3180   	fcall	_initSoftUart
  1795  00E1                     l1651:	
  1796                           ;main.c: 165: while (1)
  1797                           
  1798                           
  1799                           ;main.c: 166: {
  1800                           ;main.c: 167: if(softUartReady())
  1801  00E1  3182  222A  3180   	fcall	_softUartReady
  1802  00E4  3A00               	xorlw	0
  1803  00E5  1903               	skipnz
  1804  00E6  28E1               	goto	l1651
  1805                           
  1806                           ;main.c: 168: {
  1807                           ;main.c: 169: uint8_t nCommand = softUartRead();
  1808  00E7  3182  2222  3180   	fcall	_softUartRead
  1809  00EA  0020               	movlb	0	; select bank0
  1810  00EB  00A6               	movwf	??_main
  1811  00EC  0826               	movf	??_main,w
  1812  00ED  00A7               	movwf	main@nCommand
  1813                           
  1814                           ;main.c: 170: if(nCommand >= '0' && nCommand <= '9')
  1815  00EE  3030               	movlw	48
  1816  00EF  0227               	subwf	main@nCommand,w
  1817  00F0  1C03               	skipc
  1818  00F1  2909               	goto	l1661
  1819  00F2  303A               	movlw	58
  1820  00F3  0227               	subwf	main@nCommand,w
  1821  00F4  1803               	skipnc
  1822  00F5  2909               	goto	l1661
  1823                           
  1824                           ;main.c: 171: dimmLevel = (nCommand - 0x30) * 400;
  1825  00F6  0827               	movf	main@nCommand,w
  1826  00F7  3ED0               	addlw	208
  1827  00F8  00A0               	movwf	___wmul@multiplier
  1828  00F9  30FF               	movlw	255
  1829  00FA  1803               	skipnc
  1830  00FB  3000               	movlw	0
  1831  00FC  00A1               	movwf	___wmul@multiplier+1
  1832  00FD  3090               	movlw	144
  1833  00FE  00A2               	movwf	___wmul@multiplicand
  1834  00FF  3001               	movlw	1
  1835  0100  00A3               	movwf	___wmul@multiplicand+1
  1836  0101  3181  2112  3180   	fcall	___wmul
  1837  0104  0020               	movlb	0	; select bank0
  1838  0105  0821               	movf	?___wmul+1,w
  1839  0106  00FC               	movwf	_dimmLevel+1	;volatile
  1840  0107  0820               	movf	?___wmul,w
  1841  0108  00FB               	movwf	_dimmLevel	;volatile
  1842  0109                     l1661:	
  1843                           
  1844                           ;main.c: 173: DSM_ModulationStart();
  1845  0109  3182  2233  3180   	fcall	_DSM_ModulationStart
  1846                           
  1847                           ;main.c: 174: EUSART_Write(nCommand);
  1848  010C  0020               	movlb	0	; select bank0
  1849  010D  0827               	movf	main@nCommand,w
  1850  010E  3181  21FC  3180   	fcall	_EUSART_Write
  1851  0111  28E1               	goto	l1651
  1852  0112                     __end_of_main:	
  1853                           
  1854                           	psect	text1
  1855  022A                     __ptext1:	
  1856 ;; *************** function _softUartReady *****************
  1857 ;; Defined at:
  1858 ;;		line 132 in file "main.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      unsigned char 
  1865 ;; Registers used:
  1866 ;;		wreg
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1872 ;;      Params:         0       0       0       0
  1873 ;;      Locals:         0       0       0       0
  1874 ;;      Temps:          0       0       0       0
  1875 ;;      Totals:         0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    5
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _softUartReady
  1888  022A                     _softUartReady:	
  1889                           
  1890                           ;main.c: 134: return object.dataReady;
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _softUartReady: [wreg]
  1894  022A  0020               	movlb	0	; select bank0
  1895  022B  0831               	movf	_object+2,w	;volatile
  1896  022C  0008               	return
  1897  022D                     __end_of_softUartReady:	
  1898                           
  1899                           	psect	text2
  1900  0222                     __ptext2:	
  1901 ;; *************** function _softUartRead *****************
  1902 ;; Defined at:
  1903 ;;		line 137 in file "main.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      unsigned char 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1917 ;;      Params:         0       0       0       0
  1918 ;;      Locals:         0       0       0       0
  1919 ;;      Temps:          0       0       0       0
  1920 ;;      Totals:         0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    5
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _softUartRead
  1933  0222                     _softUartRead:	
  1934                           
  1935                           ;main.c: 139: object.dataReady = 0;
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _softUartRead: [wreg+status,2]
  1939  0222  0020               	movlb	0	; select bank0
  1940  0223  01B1               	clrf	_object+2	;volatile
  1941                           
  1942                           ;main.c: 140: return object.data;
  1943  0224  082F               	movf	_object,w	;volatile
  1944  0225  0008               	return
  1945  0226                     __end_of_softUartRead:	
  1946                           
  1947                           	psect	text3
  1948  01D4                     __ptext3:	
  1949 ;; *************** function _initSoftUart *****************
  1950 ;; Defined at:
  1951 ;;		line 116 in file "main.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1965 ;;      Params:         0       0       0       0
  1966 ;;      Locals:         0       0       0       0
  1967 ;;      Temps:          0       0       0       0
  1968 ;;      Totals:         0       0       0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    6
  1972 ;; This function calls:
  1973 ;;		_TMR0_SetInterruptHandler
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           
  1980                           ;psect for function _initSoftUart
  1981  01D4                     _initSoftUart:	
  1982                           
  1983                           ;main.c: 118: object.bitIndex = 0;
  1984                           
  1985                           ;incstack = 0
  1986                           ; Regs used in _initSoftUart: [wreg+status,2+status,0+pclath+cstack]
  1987  01D4  0020               	movlb	0	; select bank0
  1988  01D5  01B0               	clrf	_object+1	;volatile
  1989                           
  1990                           ;main.c: 119: object.data = 0;
  1991  01D6  01AF               	clrf	_object	;volatile
  1992                           
  1993                           ;main.c: 120: object.dataReady = 0;
  1994  01D7  01B1               	clrf	_object+2	;volatile
  1995                           
  1996                           ;main.c: 121: TMR0_SetInterruptHandler(TMR0_CustomISR);
  1997  01D8  3033               	movlw	low _TMR0_CustomISR
  1998  01D9  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1999  01DA  3000               	movlw	high _TMR0_CustomISR
  2000  01DB  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2001  01DC  3182  2211         	fcall	_TMR0_SetInterruptHandler
  2002  01DE  0008               	return
  2003  01DF                     __end_of_initSoftUart:	
  2004                           
  2005                           	psect	text4
  2006  0112                     __ptext4:	
  2007 ;; *************** function ___wmul *****************
  2008 ;; Defined at:
  2009 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2012 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  product         2    4[BANK0 ] unsigned int 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  2    0[BANK0 ] unsigned int 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2024 ;;      Params:         0       4       0       0
  2025 ;;      Locals:         0       2       0       0
  2026 ;;      Temps:          0       0       0       0
  2027 ;;      Totals:         0       6       0       0
  2028 ;;Total ram usage:        6 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    5
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function ___wmul
  2040  0112                     ___wmul:	
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2044  0112  0020               	movlb	0	; select bank0
  2045  0113  01A4               	clrf	___wmul@product
  2046  0114  01A5               	clrf	___wmul@product+1
  2047  0115                     l1631:	
  2048  0115  1C20               	btfss	___wmul@multiplier,0
  2049  0116  291B               	goto	l499
  2050  0117  0822               	movf	___wmul@multiplicand,w
  2051  0118  07A4               	addwf	___wmul@product,f
  2052  0119  0823               	movf	___wmul@multiplicand+1,w
  2053  011A  3DA5               	addwfc	___wmul@product+1,f
  2054  011B                     l499:	
  2055  011B  3001               	movlw	1
  2056  011C                     u715:	
  2057  011C  35A2               	lslf	___wmul@multiplicand,f
  2058  011D  0DA3               	rlf	___wmul@multiplicand+1,f
  2059  011E  0B89               	decfsz	9,f
  2060  011F  291C               	goto	u715
  2061  0120  3001               	movlw	1
  2062  0121                     u725:	
  2063  0121  36A1               	lsrf	___wmul@multiplier+1,f
  2064  0122  0CA0               	rrf	___wmul@multiplier,f
  2065  0123  0B89               	decfsz	9,f
  2066  0124  2921               	goto	u725
  2067  0125  0820               	movf	___wmul@multiplier,w
  2068  0126  0421               	iorwf	___wmul@multiplier+1,w
  2069  0127  1D03               	btfss	3,2
  2070  0128  2915               	goto	l1631
  2071  0129  0825               	movf	___wmul@product+1,w
  2072  012A  00A1               	movwf	?___wmul+1
  2073  012B  0824               	movf	___wmul@product,w
  2074  012C  00A0               	movwf	?___wmul
  2075  012D  0008               	return
  2076  012E                     __end_of___wmul:	
  2077                           
  2078                           	psect	text5
  2079  012E                     __ptext5:	
  2080 ;; *************** function _SYSTEM_Initialize *****************
  2081 ;; Defined at:
  2082 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, pclath, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2096 ;;      Params:         0       0       0       0
  2097 ;;      Locals:         0       0       0       0
  2098 ;;      Temps:          0       0       0       0
  2099 ;;      Totals:         0       0       0       0
  2100 ;;Total ram usage:        0 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    7
  2103 ;; This function calls:
  2104 ;;		_DSM_Initialize
  2105 ;;		_EPWM_Initialize
  2106 ;;		_EUSART_Initialize
  2107 ;;		_OSCILLATOR_Initialize
  2108 ;;		_PIN_MANAGER_Initialize
  2109 ;;		_TMR0_Initialize
  2110 ;;		_TMR1_Initialize
  2111 ;;		_TMR2_Initialize
  2112 ;;		_WDT_Initialize
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           
  2119                           ;psect for function _SYSTEM_Initialize
  2120  012E                     _SYSTEM_Initialize:	
  2121                           
  2122                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  2123                           
  2124                           ;incstack = 0
  2125                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2126  012E  3181  2149  3181   	fcall	_PIN_MANAGER_Initialize
  2127                           
  2128                           ;mcc.c: 73: OSCILLATOR_Initialize();
  2129  0131  3182  221D  3181   	fcall	_OSCILLATOR_Initialize
  2130                           
  2131                           ;mcc.c: 74: WDT_Initialize();
  2132  0134  3182  2226  3181   	fcall	_WDT_Initialize
  2133                           
  2134                           ;mcc.c: 75: EPWM_Initialize();
  2135  0137  3181  21BC  3181   	fcall	_EPWM_Initialize
  2136                           
  2137                           ;mcc.c: 76: TMR2_Initialize();
  2138  013A  3181  21EA  3181   	fcall	_TMR2_Initialize
  2139                           
  2140                           ;mcc.c: 77: TMR1_Initialize();
  2141  013D  3181  2164  3181   	fcall	_TMR1_Initialize
  2142                           
  2143                           ;mcc.c: 78: DSM_Initialize();
  2144  0140  3181  21C8  3181   	fcall	_DSM_Initialize
  2145                           
  2146                           ;mcc.c: 79: TMR0_Initialize();
  2147  0143  3181  217E  3181   	fcall	_TMR0_Initialize
  2148                           
  2149                           ;mcc.c: 80: EUSART_Initialize();
  2150  0146  3181  21B0         	fcall	_EUSART_Initialize
  2151  0148  0008               	return
  2152  0149                     __end_of_SYSTEM_Initialize:	
  2153                           
  2154                           	psect	text6
  2155  0226                     __ptext6:	
  2156 ;; *************** function _WDT_Initialize *****************
  2157 ;; Defined at:
  2158 ;;		line 91 in file "mcc_generated_files/mcc.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2172 ;;      Params:         0       0       0       0
  2173 ;;      Locals:         0       0       0       0
  2174 ;;      Temps:          0       0       0       0
  2175 ;;      Totals:         0       0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    5
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_SYSTEM_Initialize
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _WDT_Initialize
  2188  0226                     _WDT_Initialize:	
  2189                           
  2190                           ;mcc.c: 94: WDTCON = 0x16;
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _WDT_Initialize: [wreg]
  2194  0226  3016               	movlw	22
  2195  0227  0021               	movlb	1	; select bank1
  2196  0228  0097               	movwf	23	;volatile
  2197  0229  0008               	return
  2198  022A                     __end_of_WDT_Initialize:	
  2199                           
  2200                           	psect	text7
  2201  01EA                     __ptext7:	
  2202 ;; *************** function _TMR2_Initialize *****************
  2203 ;; Defined at:
  2204 ;;		line 23 in file "mcc_generated_files/tmr2.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2218 ;;      Params:         0       0       0       0
  2219 ;;      Locals:         0       0       0       0
  2220 ;;      Temps:          0       0       0       0
  2221 ;;      Totals:         0       0       0       0
  2222 ;;Total ram usage:        0 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    6
  2225 ;; This function calls:
  2226 ;;		_TMR2_StartTimer
  2227 ;; This function is called by:
  2228 ;;		_SYSTEM_Initialize
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function _TMR2_Initialize
  2234  01EA                     _TMR2_Initialize:	
  2235                           
  2236                           ;tmr2.c: 28: T2CON = 0x00;
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2240  01EA  0020               	movlb	0	; select bank0
  2241  01EB  019C               	clrf	28	;volatile
  2242                           
  2243                           ;tmr2.c: 31: PR2 = 0x68;
  2244  01EC  3068               	movlw	104
  2245  01ED  009B               	movwf	27	;volatile
  2246                           
  2247                           ;tmr2.c: 34: TMR2 = 0x00;
  2248  01EE  019A               	clrf	26	;volatile
  2249                           
  2250                           ;tmr2.c: 37: PIR1bits.TMR2IF = 0;
  2251  01EF  1091               	bcf	17,1	;volatile
  2252                           
  2253                           ;tmr2.c: 40: TMR2_StartTimer();
  2254  01F0  3182  222D         	fcall	_TMR2_StartTimer
  2255  01F2  0008               	return
  2256  01F3                     __end_of_TMR2_Initialize:	
  2257                           
  2258                           	psect	text8
  2259  022D                     __ptext8:	
  2260 ;; *************** function _TMR2_StartTimer *****************
  2261 ;; Defined at:
  2262 ;;		line 43 in file "mcc_generated_files/tmr2.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		None
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2276 ;;      Params:         0       0       0       0
  2277 ;;      Locals:         0       0       0       0
  2278 ;;      Temps:          0       0       0       0
  2279 ;;      Totals:         0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    5
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_TMR2_Initialize
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function _TMR2_StartTimer
  2292  022D                     _TMR2_StartTimer:	
  2293                           
  2294                           ;tmr2.c: 46: T2CONbits.TMR2ON = 1;
  2295                           
  2296                           ;incstack = 0
  2297                           ; Regs used in _TMR2_StartTimer: []
  2298  022D  0020               	movlb	0	; select bank0
  2299  022E  151C               	bsf	28,2	;volatile
  2300  022F  0008               	return
  2301  0230                     __end_of_TMR2_StartTimer:	
  2302                           
  2303                           	psect	text9
  2304  0164                     __ptext9:	
  2305 ;; *************** function _TMR1_Initialize *****************
  2306 ;; Defined at:
  2307 ;;		line 24 in file "mcc_generated_files/tmr1.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0, pclath, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2321 ;;      Params:         0       0       0       0
  2322 ;;      Locals:         0       0       0       0
  2323 ;;      Temps:          0       0       0       0
  2324 ;;      Totals:         0       0       0       0
  2325 ;;Total ram usage:        0 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    6
  2328 ;; This function calls:
  2329 ;;		_TMR1_SetInterruptHandler
  2330 ;;		_TMR1_StartTimer
  2331 ;; This function is called by:
  2332 ;;		_SYSTEM_Initialize
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           
  2337                           ;psect for function _TMR1_Initialize
  2338  0164                     _TMR1_Initialize:	
  2339                           
  2340                           ;tmr1.c: 29: T1CON = 0x04;
  2341                           
  2342                           ;incstack = 0
  2343                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2344  0164  3004               	movlw	4
  2345  0165  0020               	movlb	0	; select bank0
  2346  0166  0098               	movwf	24	;volatile
  2347                           
  2348                           ;tmr1.c: 32: T1GCON = 0x00;
  2349  0167  0199               	clrf	25	;volatile
  2350                           
  2351                           ;tmr1.c: 35: TMR1H = 0x63;
  2352  0168  3063               	movlw	99
  2353  0169  0097               	movwf	23	;volatile
  2354                           
  2355                           ;tmr1.c: 38: TMR1L = 0xC0;
  2356  016A  30C0               	movlw	192
  2357  016B  0096               	movwf	22	;volatile
  2358                           
  2359                           ;tmr1.c: 41: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  2360  016C  0817               	movf	23,w	;volatile
  2361  016D  00F8               	movwf	_timer1ReloadVal+1	;volatile
  2362  016E  0816               	movf	22,w	;volatile
  2363  016F  00F7               	movwf	_timer1ReloadVal	;volatile
  2364                           
  2365                           ;tmr1.c: 44: PIR1bits.TMR1IF = 0;
  2366  0170  1011               	bcf	17,0	;volatile
  2367                           
  2368                           ;tmr1.c: 47: PIE1bits.TMR1IE = 1;
  2369  0171  0021               	movlb	1	; select bank1
  2370  0172  1411               	bsf	17,0	;volatile
  2371                           
  2372                           ;tmr1.c: 50: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2373  0173  3038               	movlw	low _TMR1_DefaultInterruptHandler
  2374  0174  0020               	movlb	0	; select bank0
  2375  0175  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2376  0176  3002               	movlw	high _TMR1_DefaultInterruptHandler
  2377  0177  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2378  0178  3182  220B  3181   	fcall	_TMR1_SetInterruptHandler
  2379                           
  2380                           ;tmr1.c: 53: TMR1_StartTimer();
  2381  017B  3182  2230         	fcall	_TMR1_StartTimer
  2382  017D  0008               	return
  2383  017E                     __end_of_TMR1_Initialize:	
  2384                           
  2385                           	psect	text10
  2386  0230                     __ptext10:	
  2387 ;; *************** function _TMR1_StartTimer *****************
  2388 ;; Defined at:
  2389 ;;		line 56 in file "mcc_generated_files/tmr1.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		None
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2403 ;;      Params:         0       0       0       0
  2404 ;;      Locals:         0       0       0       0
  2405 ;;      Temps:          0       0       0       0
  2406 ;;      Totals:         0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    5
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_TMR1_Initialize
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _TMR1_StartTimer
  2419  0230                     _TMR1_StartTimer:	
  2420                           
  2421                           ;tmr1.c: 59: T1CONbits.TMR1ON = 1;
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _TMR1_StartTimer: []
  2425  0230  0020               	movlb	0	; select bank0
  2426  0231  1418               	bsf	24,0	;volatile
  2427  0232  0008               	return
  2428  0233                     __end_of_TMR1_StartTimer:	
  2429                           
  2430                           	psect	text11
  2431  020B                     __ptext11:	
  2432 ;; *************** function _TMR1_SetInterruptHandler *****************
  2433 ;; Defined at:
  2434 ;;		line 139 in file "mcc_generated_files/tmr1.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  2437 ;;		 -> TMR1_Routine(1), TMR1_DefaultInterruptHandler(1), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2449 ;;      Params:         0       2       0       0
  2450 ;;      Locals:         0       0       0       0
  2451 ;;      Temps:          0       0       0       0
  2452 ;;      Totals:         0       2       0       0
  2453 ;;Total ram usage:        2 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    5
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_TMR1_Initialize
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _TMR1_SetInterruptHandler
  2466  020B                     _TMR1_SetInterruptHandler:	
  2467                           
  2468                           ;tmr1.c: 140: TMR1_InterruptHandler = InterruptHandler;
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  2472  020B  0020               	movlb	0	; select bank0
  2473  020C  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  2474  020D  00AB               	movwf	_TMR1_InterruptHandler+1
  2475  020E  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  2476  020F  00AA               	movwf	_TMR1_InterruptHandler
  2477  0210  0008               	return
  2478  0211                     __end_of_TMR1_SetInterruptHandler:	
  2479                           
  2480                           	psect	text12
  2481  017E                     __ptext12:	
  2482 ;; *************** function _TMR0_Initialize *****************
  2483 ;; Defined at:
  2484 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2498 ;;      Params:         0       0       0       0
  2499 ;;      Locals:         0       0       0       0
  2500 ;;      Temps:          0       1       0       0
  2501 ;;      Totals:         0       1       0       0
  2502 ;;Total ram usage:        1 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    6
  2505 ;; This function calls:
  2506 ;;		_TMR0_SetInterruptHandler
  2507 ;; This function is called by:
  2508 ;;		_SYSTEM_Initialize
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _TMR0_Initialize
  2514  017E                     _TMR0_Initialize:	
  2515                           
  2516                           ;tmr0.c: 68: OPTION_REG = (OPTION_REG & 0xC0) | 0xD1 & 0x3F;
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2520  017E  0021               	movlb	1	; select bank1
  2521  017F  0815               	movf	21,w	;volatile
  2522  0180  39C0               	andlw	192
  2523  0181  3811               	iorlw	17
  2524  0182  0095               	movwf	21	;volatile
  2525                           
  2526                           ;tmr0.c: 71: TMR0 = 0x98;
  2527  0183  3098               	movlw	152
  2528  0184  0020               	movlb	0	; select bank0
  2529  0185  0095               	movwf	21	;volatile
  2530                           
  2531                           ;tmr0.c: 74: timer0ReloadVal= 152;
  2532  0186  3098               	movlw	152
  2533  0187  00A2               	movwf	??_TMR0_Initialize
  2534  0188  0822               	movf	??_TMR0_Initialize,w
  2535  0189  00AE               	movwf	_timer0ReloadVal	;volatile
  2536                           
  2537                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  2538  018A  110B               	bcf	11,2	;volatile
  2539                           
  2540                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  2541  018B  168B               	bsf	11,5	;volatile
  2542                           
  2543                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2544  018C  3039               	movlw	low _TMR0_DefaultInterruptHandler
  2545  018D  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2546  018E  3002               	movlw	high _TMR0_DefaultInterruptHandler
  2547  018F  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2548  0190  3182  2211         	fcall	_TMR0_SetInterruptHandler
  2549  0192  0008               	return
  2550  0193                     __end_of_TMR0_Initialize:	
  2551                           
  2552                           	psect	text13
  2553  0211                     __ptext13:	
  2554 ;; *************** function _TMR0_SetInterruptHandler *****************
  2555 ;; Defined at:
  2556 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  2559 ;;		 -> TMR0_CustomISR(1), TMR0_DefaultInterruptHandler(1), 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2571 ;;      Params:         0       2       0       0
  2572 ;;      Locals:         0       0       0       0
  2573 ;;      Temps:          0       0       0       0
  2574 ;;      Totals:         0       2       0       0
  2575 ;;Total ram usage:        2 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    5
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_TMR0_Initialize
  2582 ;;		_initSoftUart
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _TMR0_SetInterruptHandler
  2588  0211                     _TMR0_SetInterruptHandler:	
  2589                           
  2590                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  2591                           
  2592                           ;incstack = 0
  2593                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2594  0211  0020               	movlb	0	; select bank0
  2595  0212  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2596  0213  00A9               	movwf	_TMR0_InterruptHandler+1
  2597  0214  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2598  0215  00A8               	movwf	_TMR0_InterruptHandler
  2599  0216  0008               	return
  2600  0217                     __end_of_TMR0_SetInterruptHandler:	
  2601                           
  2602                           	psect	text14
  2603  0149                     __ptext14:	
  2604 ;; *************** function _PIN_MANAGER_Initialize *****************
  2605 ;; Defined at:
  2606 ;;		line 53 in file "mcc_generated_files/pin_manager.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, pclath, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2620 ;;      Params:         0       0       0       0
  2621 ;;      Locals:         0       0       0       0
  2622 ;;      Temps:          0       0       0       0
  2623 ;;      Totals:         0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    6
  2627 ;; This function calls:
  2628 ;;		_IOCAF5_SetInterruptHandler
  2629 ;; This function is called by:
  2630 ;;		_SYSTEM_Initialize
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           
  2635                           ;psect for function _PIN_MANAGER_Initialize
  2636  0149                     _PIN_MANAGER_Initialize:	
  2637                           
  2638                           ;pin_manager.c: 58: LATA = 0x00;
  2639                           
  2640                           ;incstack = 0
  2641                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2642  0149  0022               	movlb	2	; select bank2
  2643  014A  018C               	clrf	12	;volatile
  2644                           
  2645                           ;pin_manager.c: 63: TRISA = 0x2A;
  2646  014B  302A               	movlw	42
  2647  014C  0021               	movlb	1	; select bank1
  2648  014D  008C               	movwf	12	;volatile
  2649                           
  2650                           ;pin_manager.c: 68: ANSELA = 0x10;
  2651  014E  3010               	movlw	16
  2652  014F  0023               	movlb	3	; select bank3
  2653  0150  008C               	movwf	12	;volatile
  2654                           
  2655                           ;pin_manager.c: 73: WPUA = 0x3F;
  2656  0151  303F               	movlw	63
  2657  0152  0024               	movlb	4	; select bank4
  2658  0153  008C               	movwf	12	;volatile
  2659                           
  2660                           ;pin_manager.c: 74: OPTION_REGbits.nWPUEN = 0;
  2661  0154  0021               	movlb	1	; select bank1
  2662  0155  1395               	bcf	21,7	;volatile
  2663                           
  2664                           ;pin_manager.c: 80: APFCON = 0x00;
  2665  0156  0022               	movlb	2	; select bank2
  2666  0157  019D               	clrf	29	;volatile
  2667                           
  2668                           ;pin_manager.c: 86: IOCAFbits.IOCAF5 = 0;
  2669  0158  0027               	movlb	7	; select bank7
  2670  0159  1293               	bcf	19,5	;volatile
  2671                           
  2672                           ;pin_manager.c: 88: IOCANbits.IOCAN5 = 1;
  2673  015A  1692               	bsf	18,5	;volatile
  2674                           
  2675                           ;pin_manager.c: 90: IOCAPbits.IOCAP5 = 1;
  2676  015B  1691               	bsf	17,5	;volatile
  2677                           
  2678                           ;pin_manager.c: 93: IOCAF5_SetInterruptHandler(IOCAF5_DefaultInterruptHandler);
  2679  015C  3000               	movlw	0
  2680  015D  0020               	movlb	0	; select bank0
  2681  015E  00A0               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler
  2682  015F  3000               	movlw	0
  2683  0160  00A1               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler+1
  2684  0161  3182  2217         	fcall	_IOCAF5_SetInterruptHandler
  2685  0163  0008               	return
  2686  0164                     __end_of_PIN_MANAGER_Initialize:	
  2687                           
  2688                           	psect	text15
  2689  0217                     __ptext15:	
  2690 ;; *************** function _IOCAF5_SetInterruptHandler *****************
  2691 ;; Defined at:
  2692 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  2695 ;;		 -> IOCAF5_DefaultInterruptHandler(1), 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2707 ;;      Params:         0       2       0       0
  2708 ;;      Locals:         0       0       0       0
  2709 ;;      Temps:          0       0       0       0
  2710 ;;      Totals:         0       2       0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    5
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_PIN_MANAGER_Initialize
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _IOCAF5_SetInterruptHandler
  2723  0217                     _IOCAF5_SetInterruptHandler:	
  2724                           
  2725                           ;pin_manager.c: 128: IOCAF5_InterruptHandler = InterruptHandler;
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _IOCAF5_SetInterruptHandler: [wreg]
  2729  0217  0020               	movlb	0	; select bank0
  2730  0218  0821               	movf	IOCAF5_SetInterruptHandler@InterruptHandler+1,w
  2731  0219  00AD               	movwf	_IOCAF5_InterruptHandler+1
  2732  021A  0820               	movf	IOCAF5_SetInterruptHandler@InterruptHandler,w
  2733  021B  00AC               	movwf	_IOCAF5_InterruptHandler
  2734  021C  0008               	return
  2735  021D                     __end_of_IOCAF5_SetInterruptHandler:	
  2736                           
  2737                           	psect	text16
  2738  021D                     __ptext16:	
  2739 ;; *************** function _OSCILLATOR_Initialize *****************
  2740 ;; Defined at:
  2741 ;;		line 83 in file "mcc_generated_files/mcc.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2755 ;;      Params:         0       0       0       0
  2756 ;;      Locals:         0       0       0       0
  2757 ;;      Temps:          0       0       0       0
  2758 ;;      Totals:         0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    5
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_SYSTEM_Initialize
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function _OSCILLATOR_Initialize
  2771  021D                     _OSCILLATOR_Initialize:	
  2772                           
  2773                           ;mcc.c: 86: OSCCON = 0x78;
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2777  021D  3078               	movlw	120
  2778  021E  0021               	movlb	1	; select bank1
  2779  021F  0099               	movwf	25	;volatile
  2780                           
  2781                           ;mcc.c: 88: OSCTUNE = 0x00;
  2782  0220  0198               	clrf	24	;volatile
  2783  0221  0008               	return
  2784  0222                     __end_of_OSCILLATOR_Initialize:	
  2785                           
  2786                           	psect	text17
  2787  01B0                     __ptext17:	
  2788 ;; *************** function _EUSART_Initialize *****************
  2789 ;; Defined at:
  2790 ;;		line 55 in file "mcc_generated_files/eusart.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2804 ;;      Params:         0       0       0       0
  2805 ;;      Locals:         0       0       0       0
  2806 ;;      Temps:          0       0       0       0
  2807 ;;      Totals:         0       0       0       0
  2808 ;;Total ram usage:        0 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    5
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_SYSTEM_Initialize
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function _EUSART_Initialize
  2820  01B0                     _EUSART_Initialize:	
  2821                           
  2822                           ;eusart.c: 60: BAUDCON = 0x08;
  2823                           
  2824                           ;incstack = 0
  2825                           ; Regs used in _EUSART_Initialize: [wreg]
  2826  01B0  3008               	movlw	8
  2827  01B1  0023               	movlb	3	; select bank3
  2828  01B2  009F               	movwf	31	;volatile
  2829                           
  2830                           ;eusart.c: 63: RCSTA = 0x90;
  2831  01B3  3090               	movlw	144
  2832  01B4  009D               	movwf	29	;volatile
  2833                           
  2834                           ;eusart.c: 66: TXSTA = 0x24;
  2835  01B5  3024               	movlw	36
  2836  01B6  009E               	movwf	30	;volatile
  2837                           
  2838                           ;eusart.c: 69: SPBRGL = 0x82;
  2839  01B7  3082               	movlw	130
  2840  01B8  009B               	movwf	27	;volatile
  2841                           
  2842                           ;eusart.c: 72: SPBRGH = 0x06;
  2843  01B9  3006               	movlw	6
  2844  01BA  009C               	movwf	28	;volatile
  2845  01BB  0008               	return
  2846  01BC                     __end_of_EUSART_Initialize:	
  2847                           
  2848                           	psect	text18
  2849  01BC                     __ptext18:	
  2850 ;; *************** function _EPWM_Initialize *****************
  2851 ;; Defined at:
  2852 ;;		line 24 in file "mcc_generated_files/epwm.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;		None
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2866 ;;      Params:         0       0       0       0
  2867 ;;      Locals:         0       0       0       0
  2868 ;;      Temps:          0       0       0       0
  2869 ;;      Totals:         0       0       0       0
  2870 ;;Total ram usage:        0 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    5
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_SYSTEM_Initialize
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           
  2881                           ;psect for function _EPWM_Initialize
  2882  01BC                     _EPWM_Initialize:	
  2883                           
  2884                           ;epwm.c: 29: CCP1CON = 0x1C;
  2885                           
  2886                           ;incstack = 0
  2887                           ; Regs used in _EPWM_Initialize: [wreg+status,2]
  2888  01BC  301C               	movlw	28
  2889  01BD  0025               	movlb	5	; select bank5
  2890  01BE  0093               	movwf	19	;volatile
  2891                           
  2892                           ;epwm.c: 32: ECCP1AS = 0x00;
  2893  01BF  0195               	clrf	21	;volatile
  2894                           
  2895                           ;epwm.c: 35: PWM1CON = 0x99;
  2896  01C0  3099               	movlw	153
  2897  01C1  0094               	movwf	20	;volatile
  2898                           
  2899                           ;epwm.c: 38: PSTR1CON = 0x11;
  2900  01C2  3011               	movlw	17
  2901  01C3  0096               	movwf	22	;volatile
  2902                           
  2903                           ;epwm.c: 41: CCPR1L = 0x34;
  2904  01C4  3034               	movlw	52
  2905  01C5  0091               	movwf	17	;volatile
  2906                           
  2907                           ;epwm.c: 44: CCPR1H = 0x00;
  2908  01C6  0192               	clrf	18	;volatile
  2909  01C7  0008               	return
  2910  01C8                     __end_of_EPWM_Initialize:	
  2911                           
  2912                           	psect	text19
  2913  01C8                     __ptext19:	
  2914 ;; *************** function _DSM_Initialize *****************
  2915 ;; Defined at:
  2916 ;;		line 57 in file "mcc_generated_files/dsm.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2930 ;;      Params:         0       0       0       0
  2931 ;;      Locals:         0       0       0       0
  2932 ;;      Temps:          0       0       0       0
  2933 ;;      Totals:         0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    5
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_SYSTEM_Initialize
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           
  2945                           ;psect for function _DSM_Initialize
  2946  01C8                     _DSM_Initialize:	
  2947                           
  2948                           ;dsm.c: 62: MDCONbits.MDOE = 1;
  2949                           
  2950                           ;incstack = 0
  2951                           ; Regs used in _DSM_Initialize: [wreg]
  2952  01C8  0027               	movlb	7	; select bank7
  2953  01C9  171C               	bsf	28,6	;volatile
  2954                           
  2955                           ;dsm.c: 65: MDCONbits.MDSLR = 1;
  2956  01CA  169C               	bsf	28,5	;volatile
  2957                           
  2958                           ;dsm.c: 68: MDCONbits.MDOPOL = 0;
  2959  01CB  121C               	bcf	28,4	;volatile
  2960                           
  2961                           ;dsm.c: 71: MDSRC = 0x8A;
  2962  01CC  308A               	movlw	138
  2963  01CD  009D               	movwf	29	;volatile
  2964                           
  2965                           ;dsm.c: 74: MDCARH = 0x80;
  2966  01CE  3080               	movlw	128
  2967  01CF  009F               	movwf	31	;volatile
  2968                           
  2969                           ;dsm.c: 77: MDCARL = 0xA4;
  2970  01D0  30A4               	movlw	164
  2971  01D1  009E               	movwf	30	;volatile
  2972                           
  2973                           ;dsm.c: 81: MDCONbits.MDEN = 1;
  2974  01D2  179C               	bsf	28,7	;volatile
  2975  01D3  0008               	return
  2976  01D4                     __end_of_DSM_Initialize:	
  2977                           
  2978                           	psect	text20
  2979  01FC                     __ptext20:	
  2980 ;; *************** function _EUSART_Write *****************
  2981 ;; Defined at:
  2982 ;;		line 96 in file "mcc_generated_files/eusart.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  txData          1    wreg     unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  txData          1    0[BANK0 ] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2996 ;;      Params:         0       0       0       0
  2997 ;;      Locals:         0       1       0       0
  2998 ;;      Temps:          0       0       0       0
  2999 ;;      Totals:         0       1       0       0
  3000 ;;Total ram usage:        1 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    5
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _EUSART_Write
  3012  01FC                     _EUSART_Write:	
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _EUSART_Write: [wreg]
  3016                           ;EUSART_Write@txData stored from wreg
  3017  01FC  0020               	movlb	0	; select bank0
  3018  01FD  00A0               	movwf	EUSART_Write@txData
  3019  01FE                     l31:	
  3020                           ;eusart.c: 99: {
  3021                           
  3022                           ;eusart.c: 98: while(0 == PIR1bits.TXIF)
  3023                           
  3024  01FE  1E11               	btfss	17,4	;volatile
  3025  01FF  29FE               	goto	l31
  3026                           
  3027                           ;eusart.c: 100: }
  3028                           ;eusart.c: 102: TXREG = txData;
  3029  0200  0820               	movf	EUSART_Write@txData,w
  3030  0201  0023               	movlb	3	; select bank3
  3031  0202  009A               	movwf	26	;volatile
  3032  0203  0008               	return
  3033  0204                     __end_of_EUSART_Write:	
  3034                           
  3035                           	psect	text21
  3036  0233                     __ptext21:	
  3037 ;; *************** function _DSM_ModulationStart *****************
  3038 ;; Defined at:
  3039 ;;		line 103 in file "mcc_generated_files/dsm.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		None
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3053 ;;      Params:         0       0       0       0
  3054 ;;      Locals:         0       0       0       0
  3055 ;;      Temps:          0       0       0       0
  3056 ;;      Totals:         0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    5
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _DSM_ModulationStart
  3069  0233                     _DSM_ModulationStart:	
  3070                           
  3071                           ;dsm.c: 106: MDCONbits.MDEN = 1;
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _DSM_ModulationStart: []
  3075  0233  0027               	movlb	7	; select bank7
  3076  0234  179C               	bsf	28,7	;volatile
  3077  0235  0008               	return
  3078  0236                     __end_of_DSM_ModulationStart:	
  3079                           
  3080                           	psect	intentry
  3081  0004                     __pintentry:	
  3082 ;; *************** function _INTERRUPT_InterruptManager *****************
  3083 ;; Defined at:
  3084 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3098 ;;      Params:         0       0       0       0
  3099 ;;      Locals:         0       0       0       0
  3100 ;;      Temps:          1       0       0       0
  3101 ;;      Totals:         1       0       0       0
  3102 ;;Total ram usage:        1 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    4
  3105 ;; This function calls:
  3106 ;;		_TMR0_ISR
  3107 ;;		_TMR1_ISR
  3108 ;; This function is called by:
  3109 ;;		Interrupt level 1
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113  0004                     _INTERRUPT_InterruptManager:	
  3114                           
  3115                           ;incstack = 0
  3116  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3117                           
  3118                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3119  0005  3180               	pagesel	$
  3120  0006  0020               	movlb	0	; select bank0
  3121  0007  087F               	movf	127,w
  3122  0008  00F6               	movwf	??_INTERRUPT_InterruptManager
  3123                           
  3124                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3125  0009  1A8B               	btfsc	11,5	;volatile
  3126  000A  1D0B               	btfss	11,2	;volatile
  3127  000B  2810               	goto	i1l209
  3128                           
  3129                           ;interrupt_manager.c: 55: {
  3130                           ;interrupt_manager.c: 56: TMR0_ISR();
  3131  000C  3181  21A2  3180   	fcall	_TMR0_ISR
  3132                           
  3133                           ;interrupt_manager.c: 57: }
  3134  000F  281A               	goto	i1l213
  3135  0010                     i1l209:	
  3136                           
  3137                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  3138  0010  1F0B               	btfss	11,6	;volatile
  3139  0011  281A               	goto	i1l213
  3140  0012  0021               	movlb	1	; select bank1
  3141  0013  1C11               	btfss	17,0	;volatile
  3142  0014  281A               	goto	i1l213
  3143  0015  0020               	movlb	0	; select bank0
  3144  0016  1C11               	btfss	17,0	;volatile
  3145  0017  281A               	goto	i1l213
  3146                           
  3147                           ;interrupt_manager.c: 59: {
  3148                           ;interrupt_manager.c: 60: TMR1_ISR();
  3149  0018  3181  21F3         	fcall	_TMR1_ISR
  3150  001A                     i1l213:	
  3151                           ;interrupt_manager.c: 62: else
  3152                           ;interrupt_manager.c: 63: {
  3153                           
  3154                           ;interrupt_manager.c: 61: }
  3155                           
  3156  001A  0876               	movf	??_INTERRUPT_InterruptManager,w
  3157  001B  0020               	movlb	0	; select bank0
  3158  001C  00FF               	movwf	127
  3159  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3160  001E  0009               	retfie
  3161  001F                     __end_of_INTERRUPT_InterruptManager:	
  3162                           
  3163                           	psect	text23
  3164  01F3                     __ptext23:	
  3165 ;; *************** function _TMR1_ISR *****************
  3166 ;; Defined at:
  3167 ;;		line 116 in file "mcc_generated_files/tmr1.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, pclath, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3181 ;;      Params:         0       0       0       0
  3182 ;;      Locals:         0       0       0       0
  3183 ;;      Temps:          0       0       0       0
  3184 ;;      Totals:         0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    3
  3188 ;; This function calls:
  3189 ;;		_TMR1_CallBack
  3190 ;; This function is called by:
  3191 ;;		_INTERRUPT_InterruptManager
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           
  3196                           ;psect for function _TMR1_ISR
  3197  01F3                     _TMR1_ISR:	
  3198                           
  3199                           ;tmr1.c: 120: PIR1bits.TMR1IF = 0;
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  3203  01F3  0020               	movlb	0	; select bank0
  3204  01F4  1011               	bcf	17,0	;volatile
  3205                           
  3206                           ;tmr1.c: 122: TMR1H = (timer1ReloadVal >> 8);
  3207  01F5  0878               	movf	_timer1ReloadVal+1,w	;volatile
  3208  01F6  0097               	movwf	23	;volatile
  3209                           
  3210                           ;tmr1.c: 123: TMR1L = timer1ReloadVal;
  3211  01F7  0877               	movf	_timer1ReloadVal,w	;volatile
  3212  01F8  0096               	movwf	22	;volatile
  3213                           
  3214                           ;tmr1.c: 127: TMR1_CallBack();
  3215  01F9  3181  21DF         	fcall	_TMR1_CallBack
  3216  01FB  0008               	return
  3217  01FC                     __end_of_TMR1_ISR:	
  3218                           
  3219                           	psect	text24
  3220  01DF                     __ptext24:	
  3221 ;; *************** function _TMR1_CallBack *****************
  3222 ;; Defined at:
  3223 ;;		line 130 in file "mcc_generated_files/tmr1.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0, pclath, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3237 ;;      Params:         0       0       0       0
  3238 ;;      Locals:         0       0       0       0
  3239 ;;      Temps:          0       0       0       0
  3240 ;;      Totals:         0       0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    2
  3244 ;; This function calls:
  3245 ;;		Absolute function
  3246 ;;		_TMR1_DefaultInterruptHandler
  3247 ;;		_TMR1_Routine
  3248 ;; This function is called by:
  3249 ;;		_TMR1_ISR
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           
  3254                           ;psect for function _TMR1_CallBack
  3255  01DF                     _TMR1_CallBack:	
  3256                           
  3257                           ;tmr1.c: 133: if(TMR1_InterruptHandler)
  3258                           
  3259                           ;incstack = 0
  3260                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3261  01DF  0020               	movlb	0	; select bank0
  3262  01E0  082A               	movf	_TMR1_InterruptHandler,w
  3263  01E1  042B               	iorwf	_TMR1_InterruptHandler+1,w
  3264  01E2  1903               	btfsc	3,2
  3265  01E3  0008               	return
  3266                           
  3267                           ;tmr1.c: 134: {
  3268                           ;tmr1.c: 135: TMR1_InterruptHandler();
  3269  01E4  082B               	movf	_TMR1_InterruptHandler+1,w
  3270  01E5  008A               	movwf	10
  3271  01E6  082A               	movf	_TMR1_InterruptHandler,w
  3272  01E7  000A               	callw
  3273  01E8  3181               	pagesel	$
  3274  01E9  0008               	return
  3275  01EA                     __end_of_TMR1_CallBack:	
  3276                           
  3277                           	psect	text25
  3278  0238                     __ptext25:	
  3279 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3280 ;; Defined at:
  3281 ;;		line 143 in file "mcc_generated_files/tmr1.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		None
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3295 ;;      Params:         0       0       0       0
  3296 ;;      Locals:         0       0       0       0
  3297 ;;      Temps:          0       0       0       0
  3298 ;;      Totals:         0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_TMR1_Initialize
  3305 ;;		_TMR1_CallBack
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           
  3310                           ;psect for function _TMR1_DefaultInterruptHandler
  3311  0238                     _TMR1_DefaultInterruptHandler:	
  3312                           
  3313                           ;incstack = 0
  3314                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  3315  0238  0008               	return
  3316  0239                     __end_of_TMR1_DefaultInterruptHandler:	
  3317                           
  3318                           	psect	text26
  3319  0082                     __ptext26:	
  3320 ;; *************** function _TMR1_Routine *****************
  3321 ;; Defined at:
  3322 ;;		line 37 in file "main.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0, pclath, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3336 ;;      Params:         0       0       0       0
  3337 ;;      Locals:         0       0       0       0
  3338 ;;      Temps:          4       0       0       0
  3339 ;;      Totals:         4       0       0       0
  3340 ;;Total ram usage:        4 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    1
  3343 ;; This function calls:
  3344 ;;		_TMR1_WriteTimer
  3345 ;; This function is called by:
  3346 ;;		_main
  3347 ;;		_TMR1_CallBack
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _TMR1_Routine
  3353  0082                     _TMR1_Routine:	
  3354                           
  3355                           ;main.c: 40: if(outputStatus)
  3356                           
  3357                           ;incstack = 0
  3358                           ; Regs used in _TMR1_Routine: [wreg+status,2+status,0+pclath+cstack]
  3359  0082  0879               	movf	_outputStatus,w	;volatile
  3360  0083  1903               	btfsc	3,2
  3361  0084  28A3               	goto	i1l1269
  3362                           
  3363                           ;main.c: 41: {
  3364                           ;main.c: 43: TMR1_WriteTimer(65535 - (4000 - dimmLevel));
  3365  0085  097B               	comf	_dimmLevel,w	;volatile
  3366  0086  00F2               	movwf	??_TMR1_Routine
  3367  0087  097C               	comf	_dimmLevel+1,w	;volatile
  3368  0088  00F3               	movwf	??_TMR1_Routine+1
  3369  0089  0AF2               	incf	??_TMR1_Routine,f
  3370  008A  1903               	skipnz
  3371  008B  0AF3               	incf	??_TMR1_Routine+1,f
  3372  008C  0872               	movf	??_TMR1_Routine,w
  3373  008D  3EA0               	addlw	160
  3374  008E  00F4               	movwf	??_TMR1_Routine+2
  3375  008F  300F               	movlw	15
  3376  0090  3D73               	addwfc	??_TMR1_Routine+1,w
  3377  0091  00F5               	movwf	??_TMR1_Routine+3
  3378  0092  09F4               	comf	??_TMR1_Routine+2,f
  3379  0093  09F5               	comf	??_TMR1_Routine+3,f
  3380  0094  0AF4               	incf	??_TMR1_Routine+2,f
  3381  0095  1903               	skipnz
  3382  0096  0AF5               	incf	??_TMR1_Routine+3,f
  3383  0097  0874               	movf	??_TMR1_Routine+2,w
  3384  0098  3EFF               	addlw	255
  3385  0099  00F0               	movwf	TMR1_WriteTimer@timerVal
  3386  009A  30FF               	movlw	255
  3387  009B  3D75               	addwfc	??_TMR1_Routine+3,w
  3388  009C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  3389  009D  3181  2193         	fcall	_TMR1_WriteTimer
  3390                           
  3391                           ;main.c: 45: outputStatus = 0;
  3392  009F  01F9               	clrf	_outputStatus	;volatile
  3393                           
  3394                           ;main.c: 46: do { LATAbits.LATA4 = 0; } while(0);
  3395  00A0  0022               	movlb	2	; select bank2
  3396  00A1  120C               	bcf	12,4	;volatile
  3397                           
  3398                           ;main.c: 47: }
  3399  00A2  0008               	return
  3400  00A3                     i1l1269:	
  3401                           
  3402                           ;main.c: 48: else
  3403                           ;main.c: 49: {
  3404                           ;main.c: 50: outputStatus = 1;
  3405  00A3  3001               	movlw	1
  3406  00A4  00F2               	movwf	??_TMR1_Routine
  3407  00A5  0872               	movf	??_TMR1_Routine,w
  3408  00A6  00F9               	movwf	_outputStatus	;volatile
  3409                           
  3410                           ;main.c: 51: if(dimmLevel == 0)
  3411  00A7  087B               	movf	_dimmLevel,w	;volatile
  3412  00A8  047C               	iorwf	_dimmLevel+1,w	;volatile
  3413  00A9  1D03               	btfss	3,2
  3414  00AA  28BD               	goto	i1l1277
  3415                           
  3416                           ;main.c: 52: {
  3417                           ;main.c: 53: TMR1_WriteTimer(65535 - dimmLevel);
  3418  00AB  097B               	comf	_dimmLevel,w	;volatile
  3419  00AC  00F2               	movwf	??_TMR1_Routine
  3420  00AD  097C               	comf	_dimmLevel+1,w	;volatile
  3421  00AE  00F3               	movwf	??_TMR1_Routine+1
  3422  00AF  0AF2               	incf	??_TMR1_Routine,f
  3423  00B0  1903               	skipnz
  3424  00B1  0AF3               	incf	??_TMR1_Routine+1,f
  3425  00B2  0872               	movf	??_TMR1_Routine,w
  3426  00B3  3EFF               	addlw	255
  3427  00B4  00F0               	movwf	TMR1_WriteTimer@timerVal
  3428  00B5  30FF               	movlw	255
  3429  00B6  3D73               	addwfc	??_TMR1_Routine+1,w
  3430  00B7  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  3431  00B8  3181  2193         	fcall	_TMR1_WriteTimer
  3432                           
  3433                           ;main.c: 54: do { LATAbits.LATA4 = 0; } while(0);
  3434  00BA  0022               	movlb	2	; select bank2
  3435  00BB  120C               	bcf	12,4	;volatile
  3436                           
  3437                           ;main.c: 55: }
  3438  00BC  0008               	return
  3439  00BD                     i1l1277:	
  3440                           
  3441                           ;main.c: 56: else
  3442                           ;main.c: 57: {
  3443                           ;main.c: 58: TMR1_WriteTimer(65535 - dimmLevel);
  3444  00BD  097B               	comf	_dimmLevel,w	;volatile
  3445  00BE  00F2               	movwf	??_TMR1_Routine
  3446  00BF  097C               	comf	_dimmLevel+1,w	;volatile
  3447  00C0  00F3               	movwf	??_TMR1_Routine+1
  3448  00C1  0AF2               	incf	??_TMR1_Routine,f
  3449  00C2  1903               	skipnz
  3450  00C3  0AF3               	incf	??_TMR1_Routine+1,f
  3451  00C4  0872               	movf	??_TMR1_Routine,w
  3452  00C5  3EFF               	addlw	255
  3453  00C6  00F0               	movwf	TMR1_WriteTimer@timerVal
  3454  00C7  30FF               	movlw	255
  3455  00C8  3D73               	addwfc	??_TMR1_Routine+1,w
  3456  00C9  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  3457  00CA  3181  2193         	fcall	_TMR1_WriteTimer
  3458                           
  3459                           ;main.c: 59: do { LATAbits.LATA4 = 1; } while(0);
  3460  00CC  0022               	movlb	2	; select bank2
  3461  00CD  160C               	bsf	12,4	;volatile
  3462  00CE  0008               	return
  3463  00CF                     __end_of_TMR1_Routine:	
  3464                           
  3465                           	psect	text27
  3466  0193                     __ptext27:	
  3467 ;; *************** function _TMR1_WriteTimer *****************
  3468 ;; Defined at:
  3469 ;;		line 77 in file "mcc_generated_files/tmr1.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  timerVal        2    0[COMMON] unsigned int 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3483 ;;      Params:         2       0       0       0
  3484 ;;      Locals:         0       0       0       0
  3485 ;;      Temps:          0       0       0       0
  3486 ;;      Totals:         2       0       0       0
  3487 ;;Total ram usage:        2 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_TMR1_Routine
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           
  3497                           ;psect for function _TMR1_WriteTimer
  3498  0193                     _TMR1_WriteTimer:	
  3499                           
  3500                           ;tmr1.c: 79: if (T1CONbits.nT1SYNC == 1)
  3501                           
  3502                           ;incstack = 0
  3503                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  3504  0193  0020               	movlb	0	; select bank0
  3505  0194  1D18               	btfss	24,2	;volatile
  3506  0195  299D               	goto	i1l1247
  3507                           
  3508                           ;tmr1.c: 80: {
  3509                           ;tmr1.c: 82: T1CONbits.TMR1ON = 0;
  3510  0196  1018               	bcf	24,0	;volatile
  3511                           
  3512                           ;tmr1.c: 85: TMR1H = (timerVal >> 8);
  3513  0197  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  3514  0198  0097               	movwf	23	;volatile
  3515                           
  3516                           ;tmr1.c: 86: TMR1L = timerVal;
  3517  0199  0870               	movf	TMR1_WriteTimer@timerVal,w
  3518  019A  0096               	movwf	22	;volatile
  3519                           
  3520                           ;tmr1.c: 89: T1CONbits.TMR1ON =1;
  3521  019B  1418               	bsf	24,0	;volatile
  3522                           
  3523                           ;tmr1.c: 90: }
  3524  019C  0008               	return
  3525  019D                     i1l1247:	
  3526                           
  3527                           ;tmr1.c: 91: else
  3528                           ;tmr1.c: 92: {
  3529                           ;tmr1.c: 94: TMR1H = (timerVal >> 8);
  3530  019D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  3531  019E  0097               	movwf	23	;volatile
  3532                           
  3533                           ;tmr1.c: 95: TMR1L = timerVal;
  3534  019F  0870               	movf	TMR1_WriteTimer@timerVal,w
  3535  01A0  0096               	movwf	22	;volatile
  3536  01A1  0008               	return
  3537  01A2                     __end_of_TMR1_WriteTimer:	
  3538                           
  3539                           	psect	text28
  3540  01A2                     __ptext28:	
  3541 ;; *************** function _TMR0_ISR *****************
  3542 ;; Defined at:
  3543 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, pclath, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3557 ;;      Params:         0       0       0       0
  3558 ;;      Locals:         0       0       0       0
  3559 ;;      Temps:          0       0       0       0
  3560 ;;      Totals:         0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    2
  3564 ;; This function calls:
  3565 ;;		Absolute function
  3566 ;;		_TMR0_CustomISR
  3567 ;;		_TMR0_DefaultInterruptHandler
  3568 ;; This function is called by:
  3569 ;;		_INTERRUPT_InterruptManager
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           
  3574                           ;psect for function _TMR0_ISR
  3575  01A2                     _TMR0_ISR:	
  3576                           
  3577                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3581  01A2  110B               	bcf	11,2	;volatile
  3582                           
  3583                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  3584  01A3  0020               	movlb	0	; select bank0
  3585  01A4  082E               	movf	_timer0ReloadVal,w	;volatile
  3586  01A5  0095               	movwf	21	;volatile
  3587                           
  3588                           ;tmr0.c: 116: if(TMR0_InterruptHandler)
  3589  01A6  0828               	movf	_TMR0_InterruptHandler,w
  3590  01A7  0429               	iorwf	_TMR0_InterruptHandler+1,w
  3591  01A8  1903               	btfsc	3,2
  3592  01A9  0008               	return
  3593                           
  3594                           ;tmr0.c: 117: {
  3595                           ;tmr0.c: 118: TMR0_InterruptHandler();
  3596  01AA  0829               	movf	_TMR0_InterruptHandler+1,w
  3597  01AB  008A               	movwf	10
  3598  01AC  0828               	movf	_TMR0_InterruptHandler,w
  3599  01AD  000A               	callw
  3600  01AE  3181               	pagesel	$
  3601  01AF  0008               	return
  3602  01B0                     __end_of_TMR0_ISR:	
  3603                           
  3604                           	psect	text29
  3605  0033                     __ptext29:	
  3606 ;; *************** function _TMR0_CustomISR *****************
  3607 ;; Defined at:
  3608 ;;		line 71 in file "main.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, pclath, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3622 ;;      Params:         0       0       0       0
  3623 ;;      Locals:         0       0       0       0
  3624 ;;      Temps:          2       0       0       0
  3625 ;;      Totals:         2       0       0       0
  3626 ;;Total ram usage:        2 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    1
  3629 ;; This function calls:
  3630 ;;		_getSoftRX
  3631 ;; This function is called by:
  3632 ;;		_initSoftUart
  3633 ;;		_TMR0_ISR
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _TMR0_CustomISR
  3639  0033                     _TMR0_CustomISR:	
  3640                           
  3641                           ;main.c: 74: if(softUart == SOFTUART_IDLE)
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in _TMR0_CustomISR: [wreg+status,2+status,0+pclath+cstack]
  3645  0033  087A               	movf	_softUart,w	;volatile
  3646  0034  1D03               	btfss	3,2
  3647  0035  2849               	goto	i1l1395
  3648                           
  3649                           ;main.c: 75: {
  3650                           ;main.c: 77: if(!getSoftRX())
  3651  0036  3182  2204  3180   	fcall	_getSoftRX
  3652  0039  3A00               	xorlw	0
  3653  003A  1D03               	skipz
  3654  003B  0008               	return
  3655                           
  3656                           ;main.c: 78: {
  3657                           ;main.c: 81: softUart = SOFTUART_START;
  3658  003C  3001               	movlw	1
  3659  003D  00F0               	movwf	??_TMR0_CustomISR
  3660  003E  0870               	movf	??_TMR0_CustomISR,w
  3661  003F  00FA               	movwf	_softUart	;volatile
  3662                           
  3663                           ;main.c: 83: object.bitIndex = 0;
  3664  0040  0020               	movlb	0	; select bank0
  3665  0041  01B0               	clrf	_object+1	;volatile
  3666                           
  3667                           ;main.c: 84: object.dataReady = 0;
  3668  0042  01B1               	clrf	_object+2	;volatile
  3669                           
  3670                           ;main.c: 85: object.data = 0;
  3671  0043  01AF               	clrf	_object	;volatile
  3672                           
  3673                           ;main.c: 88: softUart = SOFTUART_DATA;
  3674  0044  3002               	movlw	2
  3675  0045  00F0               	movwf	??_TMR0_CustomISR
  3676  0046  0870               	movf	??_TMR0_CustomISR,w
  3677  0047  00FA               	movwf	_softUart	;volatile
  3678                           
  3679                           ;main.c: 89: }
  3680                           ;main.c: 90: }
  3681  0048  0008               	return
  3682  0049                     i1l1395:	
  3683                           
  3684                           ;main.c: 91: else if(softUart == SOFTUART_DATA)
  3685  0049  3002               	movlw	2
  3686  004A  067A               	xorwf	_softUart,w	;volatile
  3687  004B  1D03               	btfss	3,2
  3688  004C  286D               	goto	i1l1405
  3689                           
  3690                           ;main.c: 92: {
  3691                           ;main.c: 93: if(getSoftRX())
  3692  004D  3182  2204  3180   	fcall	_getSoftRX
  3693  0050  3A00               	xorlw	0
  3694  0051  1903               	skipnz
  3695  0052  285F               	goto	i1l364
  3696                           
  3697                           ;main.c: 94: object.data += 1 << object.bitIndex;
  3698  0053  3001               	movlw	1
  3699  0054  00F0               	movwf	??_TMR0_CustomISR
  3700  0055  0020               	movlb	0	; select bank0
  3701  0056  0A30               	incf	_object+1,w	;volatile
  3702  0057  2859               	goto	u49_24
  3703  0058                     u49_25:	
  3704  0058  35F0               	lslf	??_TMR0_CustomISR,f
  3705  0059                     u49_24:	
  3706  0059  0B89               	decfsz	9,f
  3707  005A  2858               	goto	u49_25
  3708  005B  0870               	movf	??_TMR0_CustomISR,w
  3709  005C  00F1               	movwf	??_TMR0_CustomISR+1
  3710  005D  0871               	movf	??_TMR0_CustomISR+1,w
  3711  005E  07AF               	addwf	_object,f	;volatile
  3712  005F                     i1l364:	
  3713                           
  3714                           ;main.c: 95: object.bitIndex++;
  3715  005F  3001               	movlw	1
  3716  0060  00F0               	movwf	??_TMR0_CustomISR
  3717  0061  0870               	movf	??_TMR0_CustomISR,w
  3718  0062  0020               	movlb	0	; select bank0
  3719  0063  07B0               	addwf	_object+1,f	;volatile
  3720                           
  3721                           ;main.c: 97: if(object.bitIndex > 7)
  3722  0064  3008               	movlw	8
  3723  0065  0230               	subwf	_object+1,w	;volatile
  3724  0066  1C03               	skipc
  3725  0067  0008               	return
  3726                           
  3727                           ;main.c: 98: softUart = SOFTUART_STOP;
  3728  0068  3003               	movlw	3
  3729  0069  00F0               	movwf	??_TMR0_CustomISR
  3730  006A  0870               	movf	??_TMR0_CustomISR,w
  3731  006B  00FA               	movwf	_softUart	;volatile
  3732                           
  3733                           ;main.c: 99: }
  3734  006C  0008               	return
  3735  006D                     i1l1405:	
  3736                           
  3737                           ;main.c: 100: else if(softUart == SOFTUART_STOP)
  3738  006D  3003               	movlw	3
  3739  006E  067A               	xorwf	_softUart,w	;volatile
  3740  006F  1D03               	btfss	3,2
  3741  0070  0008               	return
  3742                           
  3743                           ;main.c: 101: {
  3744                           ;main.c: 102: if(getSoftRX())
  3745  0071  3182  2204  3180   	fcall	_getSoftRX
  3746  0074  3A00               	xorlw	0
  3747  0075  1903               	skipnz
  3748  0076  287E               	goto	i1l1413
  3749                           
  3750                           ;main.c: 103: {
  3751                           ;main.c: 104: object.dataReady = 1;
  3752  0077  3001               	movlw	1
  3753  0078  00F0               	movwf	??_TMR0_CustomISR
  3754  0079  0870               	movf	??_TMR0_CustomISR,w
  3755  007A  0020               	movlb	0	; select bank0
  3756  007B  00B1               	movwf	_object+2	;volatile
  3757                           
  3758                           ;main.c: 105: softUart = SOFTUART_IDLE;
  3759  007C  01FA               	clrf	_softUart	;volatile
  3760                           
  3761                           ;main.c: 106: }
  3762  007D  0008               	return
  3763  007E                     i1l1413:	
  3764                           
  3765                           ;main.c: 107: else
  3766                           ;main.c: 108: {
  3767                           ;main.c: 109: object.dataReady = 0;
  3768  007E  0020               	movlb	0	; select bank0
  3769  007F  01B1               	clrf	_object+2	;volatile
  3770                           
  3771                           ;main.c: 110: softUart = SOFTUART_IDLE;
  3772  0080  01FA               	clrf	_softUart	;volatile
  3773  0081  0008               	return
  3774  0082                     __end_of_TMR0_CustomISR:	
  3775                           
  3776                           	psect	text30
  3777  0239                     __ptext30:	
  3778 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3779 ;; Defined at:
  3780 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		None
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3794 ;;      Params:         0       0       0       0
  3795 ;;      Locals:         0       0       0       0
  3796 ;;      Temps:          0       0       0       0
  3797 ;;      Totals:         0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_TMR0_Initialize
  3804 ;;		_TMR0_ISR
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           
  3809                           ;psect for function _TMR0_DefaultInterruptHandler
  3810  0239                     _TMR0_DefaultInterruptHandler:	
  3811                           
  3812                           ;incstack = 0
  3813                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  3814  0239  0008               	return
  3815  023A                     __end_of_TMR0_DefaultInterruptHandler:	
  3816                           
  3817                           	psect	text31
  3818  0204                     __ptext31:	
  3819 ;; *************** function _getSoftRX *****************
  3820 ;; Defined at:
  3821 ;;		line 124 in file "main.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      unsigned char 
  3828 ;; Registers used:
  3829 ;;		wreg
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3835 ;;      Params:         0       0       0       0
  3836 ;;      Locals:         0       0       0       0
  3837 ;;      Temps:          0       0       0       0
  3838 ;;      Totals:         0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_TMR0_CustomISR
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function _getSoftRX
  3850  0204                     _getSoftRX:	
  3851                           
  3852                           ;main.c: 126: if(PORTAbits.RA5)
  3853                           
  3854                           ;incstack = 0
  3855                           ; Regs used in _getSoftRX: [wreg]
  3856  0204  0020               	movlb	0	; select bank0
  3857  0205  1E8C               	btfss	12,5	;volatile
  3858  0206  2A09               	goto	i1l1289
  3859                           
  3860                           ;main.c: 127: return 1;
  3861  0207  3001               	movlw	1
  3862  0208  0008               	return
  3863  0209                     i1l1289:	
  3864                           
  3865                           ;main.c: 128: else
  3866                           ;main.c: 129: return 0;
  3867  0209  3000               	movlw	0
  3868  020A  0008               	return
  3869  020B                     __end_of_getSoftRX:	
  3870  007E                     btemp	set	126	;btemp
  3871  007E                     int$flags	set	126
  3872  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         7
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      8      20
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_CustomISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_CustomISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_Routine(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Routine(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCAF5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCAF5_DefaultInterruptHandler(), 

    IOCAF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF5_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_CallBack->_TMR1_Routine
    _TMR1_Routine->_TMR1_WriteTimer
    _TMR0_ISR->_TMR0_CustomISR

Critical Paths under _main in BANK0

    _main->___wmul
    _initSoftUart->_TMR0_SetInterruptHandler
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF5_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1164
                                              6 BANK0      2     2      0
                _DSM_ModulationStart
                       _EUSART_Write
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                             ___wmul
                       _initSoftUart
                       _softUartRead
                      _softUartReady
 ---------------------------------------------------------------------------------
 (1) _softUartReady                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _softUartRead                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSoftUart                                         0     0      0     161
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     418
                     _DSM_Initialize
                    _EPWM_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     161
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     161
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      96
         _IOCAF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF5_SetInterruptHandler                           2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DSM_ModulationStart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0     247
                                              6 COMMON     1     1      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     247
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0     247
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR1_Routine *
 ---------------------------------------------------------------------------------
 (7) _TMR1_Routine                                         4     4      0     247
                                              2 COMMON     4     4      0
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     247
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
                     _TMR0_CustomISR *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_CustomISR                                       2     2      0       0
                                              0 COMMON     2     2      0
                          _getSoftRX
 ---------------------------------------------------------------------------------
 (7) _getSoftRX                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DSM_ModulationStart
   _EUSART_Write
   _SYSTEM_Initialize
     _DSM_Initialize
     _EPWM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF5_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   ___wmul
   _initSoftUart
     _TMR0_SetInterruptHandler
   _softUartRead
   _softUartReady

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_CustomISR *
       _getSoftRX
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR1_Routine *
         _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      21       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      14       6       25.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      21      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu May 18 09:12:20 2017

                               __CFG_CP$OFF 0000                                          l31 01FE  
                       ___wmul@multiplicand 0022                             _timer0ReloadVal 002E  
                               __CFG_LVP$ON 0000                                         l499 011B  
                                       _PR2 001B                                __CFG_CPD$OFF 0000  
                                       u715 011C                                         u725 0121  
                           _timer1ReloadVal 0077                             _TMR2_Initialize 01EA  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                              __CFG_IESO$ON 0000          __end_of_IOCAF5_SetInterruptHandler 021D  
                _IOCAF5_SetInterruptHandler 0217                                        l1631 0115  
                                      l1651 00E1                                        l1661 0109  
                                      _LATA 010C                                        _TMR0 0015  
                                      _TMR2 001A                                        _WPUA 020C  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
                                      _main 00CF                       ??_DSM_ModulationStart 0020  
                                      btemp 007E                               __CFG_BOREN$ON 0000  
                                      start 001F                                main@nCommand 0027  
                ??_TMR1_SetInterruptHandler 0022                               __CFG_MCLRE$ON 0000  
                   __end_of_TMR0_Initialize 0193                               __CFG_PLLEN$ON 0000  
            ??_TMR0_DefaultInterruptHandler 0070                               ?_EUSART_Write 0070  
            __size_of_OSCILLATOR_Initialize 0005               __end_of_OSCILLATOR_Initialize 0222  
                                     ?_main 0070                               __CFG_WDTE$OFF 0000  
                           _TMR1_StartTimer 0230                                       _T1CON 0018  
                                     _T2CON 001C                                       i1l213 001A  
                                     i1l209 0010                                       i1l364 005F  
                                     _MDSRC 039D                                       _RCREG 0199  
                                     _RCSTA 019D                                       _TMR1H 0017  
                                     _TMR1L 0016                                       _TRISA 008C  
                                     u49_24 0059                                       u49_25 0058  
                                     _TXREG 019A                                       _TXSTA 019E  
         __size_of_TMR0_SetInterruptHandler 0006                   ?_TMR0_SetInterruptHandler 0020  
                              _outputStatus 0079                            __end_of_TMR0_ISR 01B0  
                          __end_of_TMR1_ISR 01FC                             ??_softUartReady 0020  
                            _WDT_Initialize 0226                     __end_of_TMR1_Initialize 017E  
                                     pclath 000A                     __size_of_DSM_Initialize 000C  
                                     status 0003                                       wtemp0 007E  
                           _TMR2_StartTimer 022D                             _TMR1_WriteTimer 0193  
                           __initialization 0021                                __end_of_main 0112  
                            ??_EUSART_Write 0020                     __end_of_TMR2_Initialize 01F3  
               ?_INTERRUPT_InterruptManager 0070                                      ??_main 0026  
                             ?_initSoftUart 0070                      __end_of_WDT_Initialize 022A  
                                    _CCPR1H 0292                                      _CCPR1L 0291  
                                    _APFCON 011D                                      _ANSELA 018C  
                                    _T1GCON 0019                                      _MDCARH 039F  
                                    _MDCARL 039E                     TMR1_WriteTimer@timerVal 0070  
                                    i1l1413 007E                                      i1l1405 006D  
                                    i1l1247 019D                                      i1l1277 00BD  
                                    i1l1269 00A3                                      i1l1289 0209  
                                    i1l1395 0049                                      _OSCCON 0099  
                                    _SPBRGH 019C                                      _SPBRGL 019B  
                                    _WDTCON 0097                              __CFG_PWRTE$OFF 0000  
      __end_of_TMR1_DefaultInterruptHandler 0239       __size_of_TMR1_DefaultInterruptHandler 0001  
              _TMR1_DefaultInterruptHandler 0238                     __end_of_TMR1_StartTimer 0233  
                                    ___wmul 0112                              __CFG_STVREN$ON 0000  
                                    _object 002F                            ?_TMR0_Initialize 0070  
                            ??_initSoftUart 0022                                __pdataCOMMON 007B  
                  __size_of_EPWM_Initialize 000C                             ?_WDT_Initialize 0070  
                   __end_of_TMR2_StartTimer 0230    TMR0_SetInterruptHandler@InterruptHandler 0020  
  TMR1_SetInterruptHandler@InterruptHandler 0020  IOCAF5_SetInterruptHandler@InterruptHandler 0020  
                   __end_of_TMR1_WriteTimer 01A2                       __end_of_TMR1_CallBack 01EA  
                          ?_TMR1_Initialize 0070                           _SYSTEM_Initialize 012E  
                   __end_of__initialization 002F                          ?_SYSTEM_Initialize 0070  
                            __pcstackCOMMON 0070                         ??_SYSTEM_Initialize 0023  
                                 ?_TMR0_ISR 0070                                   ?_TMR1_ISR 0070  
             ?_TMR1_DefaultInterruptHandler 0070                            ?_TMR2_Initialize 0070  
                   __size_of_TMR0_CustomISR 004F                              _OPTION_REGbits 0095  
                        __size_of_getSoftRX 0007                 ?_IOCAF5_SetInterruptHandler 0020  
                 __end_of_SYSTEM_Initialize 0149                              _DSM_Initialize 01C8  
                                __pbssBANK0 002F                        __end_of_EUSART_Write 0204  
                                __pnvCOMMON 0077                     _IOCAF5_InterruptHandler 002C  
                                __pmaintext 00CF            __end_of_TMR0_SetInterruptHandler 0217  
                                   ?___wmul 0020                            ?_TMR1_StartTimer 0070  
                                ??_TMR0_ISR 0072                                  ??_TMR1_ISR 0076  
                                __pintentry 0004                                     _CCP1CON 0293  
                                   _ECCP1AS 0295                                     _BAUDCON 019F  
                                   _OSCTUNE 0098                                     _PWM1CON 0294  
                    __end_of_DSM_Initialize 01D4                 __end_of_DSM_ModulationStart 0236  
                          ?_TMR2_StartTimer 0070                            ?_TMR1_WriteTimer 0070  
                         ??_EPWM_Initialize 0020                        __end_of_initSoftUart 01DF  
                         __end_of_getSoftRX 020B                             __size_of___wmul 001C  
                                   __ptext1 022A                                     __ptext2 0222  
                                   __ptext3 01D4                                     __ptext4 0112  
                                   __ptext5 012E                                     __ptext6 0226  
                                   __ptext7 01EA                                     __ptext8 022D  
                                   __ptext9 0164                               ?_TMR1_Routine 0070  
            ??_TMR1_DefaultInterruptHandler 0070                                   _T1CONbits 0018  
                     _OSCILLATOR_Initialize 021D                                   _T2CONbits 001C  
         __size_of_TMR1_SetInterruptHandler 0006                    ??_PIN_MANAGER_Initialize 0022  
                 ?_TMR1_SetInterruptHandler 0020                                   _IOCAFbits 0393  
                                 _IOCANbits 0392                                   _IOCAPbits 0391  
                                 _MDCONbits 039C                             ?_DSM_Initialize 0070  
                __size_of_SYSTEM_Initialize 001B                       __end_of_softUartReady 022D  
                      end_of_initialization 002F                           _EUSART_Initialize 01B0  
                        ?_EUSART_Initialize 0070                                   _RCSTAbits 019D  
                            _TMR0_CustomISR 0033                              ??_TMR1_Routine 0072  
                       ??_EUSART_Initialize 0020                            ??_WDT_Initialize 0020  
                  _TMR0_SetInterruptHandler 0211                                   _PORTAbits 000C  
                             ?_softUartRead 0070                            __CFG_FOSC$INTOSC 0000  
                     __size_of_EUSART_Write 0008                   __end_of_EUSART_Initialize 01BC  
                    __end_of_TMR0_CustomISR 0082                              __end_of___wmul 012E  
                             __pidataCOMMON 0236                                _EUSART_Write 01FC  
                         __size_of_TMR0_ISR 000E                           __size_of_TMR1_ISR 0009  
                            ??_softUartRead 0020                      ?_OSCILLATOR_Initialize 0070  
                       start_initialization 0021                    __size_of_TMR0_Initialize 0015  
           __size_of_PIN_MANAGER_Initialize 001B                       __size_of_initSoftUart 000B  
                  __size_of_TMR1_Initialize 001A                                    ??___wmul 0024  
                           ?_TMR0_CustomISR 0070                      __size_of_TMR1_CallBack 000B  
            _IOCAF5_DefaultInterruptHandler 0000                             _EPWM_Initialize 01BC  
                               __pbssCOMMON 0079                                   ___latbits 0001  
                              _initSoftUart 01D4                               __pcstackBANK0 0020  
                  __size_of_TMR2_Initialize 0009                  __size_of_EUSART_Initialize 000C  
                      __end_of_TMR1_Routine 00CF                       _TMR0_InterruptHandler 0028  
                                 __pnvBANK0 0028                      _PIN_MANAGER_Initialize 0149  
                                 _dimmLevel 007B            __end_of_TMR1_SetInterruptHandler 0211  
                                 _getSoftRX 0204                ??_INTERRUPT_InterruptManager 0076  
                          ??_DSM_Initialize 0020                    __size_of_TMR1_StartTimer 0003  
                             _TMR1_CallBack 01DF                           ??_TMR0_Initialize 0022  
                            ___wmul@product 0024                                    _LATAbits 010C  
                      __end_of_softUartRead 0226                __size_of_DSM_ModulationStart 0003  
                                  _PIE1bits 0091                    __size_of_TMR2_StartTimer 0003  
                  __size_of_TMR1_WriteTimer 000F         __size_of_INTERRUPT_InterruptManager 001B  
                ??_TMR0_SetInterruptHandler 0022                                    _PIR1bits 0011  
                                  _TMR0_ISR 01A2                                    _TMR1_ISR 01F3  
                                  _PSTR1CON 0296                     __end_of_EPWM_Initialize 01C8  
                                ?_getSoftRX 0070                           ??_TMR1_Initialize 0022  
                         ___wmul@multiplier 0020                              ?_TMR1_CallBack 0070  
                         ??_TMR2_Initialize 0020                     ??_OSCILLATOR_Initialize 0020  
                    __size_of_softUartReady 0003                    _TMR1_SetInterruptHandler 020B  
                     _TMR1_InterruptHandler 002A                                    __ptext10 0230  
                                  __ptext11 020B                                    __ptext20 01FC  
                                  __ptext12 017E                                    __ptext21 0233  
                                  __ptext13 0211                                  _T1GCONbits 0019  
                                  __ptext30 0239                                    __ptext14 0149  
                                  __ptext31 0204                                    __ptext23 01F3  
                                  __ptext15 0217                                    __ptext24 01DF  
                                  __ptext16 021D                                    __ptext25 0238  
                                  __ptext17 01B0                                    __ptext26 0082  
                                  __ptext18 01BC                                    __ptext27 0193  
                                  __ptext19 01C8                                    __ptext28 01A2  
                                  __ptext29 0033                ??_IOCAF5_SetInterruptHandler 0022  
                     __size_of_TMR1_Routine 004D                           ??_TMR1_StartTimer 0020  
                             __size_of_main 0043                            ??_TMR0_CustomISR 0070  
      __end_of_TMR0_DefaultInterruptHandler 023A       __size_of_TMR0_DefaultInterruptHandler 0001  
              _TMR0_DefaultInterruptHandler 0239                                    _softUart 007A  
                                  int$flags 007E                                 ??_getSoftRX 0070  
                          ?_EPWM_Initialize 0070                           ??_TMR2_StartTimer 0020  
        __end_of_INTERRUPT_InterruptManager 001F                  _INTERRUPT_InterruptManager 0004  
                         ??_TMR1_WriteTimer 0072         __size_of_IOCAF5_SetInterruptHandler 0006  
                              _TMR1_Routine 0082                                  _INTCONbits 000B  
                           ??_TMR1_CallBack 0076                       __size_of_softUartRead 0004  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                             _softUartReady 022A                     ?_PIN_MANAGER_Initialize 0070  
                         __CFG_CLKOUTEN$OFF 0000               ?_TMR0_DefaultInterruptHandler 0070  
                                _OPTION_REG 0095                                _softUartRead 0222  
                       _DSM_ModulationStart 0233                             _TMR0_Initialize 017E  
                            ?_softUartReady 0070                          EUSART_Write@txData 0020  
            __end_of_PIN_MANAGER_Initialize 0164                        ?_DSM_ModulationStart 0070  
                     _TMR2_InterruptHandler 0032                             _TMR1_Initialize 0164  
