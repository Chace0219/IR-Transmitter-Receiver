

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 16 09:44:38 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	stringtext,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	swtext1,local,class=CONST,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 1.41
    63                           ; Generated 25/01/2017 GMT
    64                           ; 
    65                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F1829 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  0111                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  0118                     	;# 
   155  0119                     	;# 
   156  011A                     	;# 
   157  011B                     	;# 
   158  011D                     	;# 
   159  011E                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  018E                     	;# 
   163  0191                     	;# 
   164  0191                     	;# 
   165  0192                     	;# 
   166  0193                     	;# 
   167  0193                     	;# 
   168  0193                     	;# 
   169  0194                     	;# 
   170  0195                     	;# 
   171  0196                     	;# 
   172  0199                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019F                     	;# 
   180  020C                     	;# 
   181  020D                     	;# 
   182  020E                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0214                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021D                     	;# 
   203  021E                     	;# 
   204  021F                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0295                     	;# 
   212  0296                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029D                     	;# 
   220  029E                     	;# 
   221  0311                     	;# 
   222  0311                     	;# 
   223  0312                     	;# 
   224  0313                     	;# 
   225  0318                     	;# 
   226  0318                     	;# 
   227  0319                     	;# 
   228  031A                     	;# 
   229  038C                     	;# 
   230  038D                     	;# 
   231  038E                     	;# 
   232  0391                     	;# 
   233  0392                     	;# 
   234  0393                     	;# 
   235  0394                     	;# 
   236  0395                     	;# 
   237  0396                     	;# 
   238  039A                     	;# 
   239  039C                     	;# 
   240  039D                     	;# 
   241  039E                     	;# 
   242  039F                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  041C                     	;# 
   247  041D                     	;# 
   248  041E                     	;# 
   249  0FE4                     	;# 
   250  0FE5                     	;# 
   251  0FE6                     	;# 
   252  0FE7                     	;# 
   253  0FE8                     	;# 
   254  0FE9                     	;# 
   255  0FEA                     	;# 
   256  0FEB                     	;# 
   257  0FED                     	;# 
   258  0FEE                     	;# 
   259  0FEF                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  0011                     	;# 
   276  0012                     	;# 
   277  0013                     	;# 
   278  0014                     	;# 
   279  0015                     	;# 
   280  0016                     	;# 
   281  0016                     	;# 
   282  0017                     	;# 
   283  0018                     	;# 
   284  0019                     	;# 
   285  001A                     	;# 
   286  001B                     	;# 
   287  001C                     	;# 
   288  001E                     	;# 
   289  001F                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  0111                     	;# 
   312  0112                     	;# 
   313  0113                     	;# 
   314  0114                     	;# 
   315  0115                     	;# 
   316  0116                     	;# 
   317  0117                     	;# 
   318  0118                     	;# 
   319  0119                     	;# 
   320  011A                     	;# 
   321  011B                     	;# 
   322  011D                     	;# 
   323  011E                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  018E                     	;# 
   327  0191                     	;# 
   328  0191                     	;# 
   329  0192                     	;# 
   330  0193                     	;# 
   331  0193                     	;# 
   332  0193                     	;# 
   333  0194                     	;# 
   334  0195                     	;# 
   335  0196                     	;# 
   336  0199                     	;# 
   337  019A                     	;# 
   338  019B                     	;# 
   339  019B                     	;# 
   340  019C                     	;# 
   341  019D                     	;# 
   342  019E                     	;# 
   343  019F                     	;# 
   344  020C                     	;# 
   345  020D                     	;# 
   346  020E                     	;# 
   347  0211                     	;# 
   348  0211                     	;# 
   349  0212                     	;# 
   350  0212                     	;# 
   351  0213                     	;# 
   352  0213                     	;# 
   353  0214                     	;# 
   354  0214                     	;# 
   355  0215                     	;# 
   356  0215                     	;# 
   357  0215                     	;# 
   358  0216                     	;# 
   359  0216                     	;# 
   360  0217                     	;# 
   361  0217                     	;# 
   362  0219                     	;# 
   363  021A                     	;# 
   364  021B                     	;# 
   365  021C                     	;# 
   366  021D                     	;# 
   367  021E                     	;# 
   368  021F                     	;# 
   369  0291                     	;# 
   370  0291                     	;# 
   371  0292                     	;# 
   372  0293                     	;# 
   373  0294                     	;# 
   374  0295                     	;# 
   375  0295                     	;# 
   376  0296                     	;# 
   377  0298                     	;# 
   378  0298                     	;# 
   379  0299                     	;# 
   380  029A                     	;# 
   381  029B                     	;# 
   382  029C                     	;# 
   383  029D                     	;# 
   384  029E                     	;# 
   385  0311                     	;# 
   386  0311                     	;# 
   387  0312                     	;# 
   388  0313                     	;# 
   389  0318                     	;# 
   390  0318                     	;# 
   391  0319                     	;# 
   392  031A                     	;# 
   393  038C                     	;# 
   394  038D                     	;# 
   395  038E                     	;# 
   396  0391                     	;# 
   397  0392                     	;# 
   398  0393                     	;# 
   399  0394                     	;# 
   400  0395                     	;# 
   401  0396                     	;# 
   402  039A                     	;# 
   403  039C                     	;# 
   404  039D                     	;# 
   405  039E                     	;# 
   406  039F                     	;# 
   407  0415                     	;# 
   408  0416                     	;# 
   409  0417                     	;# 
   410  041C                     	;# 
   411  041D                     	;# 
   412  041E                     	;# 
   413  0FE4                     	;# 
   414  0FE5                     	;# 
   415  0FE6                     	;# 
   416  0FE7                     	;# 
   417  0FE8                     	;# 
   418  0FE9                     	;# 
   419  0FEA                     	;# 
   420  0FEB                     	;# 
   421  0FED                     	;# 
   422  0FEE                     	;# 
   423  0FEF                     	;# 
   424  0000                     	;# 
   425  0001                     	;# 
   426  0002                     	;# 
   427  0003                     	;# 
   428  0004                     	;# 
   429  0005                     	;# 
   430  0006                     	;# 
   431  0007                     	;# 
   432  0008                     	;# 
   433  0009                     	;# 
   434  000A                     	;# 
   435  000B                     	;# 
   436  000C                     	;# 
   437  000D                     	;# 
   438  000E                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0094                     	;# 
   461  0095                     	;# 
   462  0096                     	;# 
   463  0097                     	;# 
   464  0098                     	;# 
   465  0099                     	;# 
   466  009A                     	;# 
   467  009B                     	;# 
   468  009B                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  0111                     	;# 
   476  0112                     	;# 
   477  0113                     	;# 
   478  0114                     	;# 
   479  0115                     	;# 
   480  0116                     	;# 
   481  0117                     	;# 
   482  0118                     	;# 
   483  0119                     	;# 
   484  011A                     	;# 
   485  011B                     	;# 
   486  011D                     	;# 
   487  011E                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  018E                     	;# 
   491  0191                     	;# 
   492  0191                     	;# 
   493  0192                     	;# 
   494  0193                     	;# 
   495  0193                     	;# 
   496  0193                     	;# 
   497  0194                     	;# 
   498  0195                     	;# 
   499  0196                     	;# 
   500  0199                     	;# 
   501  019A                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019C                     	;# 
   505  019D                     	;# 
   506  019E                     	;# 
   507  019F                     	;# 
   508  020C                     	;# 
   509  020D                     	;# 
   510  020E                     	;# 
   511  0211                     	;# 
   512  0211                     	;# 
   513  0212                     	;# 
   514  0212                     	;# 
   515  0213                     	;# 
   516  0213                     	;# 
   517  0214                     	;# 
   518  0214                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0216                     	;# 
   523  0216                     	;# 
   524  0217                     	;# 
   525  0217                     	;# 
   526  0219                     	;# 
   527  021A                     	;# 
   528  021B                     	;# 
   529  021C                     	;# 
   530  021D                     	;# 
   531  021E                     	;# 
   532  021F                     	;# 
   533  0291                     	;# 
   534  0291                     	;# 
   535  0292                     	;# 
   536  0293                     	;# 
   537  0294                     	;# 
   538  0295                     	;# 
   539  0295                     	;# 
   540  0296                     	;# 
   541  0298                     	;# 
   542  0298                     	;# 
   543  0299                     	;# 
   544  029A                     	;# 
   545  029B                     	;# 
   546  029C                     	;# 
   547  029D                     	;# 
   548  029E                     	;# 
   549  0311                     	;# 
   550  0311                     	;# 
   551  0312                     	;# 
   552  0313                     	;# 
   553  0318                     	;# 
   554  0318                     	;# 
   555  0319                     	;# 
   556  031A                     	;# 
   557  038C                     	;# 
   558  038D                     	;# 
   559  038E                     	;# 
   560  0391                     	;# 
   561  0392                     	;# 
   562  0393                     	;# 
   563  0394                     	;# 
   564  0395                     	;# 
   565  0396                     	;# 
   566  039A                     	;# 
   567  039C                     	;# 
   568  039D                     	;# 
   569  039E                     	;# 
   570  039F                     	;# 
   571  0415                     	;# 
   572  0416                     	;# 
   573  0417                     	;# 
   574  041C                     	;# 
   575  041D                     	;# 
   576  041E                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000D                     	;# 
   602  000E                     	;# 
   603  0011                     	;# 
   604  0012                     	;# 
   605  0013                     	;# 
   606  0014                     	;# 
   607  0015                     	;# 
   608  0016                     	;# 
   609  0016                     	;# 
   610  0017                     	;# 
   611  0018                     	;# 
   612  0019                     	;# 
   613  001A                     	;# 
   614  001B                     	;# 
   615  001C                     	;# 
   616  001E                     	;# 
   617  001F                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  0091                     	;# 
   622  0092                     	;# 
   623  0093                     	;# 
   624  0094                     	;# 
   625  0095                     	;# 
   626  0096                     	;# 
   627  0097                     	;# 
   628  0098                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009B                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  010C                     	;# 
   637  010D                     	;# 
   638  010E                     	;# 
   639  0111                     	;# 
   640  0112                     	;# 
   641  0113                     	;# 
   642  0114                     	;# 
   643  0115                     	;# 
   644  0116                     	;# 
   645  0117                     	;# 
   646  0118                     	;# 
   647  0119                     	;# 
   648  011A                     	;# 
   649  011B                     	;# 
   650  011D                     	;# 
   651  011E                     	;# 
   652  018C                     	;# 
   653  018D                     	;# 
   654  018E                     	;# 
   655  0191                     	;# 
   656  0191                     	;# 
   657  0192                     	;# 
   658  0193                     	;# 
   659  0193                     	;# 
   660  0193                     	;# 
   661  0194                     	;# 
   662  0195                     	;# 
   663  0196                     	;# 
   664  0199                     	;# 
   665  019A                     	;# 
   666  019B                     	;# 
   667  019B                     	;# 
   668  019C                     	;# 
   669  019D                     	;# 
   670  019E                     	;# 
   671  019F                     	;# 
   672  020C                     	;# 
   673  020D                     	;# 
   674  020E                     	;# 
   675  0211                     	;# 
   676  0211                     	;# 
   677  0212                     	;# 
   678  0212                     	;# 
   679  0213                     	;# 
   680  0213                     	;# 
   681  0214                     	;# 
   682  0214                     	;# 
   683  0215                     	;# 
   684  0215                     	;# 
   685  0215                     	;# 
   686  0216                     	;# 
   687  0216                     	;# 
   688  0217                     	;# 
   689  0217                     	;# 
   690  0219                     	;# 
   691  021A                     	;# 
   692  021B                     	;# 
   693  021C                     	;# 
   694  021D                     	;# 
   695  021E                     	;# 
   696  021F                     	;# 
   697  0291                     	;# 
   698  0291                     	;# 
   699  0292                     	;# 
   700  0293                     	;# 
   701  0294                     	;# 
   702  0295                     	;# 
   703  0295                     	;# 
   704  0296                     	;# 
   705  0298                     	;# 
   706  0298                     	;# 
   707  0299                     	;# 
   708  029A                     	;# 
   709  029B                     	;# 
   710  029C                     	;# 
   711  029D                     	;# 
   712  029E                     	;# 
   713  0311                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0318                     	;# 
   718  0318                     	;# 
   719  0319                     	;# 
   720  031A                     	;# 
   721  038C                     	;# 
   722  038D                     	;# 
   723  038E                     	;# 
   724  0391                     	;# 
   725  0392                     	;# 
   726  0393                     	;# 
   727  0394                     	;# 
   728  0395                     	;# 
   729  0396                     	;# 
   730  039A                     	;# 
   731  039C                     	;# 
   732  039D                     	;# 
   733  039E                     	;# 
   734  039F                     	;# 
   735  0415                     	;# 
   736  0416                     	;# 
   737  0417                     	;# 
   738  041C                     	;# 
   739  041D                     	;# 
   740  041E                     	;# 
   741  0FE4                     	;# 
   742  0FE5                     	;# 
   743  0FE6                     	;# 
   744  0FE7                     	;# 
   745  0FE8                     	;# 
   746  0FE9                     	;# 
   747  0FEA                     	;# 
   748  0FEB                     	;# 
   749  0FED                     	;# 
   750  0FEE                     	;# 
   751  0FEF                     	;# 
   752  0000                     	;# 
   753  0001                     	;# 
   754  0002                     	;# 
   755  0003                     	;# 
   756  0004                     	;# 
   757  0005                     	;# 
   758  0006                     	;# 
   759  0007                     	;# 
   760  0008                     	;# 
   761  0009                     	;# 
   762  000A                     	;# 
   763  000B                     	;# 
   764  000C                     	;# 
   765  000D                     	;# 
   766  000E                     	;# 
   767  0011                     	;# 
   768  0012                     	;# 
   769  0013                     	;# 
   770  0014                     	;# 
   771  0015                     	;# 
   772  0016                     	;# 
   773  0016                     	;# 
   774  0017                     	;# 
   775  0018                     	;# 
   776  0019                     	;# 
   777  001A                     	;# 
   778  001B                     	;# 
   779  001C                     	;# 
   780  001E                     	;# 
   781  001F                     	;# 
   782  008C                     	;# 
   783  008D                     	;# 
   784  008E                     	;# 
   785  0091                     	;# 
   786  0092                     	;# 
   787  0093                     	;# 
   788  0094                     	;# 
   789  0095                     	;# 
   790  0096                     	;# 
   791  0097                     	;# 
   792  0098                     	;# 
   793  0099                     	;# 
   794  009A                     	;# 
   795  009B                     	;# 
   796  009B                     	;# 
   797  009C                     	;# 
   798  009D                     	;# 
   799  009E                     	;# 
   800  010C                     	;# 
   801  010D                     	;# 
   802  010E                     	;# 
   803  0111                     	;# 
   804  0112                     	;# 
   805  0113                     	;# 
   806  0114                     	;# 
   807  0115                     	;# 
   808  0116                     	;# 
   809  0117                     	;# 
   810  0118                     	;# 
   811  0119                     	;# 
   812  011A                     	;# 
   813  011B                     	;# 
   814  011D                     	;# 
   815  011E                     	;# 
   816  018C                     	;# 
   817  018D                     	;# 
   818  018E                     	;# 
   819  0191                     	;# 
   820  0191                     	;# 
   821  0192                     	;# 
   822  0193                     	;# 
   823  0193                     	;# 
   824  0193                     	;# 
   825  0194                     	;# 
   826  0195                     	;# 
   827  0196                     	;# 
   828  0199                     	;# 
   829  019A                     	;# 
   830  019B                     	;# 
   831  019B                     	;# 
   832  019C                     	;# 
   833  019D                     	;# 
   834  019E                     	;# 
   835  019F                     	;# 
   836  020C                     	;# 
   837  020D                     	;# 
   838  020E                     	;# 
   839  0211                     	;# 
   840  0211                     	;# 
   841  0212                     	;# 
   842  0212                     	;# 
   843  0213                     	;# 
   844  0213                     	;# 
   845  0214                     	;# 
   846  0214                     	;# 
   847  0215                     	;# 
   848  0215                     	;# 
   849  0215                     	;# 
   850  0216                     	;# 
   851  0216                     	;# 
   852  0217                     	;# 
   853  0217                     	;# 
   854  0219                     	;# 
   855  021A                     	;# 
   856  021B                     	;# 
   857  021C                     	;# 
   858  021D                     	;# 
   859  021E                     	;# 
   860  021F                     	;# 
   861  0291                     	;# 
   862  0291                     	;# 
   863  0292                     	;# 
   864  0293                     	;# 
   865  0294                     	;# 
   866  0295                     	;# 
   867  0295                     	;# 
   868  0296                     	;# 
   869  0298                     	;# 
   870  0298                     	;# 
   871  0299                     	;# 
   872  029A                     	;# 
   873  029B                     	;# 
   874  029C                     	;# 
   875  029D                     	;# 
   876  029E                     	;# 
   877  0311                     	;# 
   878  0311                     	;# 
   879  0312                     	;# 
   880  0313                     	;# 
   881  0318                     	;# 
   882  0318                     	;# 
   883  0319                     	;# 
   884  031A                     	;# 
   885  038C                     	;# 
   886  038D                     	;# 
   887  038E                     	;# 
   888  0391                     	;# 
   889  0392                     	;# 
   890  0393                     	;# 
   891  0394                     	;# 
   892  0395                     	;# 
   893  0396                     	;# 
   894  039A                     	;# 
   895  039C                     	;# 
   896  039D                     	;# 
   897  039E                     	;# 
   898  039F                     	;# 
   899  0415                     	;# 
   900  0416                     	;# 
   901  0417                     	;# 
   902  041C                     	;# 
   903  041D                     	;# 
   904  041E                     	;# 
   905  0FE4                     	;# 
   906  0FE5                     	;# 
   907  0FE6                     	;# 
   908  0FE7                     	;# 
   909  0FE8                     	;# 
   910  0FE9                     	;# 
   911  0FEA                     	;# 
   912  0FEB                     	;# 
   913  0FED                     	;# 
   914  0FEE                     	;# 
   915  0FEF                     	;# 
   916  0000                     	;# 
   917  0001                     	;# 
   918  0002                     	;# 
   919  0003                     	;# 
   920  0004                     	;# 
   921  0005                     	;# 
   922  0006                     	;# 
   923  0007                     	;# 
   924  0008                     	;# 
   925  0009                     	;# 
   926  000A                     	;# 
   927  000B                     	;# 
   928  000C                     	;# 
   929  000D                     	;# 
   930  000E                     	;# 
   931  0011                     	;# 
   932  0012                     	;# 
   933  0013                     	;# 
   934  0014                     	;# 
   935  0015                     	;# 
   936  0016                     	;# 
   937  0016                     	;# 
   938  0017                     	;# 
   939  0018                     	;# 
   940  0019                     	;# 
   941  001A                     	;# 
   942  001B                     	;# 
   943  001C                     	;# 
   944  001E                     	;# 
   945  001F                     	;# 
   946  008C                     	;# 
   947  008D                     	;# 
   948  008E                     	;# 
   949  0091                     	;# 
   950  0092                     	;# 
   951  0093                     	;# 
   952  0094                     	;# 
   953  0095                     	;# 
   954  0096                     	;# 
   955  0097                     	;# 
   956  0098                     	;# 
   957  0099                     	;# 
   958  009A                     	;# 
   959  009B                     	;# 
   960  009B                     	;# 
   961  009C                     	;# 
   962  009D                     	;# 
   963  009E                     	;# 
   964  010C                     	;# 
   965  010D                     	;# 
   966  010E                     	;# 
   967  0111                     	;# 
   968  0112                     	;# 
   969  0113                     	;# 
   970  0114                     	;# 
   971  0115                     	;# 
   972  0116                     	;# 
   973  0117                     	;# 
   974  0118                     	;# 
   975  0119                     	;# 
   976  011A                     	;# 
   977  011B                     	;# 
   978  011D                     	;# 
   979  011E                     	;# 
   980  018C                     	;# 
   981  018D                     	;# 
   982  018E                     	;# 
   983  0191                     	;# 
   984  0191                     	;# 
   985  0192                     	;# 
   986  0193                     	;# 
   987  0193                     	;# 
   988  0193                     	;# 
   989  0194                     	;# 
   990  0195                     	;# 
   991  0196                     	;# 
   992  0199                     	;# 
   993  019A                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019C                     	;# 
   997  019D                     	;# 
   998  019E                     	;# 
   999  019F                     	;# 
  1000  020C                     	;# 
  1001  020D                     	;# 
  1002  020E                     	;# 
  1003  0211                     	;# 
  1004  0211                     	;# 
  1005  0212                     	;# 
  1006  0212                     	;# 
  1007  0213                     	;# 
  1008  0213                     	;# 
  1009  0214                     	;# 
  1010  0214                     	;# 
  1011  0215                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0216                     	;# 
  1015  0216                     	;# 
  1016  0217                     	;# 
  1017  0217                     	;# 
  1018  0219                     	;# 
  1019  021A                     	;# 
  1020  021B                     	;# 
  1021  021C                     	;# 
  1022  021D                     	;# 
  1023  021E                     	;# 
  1024  021F                     	;# 
  1025  0291                     	;# 
  1026  0291                     	;# 
  1027  0292                     	;# 
  1028  0293                     	;# 
  1029  0294                     	;# 
  1030  0295                     	;# 
  1031  0295                     	;# 
  1032  0296                     	;# 
  1033  0298                     	;# 
  1034  0298                     	;# 
  1035  0299                     	;# 
  1036  029A                     	;# 
  1037  029B                     	;# 
  1038  029C                     	;# 
  1039  029D                     	;# 
  1040  029E                     	;# 
  1041  0311                     	;# 
  1042  0311                     	;# 
  1043  0312                     	;# 
  1044  0313                     	;# 
  1045  0318                     	;# 
  1046  0318                     	;# 
  1047  0319                     	;# 
  1048  031A                     	;# 
  1049  038C                     	;# 
  1050  038D                     	;# 
  1051  038E                     	;# 
  1052  0391                     	;# 
  1053  0392                     	;# 
  1054  0393                     	;# 
  1055  0394                     	;# 
  1056  0395                     	;# 
  1057  0396                     	;# 
  1058  039A                     	;# 
  1059  039C                     	;# 
  1060  039D                     	;# 
  1061  039E                     	;# 
  1062  039F                     	;# 
  1063  0415                     	;# 
  1064  0416                     	;# 
  1065  0417                     	;# 
  1066  041C                     	;# 
  1067  041D                     	;# 
  1068  041E                     	;# 
  1069  0FE4                     	;# 
  1070  0FE5                     	;# 
  1071  0FE6                     	;# 
  1072  0FE7                     	;# 
  1073  0FE8                     	;# 
  1074  0FE9                     	;# 
  1075  0FEA                     	;# 
  1076  0FEB                     	;# 
  1077  0FED                     	;# 
  1078  0FEE                     	;# 
  1079  0FEF                     	;# 
  1080  0000                     	;# 
  1081  0001                     	;# 
  1082  0002                     	;# 
  1083  0003                     	;# 
  1084  0004                     	;# 
  1085  0005                     	;# 
  1086  0006                     	;# 
  1087  0007                     	;# 
  1088  0008                     	;# 
  1089  0009                     	;# 
  1090  000A                     	;# 
  1091  000B                     	;# 
  1092  000C                     	;# 
  1093  000D                     	;# 
  1094  000E                     	;# 
  1095  0011                     	;# 
  1096  0012                     	;# 
  1097  0013                     	;# 
  1098  0014                     	;# 
  1099  0015                     	;# 
  1100  0016                     	;# 
  1101  0016                     	;# 
  1102  0017                     	;# 
  1103  0018                     	;# 
  1104  0019                     	;# 
  1105  001A                     	;# 
  1106  001B                     	;# 
  1107  001C                     	;# 
  1108  001E                     	;# 
  1109  001F                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0091                     	;# 
  1114  0092                     	;# 
  1115  0093                     	;# 
  1116  0094                     	;# 
  1117  0095                     	;# 
  1118  0096                     	;# 
  1119  0097                     	;# 
  1120  0098                     	;# 
  1121  0099                     	;# 
  1122  009A                     	;# 
  1123  009B                     	;# 
  1124  009B                     	;# 
  1125  009C                     	;# 
  1126  009D                     	;# 
  1127  009E                     	;# 
  1128  010C                     	;# 
  1129  010D                     	;# 
  1130  010E                     	;# 
  1131  0111                     	;# 
  1132  0112                     	;# 
  1133  0113                     	;# 
  1134  0114                     	;# 
  1135  0115                     	;# 
  1136  0116                     	;# 
  1137  0117                     	;# 
  1138  0118                     	;# 
  1139  0119                     	;# 
  1140  011A                     	;# 
  1141  011B                     	;# 
  1142  011D                     	;# 
  1143  011E                     	;# 
  1144  018C                     	;# 
  1145  018D                     	;# 
  1146  018E                     	;# 
  1147  0191                     	;# 
  1148  0191                     	;# 
  1149  0192                     	;# 
  1150  0193                     	;# 
  1151  0193                     	;# 
  1152  0193                     	;# 
  1153  0194                     	;# 
  1154  0195                     	;# 
  1155  0196                     	;# 
  1156  0199                     	;# 
  1157  019A                     	;# 
  1158  019B                     	;# 
  1159  019B                     	;# 
  1160  019C                     	;# 
  1161  019D                     	;# 
  1162  019E                     	;# 
  1163  019F                     	;# 
  1164  020C                     	;# 
  1165  020D                     	;# 
  1166  020E                     	;# 
  1167  0211                     	;# 
  1168  0211                     	;# 
  1169  0212                     	;# 
  1170  0212                     	;# 
  1171  0213                     	;# 
  1172  0213                     	;# 
  1173  0214                     	;# 
  1174  0214                     	;# 
  1175  0215                     	;# 
  1176  0215                     	;# 
  1177  0215                     	;# 
  1178  0216                     	;# 
  1179  0216                     	;# 
  1180  0217                     	;# 
  1181  0217                     	;# 
  1182  0219                     	;# 
  1183  021A                     	;# 
  1184  021B                     	;# 
  1185  021C                     	;# 
  1186  021D                     	;# 
  1187  021E                     	;# 
  1188  021F                     	;# 
  1189  0291                     	;# 
  1190  0291                     	;# 
  1191  0292                     	;# 
  1192  0293                     	;# 
  1193  0294                     	;# 
  1194  0295                     	;# 
  1195  0295                     	;# 
  1196  0296                     	;# 
  1197  0298                     	;# 
  1198  0298                     	;# 
  1199  0299                     	;# 
  1200  029A                     	;# 
  1201  029B                     	;# 
  1202  029C                     	;# 
  1203  029D                     	;# 
  1204  029E                     	;# 
  1205  0311                     	;# 
  1206  0311                     	;# 
  1207  0312                     	;# 
  1208  0313                     	;# 
  1209  0318                     	;# 
  1210  0318                     	;# 
  1211  0319                     	;# 
  1212  031A                     	;# 
  1213  038C                     	;# 
  1214  038D                     	;# 
  1215  038E                     	;# 
  1216  0391                     	;# 
  1217  0392                     	;# 
  1218  0393                     	;# 
  1219  0394                     	;# 
  1220  0395                     	;# 
  1221  0396                     	;# 
  1222  039A                     	;# 
  1223  039C                     	;# 
  1224  039D                     	;# 
  1225  039E                     	;# 
  1226  039F                     	;# 
  1227  0415                     	;# 
  1228  0416                     	;# 
  1229  0417                     	;# 
  1230  041C                     	;# 
  1231  041D                     	;# 
  1232  041E                     	;# 
  1233  0FE4                     	;# 
  1234  0FE5                     	;# 
  1235  0FE6                     	;# 
  1236  0FE7                     	;# 
  1237  0FE8                     	;# 
  1238  0FE9                     	;# 
  1239  0FEA                     	;# 
  1240  0FEB                     	;# 
  1241  0FED                     	;# 
  1242  0FEE                     	;# 
  1243  0FEF                     	;# 
  1244  0000                     	;# 
  1245  0001                     	;# 
  1246  0002                     	;# 
  1247  0003                     	;# 
  1248  0004                     	;# 
  1249  0005                     	;# 
  1250  0006                     	;# 
  1251  0007                     	;# 
  1252  0008                     	;# 
  1253  0009                     	;# 
  1254  000A                     	;# 
  1255  000B                     	;# 
  1256  000C                     	;# 
  1257  000D                     	;# 
  1258  000E                     	;# 
  1259  0011                     	;# 
  1260  0012                     	;# 
  1261  0013                     	;# 
  1262  0014                     	;# 
  1263  0015                     	;# 
  1264  0016                     	;# 
  1265  0016                     	;# 
  1266  0017                     	;# 
  1267  0018                     	;# 
  1268  0019                     	;# 
  1269  001A                     	;# 
  1270  001B                     	;# 
  1271  001C                     	;# 
  1272  001E                     	;# 
  1273  001F                     	;# 
  1274  008C                     	;# 
  1275  008D                     	;# 
  1276  008E                     	;# 
  1277  0091                     	;# 
  1278  0092                     	;# 
  1279  0093                     	;# 
  1280  0094                     	;# 
  1281  0095                     	;# 
  1282  0096                     	;# 
  1283  0097                     	;# 
  1284  0098                     	;# 
  1285  0099                     	;# 
  1286  009A                     	;# 
  1287  009B                     	;# 
  1288  009B                     	;# 
  1289  009C                     	;# 
  1290  009D                     	;# 
  1291  009E                     	;# 
  1292  010C                     	;# 
  1293  010D                     	;# 
  1294  010E                     	;# 
  1295  0111                     	;# 
  1296  0112                     	;# 
  1297  0113                     	;# 
  1298  0114                     	;# 
  1299  0115                     	;# 
  1300  0116                     	;# 
  1301  0117                     	;# 
  1302  0118                     	;# 
  1303  0119                     	;# 
  1304  011A                     	;# 
  1305  011B                     	;# 
  1306  011D                     	;# 
  1307  011E                     	;# 
  1308  018C                     	;# 
  1309  018D                     	;# 
  1310  018E                     	;# 
  1311  0191                     	;# 
  1312  0191                     	;# 
  1313  0192                     	;# 
  1314  0193                     	;# 
  1315  0193                     	;# 
  1316  0193                     	;# 
  1317  0194                     	;# 
  1318  0195                     	;# 
  1319  0196                     	;# 
  1320  0199                     	;# 
  1321  019A                     	;# 
  1322  019B                     	;# 
  1323  019B                     	;# 
  1324  019C                     	;# 
  1325  019D                     	;# 
  1326  019E                     	;# 
  1327  019F                     	;# 
  1328  020C                     	;# 
  1329  020D                     	;# 
  1330  020E                     	;# 
  1331  0211                     	;# 
  1332  0211                     	;# 
  1333  0212                     	;# 
  1334  0212                     	;# 
  1335  0213                     	;# 
  1336  0213                     	;# 
  1337  0214                     	;# 
  1338  0214                     	;# 
  1339  0215                     	;# 
  1340  0215                     	;# 
  1341  0215                     	;# 
  1342  0216                     	;# 
  1343  0216                     	;# 
  1344  0217                     	;# 
  1345  0217                     	;# 
  1346  0219                     	;# 
  1347  021A                     	;# 
  1348  021B                     	;# 
  1349  021C                     	;# 
  1350  021D                     	;# 
  1351  021E                     	;# 
  1352  021F                     	;# 
  1353  0291                     	;# 
  1354  0291                     	;# 
  1355  0292                     	;# 
  1356  0293                     	;# 
  1357  0294                     	;# 
  1358  0295                     	;# 
  1359  0295                     	;# 
  1360  0296                     	;# 
  1361  0298                     	;# 
  1362  0298                     	;# 
  1363  0299                     	;# 
  1364  029A                     	;# 
  1365  029B                     	;# 
  1366  029C                     	;# 
  1367  029D                     	;# 
  1368  029E                     	;# 
  1369  0311                     	;# 
  1370  0311                     	;# 
  1371  0312                     	;# 
  1372  0313                     	;# 
  1373  0318                     	;# 
  1374  0318                     	;# 
  1375  0319                     	;# 
  1376  031A                     	;# 
  1377  038C                     	;# 
  1378  038D                     	;# 
  1379  038E                     	;# 
  1380  0391                     	;# 
  1381  0392                     	;# 
  1382  0393                     	;# 
  1383  0394                     	;# 
  1384  0395                     	;# 
  1385  0396                     	;# 
  1386  039A                     	;# 
  1387  039C                     	;# 
  1388  039D                     	;# 
  1389  039E                     	;# 
  1390  039F                     	;# 
  1391  0415                     	;# 
  1392  0416                     	;# 
  1393  0417                     	;# 
  1394  041C                     	;# 
  1395  041D                     	;# 
  1396  041E                     	;# 
  1397  0FE4                     	;# 
  1398  0FE5                     	;# 
  1399  0FE6                     	;# 
  1400  0FE7                     	;# 
  1401  0FE8                     	;# 
  1402  0FE9                     	;# 
  1403  0FEA                     	;# 
  1404  0FEB                     	;# 
  1405  0FED                     	;# 
  1406  0FEE                     	;# 
  1407  0FEF                     	;# 
  1408  0000                     	;# 
  1409  0001                     	;# 
  1410  0002                     	;# 
  1411  0003                     	;# 
  1412  0004                     	;# 
  1413  0005                     	;# 
  1414  0006                     	;# 
  1415  0007                     	;# 
  1416  0008                     	;# 
  1417  0009                     	;# 
  1418  000A                     	;# 
  1419  000B                     	;# 
  1420  000C                     	;# 
  1421  000D                     	;# 
  1422  000E                     	;# 
  1423  0011                     	;# 
  1424  0012                     	;# 
  1425  0013                     	;# 
  1426  0014                     	;# 
  1427  0015                     	;# 
  1428  0016                     	;# 
  1429  0016                     	;# 
  1430  0017                     	;# 
  1431  0018                     	;# 
  1432  0019                     	;# 
  1433  001A                     	;# 
  1434  001B                     	;# 
  1435  001C                     	;# 
  1436  001E                     	;# 
  1437  001F                     	;# 
  1438  008C                     	;# 
  1439  008D                     	;# 
  1440  008E                     	;# 
  1441  0091                     	;# 
  1442  0092                     	;# 
  1443  0093                     	;# 
  1444  0094                     	;# 
  1445  0095                     	;# 
  1446  0096                     	;# 
  1447  0097                     	;# 
  1448  0098                     	;# 
  1449  0099                     	;# 
  1450  009A                     	;# 
  1451  009B                     	;# 
  1452  009B                     	;# 
  1453  009C                     	;# 
  1454  009D                     	;# 
  1455  009E                     	;# 
  1456  010C                     	;# 
  1457  010D                     	;# 
  1458  010E                     	;# 
  1459  0111                     	;# 
  1460  0112                     	;# 
  1461  0113                     	;# 
  1462  0114                     	;# 
  1463  0115                     	;# 
  1464  0116                     	;# 
  1465  0117                     	;# 
  1466  0118                     	;# 
  1467  0119                     	;# 
  1468  011A                     	;# 
  1469  011B                     	;# 
  1470  011D                     	;# 
  1471  011E                     	;# 
  1472  018C                     	;# 
  1473  018D                     	;# 
  1474  018E                     	;# 
  1475  0191                     	;# 
  1476  0191                     	;# 
  1477  0192                     	;# 
  1478  0193                     	;# 
  1479  0193                     	;# 
  1480  0193                     	;# 
  1481  0194                     	;# 
  1482  0195                     	;# 
  1483  0196                     	;# 
  1484  0199                     	;# 
  1485  019A                     	;# 
  1486  019B                     	;# 
  1487  019B                     	;# 
  1488  019C                     	;# 
  1489  019D                     	;# 
  1490  019E                     	;# 
  1491  019F                     	;# 
  1492  020C                     	;# 
  1493  020D                     	;# 
  1494  020E                     	;# 
  1495  0211                     	;# 
  1496  0211                     	;# 
  1497  0212                     	;# 
  1498  0212                     	;# 
  1499  0213                     	;# 
  1500  0213                     	;# 
  1501  0214                     	;# 
  1502  0214                     	;# 
  1503  0215                     	;# 
  1504  0215                     	;# 
  1505  0215                     	;# 
  1506  0216                     	;# 
  1507  0216                     	;# 
  1508  0217                     	;# 
  1509  0217                     	;# 
  1510  0219                     	;# 
  1511  021A                     	;# 
  1512  021B                     	;# 
  1513  021C                     	;# 
  1514  021D                     	;# 
  1515  021E                     	;# 
  1516  021F                     	;# 
  1517  0291                     	;# 
  1518  0291                     	;# 
  1519  0292                     	;# 
  1520  0293                     	;# 
  1521  0294                     	;# 
  1522  0295                     	;# 
  1523  0295                     	;# 
  1524  0296                     	;# 
  1525  0298                     	;# 
  1526  0298                     	;# 
  1527  0299                     	;# 
  1528  029A                     	;# 
  1529  029B                     	;# 
  1530  029C                     	;# 
  1531  029D                     	;# 
  1532  029E                     	;# 
  1533  0311                     	;# 
  1534  0311                     	;# 
  1535  0312                     	;# 
  1536  0313                     	;# 
  1537  0318                     	;# 
  1538  0318                     	;# 
  1539  0319                     	;# 
  1540  031A                     	;# 
  1541  038C                     	;# 
  1542  038D                     	;# 
  1543  038E                     	;# 
  1544  0391                     	;# 
  1545  0392                     	;# 
  1546  0393                     	;# 
  1547  0394                     	;# 
  1548  0395                     	;# 
  1549  0396                     	;# 
  1550  039A                     	;# 
  1551  039C                     	;# 
  1552  039D                     	;# 
  1553  039E                     	;# 
  1554  039F                     	;# 
  1555  0415                     	;# 
  1556  0416                     	;# 
  1557  0417                     	;# 
  1558  041C                     	;# 
  1559  041D                     	;# 
  1560  041E                     	;# 
  1561  0FE4                     	;# 
  1562  0FE5                     	;# 
  1563  0FE6                     	;# 
  1564  0FE7                     	;# 
  1565  0FE8                     	;# 
  1566  0FE9                     	;# 
  1567  0FEA                     	;# 
  1568  0FEB                     	;# 
  1569  0FED                     	;# 
  1570  0FEE                     	;# 
  1571  0FEF                     	;# 
  1572                           
  1573                           	psect	idataCOMMON
  1574  063B                     __pidataCOMMON:	
  1575                           
  1576                           ;initializer for _dimmLevel
  1577  063B  3410               	retlw	16
  1578  063C  340E               	retlw	14
  1579                           
  1580                           	psect	idataBANK1
  1581  05F1                     __pidataBANK1:	
  1582                           
  1583                           ;initializer for LCDsetCursor@F3178
  1584  05F1  3400               	retlw	0
  1585  05F2  3400               	retlw	0
  1586  05F3  3440               	retlw	64
  1587  05F4  3400               	retlw	0
  1588  05F5  3414               	retlw	20
  1589  05F6  3400               	retlw	0
  1590  05F7  3454               	retlw	84
  1591  05F8  3400               	retlw	0
  1592                           
  1593                           	psect	nvCOMMON
  1594  007A                     __pnvCOMMON:	
  1595  007A                     _timer1ReloadVal:	
  1596  007A                     	ds	2
  1597                           
  1598                           	psect	nvBANK0
  1599  006B                     __pnvBANK0:	
  1600  006B                     _TMR1_InterruptHandler:	
  1601  006B                     	ds	2
  1602  0012                     _PIR2bits	set	18
  1603  000B                     _INTCONbits	set	11
  1604  0019                     _T1GCONbits	set	25
  1605  0018                     _T1CONbits	set	24
  1606  0016                     _TMR1L	set	22
  1607  0017                     _TMR1H	set	23
  1608  0019                     _T1GCON	set	25
  1609  0018                     _T1CON	set	24
  1610  0011                     _PIR1bits	set	17
  1611  0092                     _PIE2bits	set	146
  1612  0091                     _PIE1bits	set	145
  1613  0095                     _OPTION_REGbits	set	149
  1614  008E                     _TRISC	set	142
  1615  008D                     _TRISB	set	141
  1616  008C                     _TRISA	set	140
  1617  0097                     _WDTCON	set	151
  1618  0098                     _OSCTUNE	set	152
  1619  0099                     _OSCCON	set	153
  1620  010E                     _LATCbits	set	270
  1621  011D                     _APFCON0	set	285
  1622  011E                     _APFCON1	set	286
  1623  010E                     _LATC	set	270
  1624  010D                     _LATB	set	269
  1625  010C                     _LATA	set	268
  1626  018C                     _ANSELA	set	396
  1627  018D                     _ANSELB	set	397
  1628  018E                     _ANSELC	set	398
  1629  019A                     _TXREG	set	410
  1630  0199                     _RCREG	set	409
  1631  019D                     _RCSTAbits	set	413
  1632  019C                     _SPBRGH	set	412
  1633  019B                     _SPBRGL	set	411
  1634  019E                     _TXSTA	set	414
  1635  019D                     _RCSTA	set	413
  1636  019F                     _BAUDCON	set	415
  1637  0211                     _SSP1BUF	set	529
  1638  0216                     _SSP1CON2bits	set	534
  1639  0215                     _SSP1CON1bits	set	533
  1640  0212                     _SSP1ADD	set	530
  1641  0217                     _SSP1CON3	set	535
  1642  0215                     _SSP1CON1	set	533
  1643  0214                     _SSP1STAT	set	532
  1644  020E                     _WPUC	set	526
  1645  020C                     _WPUA	set	524
  1646  020D                     _WPUB	set	525
  1647                           
  1648                           	psect	stringtext
  1649  03A9                     __pstringtext:	
  1650  03A9                     STR_1:	
  1651  03A9  3420               	retlw	32	;' '
  1652  03AA  3420               	retlw	32	;' '
  1653  03AB  3420               	retlw	32	;' '
  1654  03AC  3450               	retlw	80	;'P'
  1655  03AD  3449               	retlw	73	;'I'
  1656  03AE  3443               	retlw	67	;'C'
  1657  03AF  3431               	retlw	49	;'1'
  1658  03B0  3436               	retlw	54	;'6'
  1659  03B1  3446               	retlw	70	;'F'
  1660  03B2  3431               	retlw	49	;'1'
  1661  03B3  3438               	retlw	56	;'8'
  1662  03B4  3432               	retlw	50	;'2'
  1663  03B5  3439               	retlw	57	;'9'
  1664  03B6  3420               	retlw	32	;' '
  1665  03B7  3420               	retlw	32	;' '
  1666  03B8  3420               	retlw	32	;' '
  1667  03B9  3400               	retlw	0
  1668  03BA                     STR_3:	
  1669  03BA  3420               	retlw	32	;' '
  1670  03BB  3420               	retlw	32	;' '
  1671  03BC  3444               	retlw	68	;'D'
  1672  03BD  3465               	retlw	101	;'e'
  1673  03BE  3476               	retlw	118	;'v'
  1674  03BF  3465               	retlw	101	;'e'
  1675  03C0  346C               	retlw	108	;'l'
  1676  03C1  346F               	retlw	111	;'o'
  1677  03C2  3470               	retlw	112	;'p'
  1678  03C3  3465               	retlw	101	;'e'
  1679  03C4  3464               	retlw	100	;'d'
  1680  03C5  3420               	retlw	32	;' '
  1681  03C6  3442               	retlw	66	;'B'
  1682  03C7  3479               	retlw	121	;'y'
  1683  03C8  3420               	retlw	32	;' '
  1684  03C9  3420               	retlw	32	;' '
  1685  03CA  3400               	retlw	0
  1686  03CB                     STR_2:	
  1687  03CB  3452               	retlw	82	;'R'
  1688  03CC  3465               	retlw	101	;'e'
  1689  03CD  3463               	retlw	99	;'c'
  1690  03CE  3465               	retlw	101	;'e'
  1691  03CF  3469               	retlw	105	;'i'
  1692  03D0  3476               	retlw	118	;'v'
  1693  03D1  3465               	retlw	101	;'e'
  1694  03D2  3472               	retlw	114	;'r'
  1695  03D3  3420               	retlw	32	;' '
  1696  03D4  3456               	retlw	86	;'V'
  1697  03D5  3465               	retlw	101	;'e'
  1698  03D6  3472               	retlw	114	;'r'
  1699  03D7  3420               	retlw	32	;' '
  1700  03D8  3431               	retlw	49	;'1'
  1701  03D9  342E               	retlw	46	;'.'
  1702  03DA  3430               	retlw	48	;'0'
  1703  03DB  3400               	retlw	0
  1704  03DC                     STR_4:	
  1705  03DC  344A               	retlw	74	;'J'
  1706  03DD  3469               	retlw	105	;'i'
  1707  03DE  346E               	retlw	110	;'n'
  1708  03DF  347A               	retlw	122	;'z'
  1709  03E0  3468               	retlw	104	;'h'
  1710  03E1  346F               	retlw	111	;'o'
  1711  03E2  3475               	retlw	117	;'u'
  1712  03E3  3479               	retlw	121	;'y'
  1713  03E4  3475               	retlw	117	;'u'
  1714  03E5  346E               	retlw	110	;'n'
  1715  03E6  3432               	retlw	50	;'2'
  1716  03E7  3430               	retlw	48	;'0'
  1717  03E8  3431               	retlw	49	;'1'
  1718  03E9  3437               	retlw	55	;'7'
  1719  03EA  3430               	retlw	48	;'0'
  1720  03EB  3435               	retlw	53	;'5'
  1721  03EC  3400               	retlw	0
  1722                           
  1723                           ; #config settings
  1724  0000                     
  1725                           	psect	cinit
  1726  0032                     start_initialization:	
  1727  0032                     __initialization:	
  1728                           
  1729                           ; Initialize objects allocated to COMMON
  1730  0032  3186  263B  3180   	fcall	__pidataCOMMON	;fetch initializer
  1731  0035  00FC               	movwf	__pdataCOMMON& (0+127)
  1732  0036  3186  263C  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  1733  0039  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
  1734                           
  1735                           ; Initialize objects allocated to BANK1
  1736  003A  30F1               	movlw	low __pidataBANK1
  1737  003B  0084               	movwf	4
  1738  003C  3085               	movlw	(high __pidataBANK1)| (0+128)
  1739  003D  0085               	movwf	5
  1740  003E  30A8               	movlw	low __pdataBANK1
  1741  003F  0086               	movwf	6
  1742  0040  3000               	movlw	high __pdataBANK1
  1743  0041  0087               	movwf	7
  1744  0042  3008               	movlw	8
  1745  0043  3186  2617  3180   	fcall	init_ram
  1746                           
  1747                           ; Clear objects allocated to COMMON
  1748  0046  01F7               	clrf	__pbssCOMMON& (0+127)
  1749  0047  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1750  0048  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1751                           
  1752                           ; Clear objects allocated to BANK0
  1753  0049  3053               	movlw	low __pbssBANK0
  1754  004A  0084               	movwf	4
  1755  004B  3000               	movlw	high __pbssBANK0
  1756  004C  0085               	movwf	5
  1757  004D  3018               	movlw	24
  1758  004E  3186  261D  3180   	fcall	clear_ram0
  1759                           
  1760                           ; Clear objects allocated to BANK1
  1761  0051  30A0               	movlw	low __pbssBANK1
  1762  0052  0084               	movwf	4
  1763  0053  3000               	movlw	high __pbssBANK1
  1764  0054  0085               	movwf	5
  1765  0055  3008               	movlw	8
  1766  0056  3186  261D         	fcall	clear_ram0
  1767  0058                     end_of_initialization:	
  1768                           ;End of C runtime variable initialization code
  1769                           
  1770  0058                     __end_of__initialization:	
  1771  0058  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1772  0059  0020               	movlb	0
  1773  005A  3181  299C         	ljmp	_main	;jump to C main() function
  1774                           
  1775                           	psect	bssCOMMON
  1776  0077                     __pbssCOMMON:	
  1777  0077                     _p_i2c1_trb_current:	
  1778  0077                     	ds	1
  1779  0078                     I2C1_ISR@i2c_address:	
  1780  0078                     	ds	2
  1781                           
  1782                           	psect	dataCOMMON
  1783  007C                     __pdataCOMMON:	
  1784  007C                     _dimmLevel:	
  1785  007C                     	ds	2
  1786                           
  1787                           	psect	bssBANK0
  1788  0053                     __pbssBANK0:	
  1789  0053                     _i2c1_object:	
  1790  0053                     	ds	5
  1791  0058                     _SecTimer:	
  1792  0058                     	ds	2
  1793  005A                     __backlightval:	
  1794  005A                     	ds	1
  1795  005B                     __numlines:	
  1796  005B                     	ds	1
  1797  005C                     __displaycontrol:	
  1798  005C                     	ds	1
  1799  005D                     __displayfunction:	
  1800  005D                     	ds	1
  1801  005E                     __entrymodeset:	
  1802  005E                     	ds	1
  1803  005F                     __functionset:	
  1804  005F                     	ds	1
  1805  0060                     _nStatus:	
  1806  0060                     	ds	1
  1807  0061                     _outputStatus:	
  1808  0061                     	ds	1
  1809  0062                     I2C1_ISR@i2c_10bit_address_restart:	
  1810  0062                     	ds	1
  1811  0063                     I2C1_ISR@i2c_bytes_left:	
  1812  0063                     	ds	1
  1813  0064                     I2C1_ISR@pi2c_buf_ptr:	
  1814  0064                     	ds	1
  1815  0065                     _p_i2c1_current:	
  1816  0065                     	ds	1
  1817  0066                     _i2c1_trb_count:	
  1818  0066                     	ds	1
  1819  0067                     _i2c1_state:	
  1820  0067                     	ds	1
  1821  0068                     _i2c1_tr_queue:	
  1822  0068                     	ds	3
  1823                           
  1824                           	psect	bssBANK1
  1825  00A0                     __pbssBANK1:	
  1826  00A0                     I2C1_MasterRead@trBlock:	
  1827  00A0                     	ds	4
  1828  00A4                     I2C1_MasterWrite@trBlock:	
  1829  00A4                     	ds	4
  1830                           
  1831                           	psect	dataBANK1
  1832  00A8                     __pdataBANK1:	
  1833  00A8                     LCDsetCursor@F3178:	
  1834  00A8                     	ds	8
  1835                           
  1836                           	psect	inittext
  1837  0617                     init_ram:	
  1838  0617  00FE               	movwf	126
  1839  0618                     initloop:	
  1840  0618  0012               	moviw fsr0++
  1841  0619  001E               	movwi fsr1++
  1842  061A  0BFE               	decfsz	126,f
  1843  061B  2E18               	goto	initloop
  1844  061C  3400               	retlw	0
  1845                           
  1846                           	psect	clrtext
  1847  061D                     clear_ram0:	
  1848                           ;	Called with FSR0 containing the base address, and
  1849                           ;	WREG with the size to clear
  1850                           
  1851  061D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1852  061E                     clrloop0:	
  1853  061E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1854  061F  3101               	addfsr 0,1
  1855  0620  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1856  0621  2E1E               	goto	clrloop0	;have we reached the end yet?
  1857  0622  3400               	retlw	0	;all done for this memory range, return
  1858                           
  1859                           	psect	cstackCOMMON
  1860  0070                     __pcstackCOMMON:	
  1861  0070                     ?_PIN_MANAGER_Initialize:	
  1862  0070                     ?_OSCILLATOR_Initialize:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865  0070                     ?_WDT_Initialize:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868  0070                     ?_I2C1_Initialize:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871  0070                     ?_TMR1_Initialize:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874  0070                     ?_TMR1_DefaultInterruptHandler:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877  0070                     ??_TMR1_DefaultInterruptHandler:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880  0070                     ?_TMR1_StartTimer:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883  0070                     ?_TMR1_CallBack:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886  0070                     ?_I2C1_BusCollisionISR:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  0070                     ??_I2C1_BusCollisionISR:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892  0070                     ?_I2C1_ISR:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895  0070                     ?_I2C1_Stop:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898  0070                     ??_I2C1_Stop:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901  0070                     ?_I2C1_FunctionComplete:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904  0070                     ??_I2C1_FunctionComplete:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907  0070                     ?_LCD_Init:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910  0070                     ?_LCDclear:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913  0070                     ?_LCD_Write_Char:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916  0070                     ?_LCDwrite4bits:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919  0070                     ?_LCDcommandWrite:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922  0070                     ?_LCDdisplayOff:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925  0070                     ?_LCDdisplayOn:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928  0070                     ?_LCDdataWrite:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931  0070                     ?_LCDwritePCF8574:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934  0070                     ?_LCDpulseEnableNeg:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937  0070                     ?_EUSART_Initialize:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940  0070                     ?_EUSART_Read:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943  0070                     ?_EUSART_Write:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946  0070                     ?_SYSTEM_Initialize:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949  0070                     ?_TMR1_WriteTimer:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952  0070                     ?_TMR1_ISR:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955  0070                     ?_INTERRUPT_InterruptManager:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958  0070                     ?_TMR1_Routine:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961  0070                     ?_main:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964  0070                     TMR1_WriteTimer@timerVal:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967                           
  1968                           ; 2 bytes @ 0x0
  1969  0070                     	ds	1
  1970  0071                     I2C1_Stop@completion_code:	
  1971                           
  1972                           ; 1 bytes @ 0x1
  1973  0071                     	ds	1
  1974  0072                     ??_I2C1_ISR:	
  1975  0072                     ??_TMR1_WriteTimer:	
  1976                           ; 1 bytes @ 0x2
  1977                           
  1978  0072                     ??_TMR1_Routine:	
  1979                           ; 1 bytes @ 0x2
  1980                           
  1981                           
  1982                           ; 1 bytes @ 0x2
  1983  0072                     	ds	4
  1984  0076                     ??_TMR1_CallBack:	
  1985  0076                     ??_TMR1_ISR:	
  1986                           ; 1 bytes @ 0x6
  1987                           
  1988  0076                     ??_INTERRUPT_InterruptManager:	
  1989                           ; 1 bytes @ 0x6
  1990                           
  1991                           
  1992                           ; 1 bytes @ 0x6
  1993  0076                     	ds	1
  1994                           
  1995                           	psect	cstackBANK0
  1996  0020                     __pcstackBANK0:	
  1997  0020                     ??_PIN_MANAGER_Initialize:	
  1998  0020                     ??_OSCILLATOR_Initialize:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001  0020                     ??_WDT_Initialize:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004  0020                     ??_I2C1_Initialize:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007  0020                     ?_TMR1_SetInterruptHandler:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010  0020                     ??_TMR1_StartTimer:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013  0020                     ?_I2C1_MasterWriteTRBBuild:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016  0020                     ?_I2C1_MasterTRBInsert:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019  0020                     ??_EUSART_Initialize:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022  0020                     ??_EUSART_Read:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025  0020                     ??_EUSART_Write:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028  0020                     ?___wmul:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031  0020                     EUSART_Write@txData:	
  2032                           ; 2 bytes @ 0x0
  2033                           
  2034  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0020                     ___wmul@multiplier:	
  2044                           ; 2 bytes @ 0x0
  2045                           
  2046                           
  2047                           ; 2 bytes @ 0x0
  2048  0020                     	ds	1
  2049  0021                     I2C1_MasterTRBInsert@pflag:	
  2050  0021                     I2C1_MasterWriteTRBBuild@length:	
  2051                           ; 1 bytes @ 0x1
  2052                           
  2053                           
  2054                           ; 1 bytes @ 0x1
  2055  0021                     	ds	1
  2056  0022                     ??_TMR1_Initialize:	
  2057  0022                     ??_TMR1_SetInterruptHandler:	
  2058                           ; 1 bytes @ 0x2
  2059                           
  2060  0022                     ??_I2C1_MasterTRBInsert:	
  2061                           ; 1 bytes @ 0x2
  2062                           
  2063  0022                     ??_SYSTEM_Initialize:	
  2064                           ; 1 bytes @ 0x2
  2065                           
  2066  0022                     I2C1_MasterWriteTRBBuild@address:	
  2067                           ; 1 bytes @ 0x2
  2068                           
  2069  0022                     ___wmul@multiplicand:	
  2070                           ; 2 bytes @ 0x2
  2071                           
  2072                           
  2073                           ; 2 bytes @ 0x2
  2074  0022                     	ds	1
  2075  0023                     I2C1_MasterTRBInsert@count:	
  2076                           
  2077                           ; 1 bytes @ 0x3
  2078  0023                     	ds	1
  2079  0024                     ??_I2C1_MasterWriteTRBBuild:	
  2080  0024                     ??___wmul:	
  2081                           ; 1 bytes @ 0x4
  2082                           
  2083  0024                     ___wmul@product:	
  2084                           ; 1 bytes @ 0x4
  2085                           
  2086                           
  2087                           ; 2 bytes @ 0x4
  2088  0024                     	ds	2
  2089  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  2090                           
  2091                           ; 1 bytes @ 0x6
  2092  0026                     	ds	1
  2093  0027                     ?_I2C1_MasterWrite:	
  2094  0027                     I2C1_MasterWrite@length:	
  2095                           ; 1 bytes @ 0x7
  2096                           
  2097                           
  2098                           ; 1 bytes @ 0x7
  2099  0027                     	ds	1
  2100  0028                     I2C1_MasterWrite@address:	
  2101                           
  2102                           ; 2 bytes @ 0x8
  2103  0028                     	ds	2
  2104  002A                     I2C1_MasterWrite@pflag:	
  2105                           
  2106                           ; 1 bytes @ 0xA
  2107  002A                     	ds	1
  2108  002B                     ??_I2C1_MasterWrite:	
  2109                           
  2110                           ; 1 bytes @ 0xB
  2111  002B                     	ds	2
  2112  002D                     I2C1_MasterWrite@pdata:	
  2113                           
  2114                           ; 1 bytes @ 0xD
  2115  002D                     	ds	1
  2116  002E                     ?_I2C_Write_Byte_Single_Reg:	
  2117  002E                     I2C_Write_Byte_Single_Reg@info:	
  2118                           ; 1 bytes @ 0xE
  2119                           
  2120                           
  2121                           ; 1 bytes @ 0xE
  2122  002E                     	ds	1
  2123  002F                     ??_I2C_Write_Byte_Single_Reg:	
  2124                           
  2125                           ; 1 bytes @ 0xF
  2126  002F                     	ds	3
  2127  0032                     I2C_Write_Byte_Single_Reg@temp:	
  2128                           
  2129                           ; 2 bytes @ 0x12
  2130  0032                     	ds	2
  2131  0034                     I2C_Write_Byte_Single_Reg@device:	
  2132                           
  2133                           ; 1 bytes @ 0x14
  2134  0034                     	ds	1
  2135  0035                     I2C_Write_Byte_Single_Reg@status:	
  2136                           
  2137                           ; 1 bytes @ 0x15
  2138  0035                     	ds	1
  2139  0036                     ??_LCDwritePCF8574:	
  2140                           
  2141                           ; 1 bytes @ 0x16
  2142  0036                     	ds	1
  2143  0037                     LCDwritePCF8574@value:	
  2144                           
  2145                           ; 1 bytes @ 0x17
  2146  0037                     	ds	1
  2147  0038                     ??_LCDpulseEnableNeg:	
  2148  0038                     LCDpulseEnableNeg@_data:	
  2149                           ; 1 bytes @ 0x18
  2150                           
  2151                           
  2152                           ; 1 bytes @ 0x18
  2153  0038                     	ds	1
  2154  0039                     ??_LCDwrite4bits:	
  2155  0039                     LCDwrite4bits@nibEnRsMode:	
  2156                           ; 1 bytes @ 0x19
  2157                           
  2158                           
  2159                           ; 1 bytes @ 0x19
  2160  0039                     	ds	1
  2161  003A                     ?_LCDsend:	
  2162  003A                     LCDsend@RsMode:	
  2163                           ; 1 bytes @ 0x1A
  2164                           
  2165                           
  2166                           ; 1 bytes @ 0x1A
  2167  003A                     	ds	1
  2168  003B                     ??_LCDsend:	
  2169                           
  2170                           ; 1 bytes @ 0x1B
  2171  003B                     	ds	2
  2172  003D                     LCDsend@highnib:	
  2173                           
  2174                           ; 1 bytes @ 0x1D
  2175  003D                     	ds	1
  2176  003E                     LCDsend@lownib:	
  2177                           
  2178                           ; 1 bytes @ 0x1E
  2179  003E                     	ds	1
  2180  003F                     LCDsend@value:	
  2181                           
  2182                           ; 1 bytes @ 0x1F
  2183  003F                     	ds	1
  2184  0040                     ??_LCDcommandWrite:	
  2185  0040                     ??_LCDdataWrite:	
  2186                           ; 1 bytes @ 0x20
  2187                           
  2188  0040                     LCDcommandWrite@value:	
  2189                           ; 1 bytes @ 0x20
  2190                           
  2191  0040                     LCDdataWrite@value:	
  2192                           ; 1 bytes @ 0x20
  2193                           
  2194                           
  2195                           ; 1 bytes @ 0x20
  2196  0040                     	ds	1
  2197  0041                     ??_LCDclear:	
  2198  0041                     ?_LCDsetCursor:	
  2199                           ; 1 bytes @ 0x21
  2200                           
  2201  0041                     ?_LCD_Write_Str:	
  2202                           ; 1 bytes @ 0x21
  2203                           
  2204  0041                     ??_LCD_Write_Char:	
  2205                           ; 1 bytes @ 0x21
  2206                           
  2207  0041                     ??_LCDdisplayOff:	
  2208                           ; 1 bytes @ 0x21
  2209                           
  2210  0041                     ??_LCDdisplayOn:	
  2211                           ; 1 bytes @ 0x21
  2212                           
  2213  0041                     LCD_Write_Char@message:	
  2214                           ; 1 bytes @ 0x21
  2215                           
  2216  0041                     LCDsetCursor@row:	
  2217                           ; 1 bytes @ 0x21
  2218                           
  2219  0041                     LCD_Write_Str@message:	
  2220                           ; 1 bytes @ 0x21
  2221                           
  2222                           
  2223                           ; 2 bytes @ 0x21
  2224  0041                     	ds	1
  2225  0042                     ??_LCD_Init:	
  2226  0042                     ??_LCDsetCursor:	
  2227                           ; 1 bytes @ 0x22
  2228                           
  2229                           
  2230                           ; 1 bytes @ 0x22
  2231  0042                     	ds	1
  2232  0043                     ??_LCD_Write_Str:	
  2233  0043                     LCDsetCursor@row_offsets:	
  2234                           ; 1 bytes @ 0x23
  2235                           
  2236                           
  2237                           ; 8 bytes @ 0x23
  2238  0043                     	ds	1
  2239  0044                     LCD_Write_Str@message_ptr:	
  2240                           
  2241                           ; 2 bytes @ 0x24
  2242  0044                     	ds	7
  2243  004B                     LCDsetCursor@col:	
  2244                           
  2245                           ; 1 bytes @ 0x2B
  2246  004B                     	ds	1
  2247  004C                     ??_main:	
  2248                           
  2249                           ; 1 bytes @ 0x2C
  2250  004C                     	ds	2
  2251  004E                     main@temp:	
  2252                           
  2253                           ; 2 bytes @ 0x2E
  2254  004E                     	ds	2
  2255  0050                     main@status:	
  2256                           
  2257                           ; 1 bytes @ 0x30
  2258  0050                     	ds	1
  2259  0051                     main@ChrIdx:	
  2260                           
  2261                           ; 1 bytes @ 0x31
  2262  0051                     	ds	1
  2263  0052                     main@nCommand:	
  2264                           
  2265                           ; 1 bytes @ 0x32
  2266  0052                     	ds	1
  2267                           
  2268                           	psect	maintext
  2269  019C                     __pmaintext:	
  2270 ;;
  2271 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2272 ;;
  2273 ;; *************** function _main *****************
  2274 ;; Defined at:
  2275 ;;		line 83 in file "main.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  nCommand        1   50[BANK0 ] unsigned char 
  2280 ;;  temp            2   46[BANK0 ] unsigned char [2]
  2281 ;;  ChrIdx          1   49[BANK0 ] unsigned char 
  2282 ;;  status          1   48[BANK0 ] enum E2979
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : B1F/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2296 ;;Total ram usage:        7 bytes
  2297 ;; Hardware stack levels required when called:   15
  2298 ;; This function calls:
  2299 ;;		_EUSART_Read
  2300 ;;		_EUSART_Write
  2301 ;;		_I2C1_MasterWrite
  2302 ;;		_LCD_Init
  2303 ;;		_LCD_Write_Char
  2304 ;;		_LCD_Write_Str
  2305 ;;		_LCDclear
  2306 ;;		_LCDsetCursor
  2307 ;;		_SYSTEM_Initialize
  2308 ;;		_TMR1_SetInterruptHandler
  2309 ;;		___wmul
  2310 ;; This function is called by:
  2311 ;;		Startup code after reset
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function _main
  2317  019C                     _main:	
  2318                           
  2319                           ;main.c: 86: SYSTEM_Initialize();
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2323  019C  3185  2566  3181   	fcall	_SYSTEM_Initialize
  2324                           
  2325                           ;main.c: 93: (INTCONbits.GIE = 1);
  2326  019F  178B               	bsf	11,7	;volatile
  2327                           
  2328                           ;main.c: 96: (INTCONbits.PEIE = 1);
  2329  01A0  170B               	bsf	11,6	;volatile
  2330                           
  2331                           ;main.c: 104: TMR1_SetInterruptHandler(TMR1_Routine);
  2332  01A1  3015               	movlw	low _TMR1_Routine
  2333  01A2  0020               	movlb	0	; select bank0
  2334  01A3  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2335  01A4  3003               	movlw	high _TMR1_Routine
  2336  01A5  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2337  01A6  3186  2623  3181   	fcall	_TMR1_SetInterruptHandler
  2338                           
  2339                           ;main.c: 108: _delay((unsigned long)((2000)*(16000000/4000.0)));
  2340  01A9  3029               	movlw	41
  2341  01AA  0020               	movlb	0	; select bank0
  2342  01AB  00CD               	movwf	??_main+1
  2343  01AC  3096               	movlw	150
  2344  01AD  00CC               	movwf	??_main
  2345  01AE  307F               	movlw	127
  2346  01AF                     u1707:	
  2347  01AF  0B89               	decfsz	9,f
  2348  01B0  29AF               	goto	u1707
  2349  01B1  0BCC               	decfsz	??_main,f
  2350  01B2  29AF               	goto	u1707
  2351  01B3  0BCD               	decfsz	??_main+1,f
  2352  01B4  29AF               	goto	u1707
  2353                           
  2354                           ;main.c: 110: char temp[2];
  2355                           ;main.c: 111: temp[0] = 0x12;
  2356  01B5  3012               	movlw	18
  2357  01B6  0020               	movlb	0	; select bank0
  2358  01B7  00CC               	movwf	??_main
  2359  01B8  084C               	movf	??_main,w
  2360  01B9  00CE               	movwf	main@temp
  2361                           
  2362                           ;main.c: 112: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  2363  01BA  3002               	movlw	2
  2364  01BB  00CC               	movwf	??_main
  2365  01BC  084C               	movf	??_main,w
  2366  01BD  00D0               	movwf	main@status
  2367                           
  2368                           ;main.c: 113: I2C1_MasterWrite( temp,
  2369                           ;main.c: 114: 1,
  2370                           ;main.c: 115: 0x3F,
  2371                           ;main.c: 116: &status);
  2372  01BE  01A7               	clrf	I2C1_MasterWrite@length
  2373  01BF  0AA7               	incf	I2C1_MasterWrite@length,f
  2374  01C0  303F               	movlw	63
  2375  01C1  00A8               	movwf	I2C1_MasterWrite@address
  2376  01C2  3000               	movlw	0
  2377  01C3  00A9               	movwf	I2C1_MasterWrite@address+1
  2378  01C4  3050               	movlw	(low (main@status| 0))& (0+255)
  2379  01C5  00CC               	movwf	??_main
  2380  01C6  084C               	movf	??_main,w
  2381  01C7  00AA               	movwf	I2C1_MasterWrite@pflag
  2382  01C8  304E               	movlw	(low (main@temp| 0))& (0+255)
  2383  01C9  3183  23ED  3181   	fcall	_I2C1_MasterWrite
  2384                           
  2385                           ;main.c: 120: LCD_Init();
  2386  01CC  3182  22A5  3181   	fcall	_LCD_Init
  2387                           
  2388                           ;main.c: 121: LCDclear();
  2389  01CF  3185  2598  3181   	fcall	_LCDclear
  2390                           
  2391                           ;main.c: 122: LCDsetCursor(0, 0);
  2392  01D2  0020               	movlb	0	; select bank0
  2393  01D3  01C1               	clrf	LCDsetCursor@row
  2394  01D4  3000               	movlw	0
  2395  01D5  3184  2415  3181   	fcall	_LCDsetCursor
  2396                           
  2397                           ;main.c: 123: LCD_Write_Str("   PIC16F1829   ");
  2398  01D8  30A9               	movlw	low (STR_1| (0+32768))
  2399  01D9  0020               	movlb	0	; select bank0
  2400  01DA  00C1               	movwf	LCD_Write_Str@message
  2401  01DB  3083               	movlw	high (STR_1| (0+32768))
  2402  01DC  00C2               	movwf	LCD_Write_Str@message+1
  2403  01DD  3184  24EF  3181   	fcall	_LCD_Write_Str
  2404                           
  2405                           ;main.c: 124: LCDsetCursor(0, 1);
  2406  01E0  0020               	movlb	0	; select bank0
  2407  01E1  01C1               	clrf	LCDsetCursor@row
  2408  01E2  0AC1               	incf	LCDsetCursor@row,f
  2409  01E3  3000               	movlw	0
  2410  01E4  3184  2415  3181   	fcall	_LCDsetCursor
  2411                           
  2412                           ;main.c: 125: LCD_Write_Str("Receiver Ver 1.0");
  2413  01E7  30CB               	movlw	low (STR_2| (0+32768))
  2414  01E8  0020               	movlb	0	; select bank0
  2415  01E9  00C1               	movwf	LCD_Write_Str@message
  2416  01EA  3083               	movlw	high (STR_2| (0+32768))
  2417  01EB  00C2               	movwf	LCD_Write_Str@message+1
  2418  01EC  3184  24EF  3181   	fcall	_LCD_Write_Str
  2419                           
  2420                           ;main.c: 126: _delay((unsigned long)((4000)*(16000000/4000.0)));
  2421  01EF  3052               	movlw	82
  2422  01F0  0020               	movlb	0	; select bank0
  2423  01F1  00CD               	movwf	??_main+1
  2424  01F2  302B               	movlw	43
  2425  01F3  00CC               	movwf	??_main
  2426  01F4  3000               	movlw	0
  2427  01F5                     u1717:	
  2428  01F5  0B89               	decfsz	9,f
  2429  01F6  29F5               	goto	u1717
  2430  01F7  0BCC               	decfsz	??_main,f
  2431  01F8  29F5               	goto	u1717
  2432  01F9  0BCD               	decfsz	??_main+1,f
  2433  01FA  29F5               	goto	u1717
  2434  01FB  0000               	nop
  2435                           
  2436                           ;main.c: 127: LCDclear();
  2437  01FC  3185  2598  3181   	fcall	_LCDclear
  2438                           
  2439                           ;main.c: 129: LCDsetCursor(0, 0);
  2440  01FF  0020               	movlb	0	; select bank0
  2441  0200  01C1               	clrf	LCDsetCursor@row
  2442  0201  3000               	movlw	0
  2443  0202  3184  2415  3181   	fcall	_LCDsetCursor
  2444                           
  2445                           ;main.c: 130: LCD_Write_Str("  Developed By  ");
  2446  0205  30BA               	movlw	low (STR_3| (0+32768))
  2447  0206  0020               	movlb	0	; select bank0
  2448  0207  00C1               	movwf	LCD_Write_Str@message
  2449  0208  3083               	movlw	high (STR_3| (0+32768))
  2450  0209  00C2               	movwf	LCD_Write_Str@message+1
  2451  020A  3184  24EF  3181   	fcall	_LCD_Write_Str
  2452                           
  2453                           ;main.c: 131: LCDsetCursor(0, 1);
  2454  020D  0020               	movlb	0	; select bank0
  2455  020E  01C1               	clrf	LCDsetCursor@row
  2456  020F  0AC1               	incf	LCDsetCursor@row,f
  2457  0210  3000               	movlw	0
  2458  0211  3184  2415  3181   	fcall	_LCDsetCursor
  2459                           
  2460                           ;main.c: 132: LCD_Write_Str("Jinzhouyun201705");
  2461  0214  30DC               	movlw	low (STR_4| (0+32768))
  2462  0215  0020               	movlb	0	; select bank0
  2463  0216  00C1               	movwf	LCD_Write_Str@message
  2464  0217  3083               	movlw	high (STR_4| (0+32768))
  2465  0218  00C2               	movwf	LCD_Write_Str@message+1
  2466  0219  3184  24EF  3181   	fcall	_LCD_Write_Str
  2467                           
  2468                           ;main.c: 133: _delay((unsigned long)((4000)*(16000000/4000.0)));
  2469  021C  3052               	movlw	82
  2470  021D  0020               	movlb	0	; select bank0
  2471  021E  00CD               	movwf	??_main+1
  2472  021F  302B               	movlw	43
  2473  0220  00CC               	movwf	??_main
  2474  0221  3000               	movlw	0
  2475  0222                     u1727:	
  2476  0222  0B89               	decfsz	9,f
  2477  0223  2A22               	goto	u1727
  2478  0224  0BCC               	decfsz	??_main,f
  2479  0225  2A22               	goto	u1727
  2480  0226  0BCD               	decfsz	??_main+1,f
  2481  0227  2A22               	goto	u1727
  2482  0228  0000               	nop
  2483                           
  2484                           ;main.c: 134: LCDclear();
  2485  0229  3185  2598  3181   	fcall	_LCDclear
  2486                           
  2487                           ;main.c: 136: uint8_t ChrIdx = 0;
  2488  022C  0020               	movlb	0	; select bank0
  2489  022D  01D1               	clrf	main@ChrIdx
  2490  022E                     l2722:	
  2491                           ;main.c: 138: while (1)
  2492                           
  2493                           
  2494                           ;main.c: 139: {
  2495                           ;main.c: 142: if((PIR1bits.RCIF))
  2496  022E  1E91               	btfss	17,5	;volatile
  2497  022F  2A2E               	goto	l2722
  2498                           
  2499                           ;main.c: 143: {
  2500                           ;main.c: 144: uint8_t nCommand = EUSART_Read();
  2501  0230  3185  25DE  3181   	fcall	_EUSART_Read
  2502  0233  0020               	movlb	0	; select bank0
  2503  0234  00CC               	movwf	??_main
  2504  0235  084C               	movf	??_main,w
  2505  0236  00D2               	movwf	main@nCommand
  2506                           
  2507                           ;main.c: 146: if(nCommand >= '0' && nCommand <= '9')
  2508  0237  3030               	movlw	48
  2509  0238  0252               	subwf	main@nCommand,w
  2510  0239  1C03               	skipc
  2511  023A  2A52               	goto	l392
  2512  023B  303A               	movlw	58
  2513  023C  0252               	subwf	main@nCommand,w
  2514  023D  1803               	skipnc
  2515  023E  2A52               	goto	l392
  2516                           
  2517                           ;main.c: 147: {
  2518                           ;main.c: 148: dimmLevel = 400 * (nCommand - '0');
  2519  023F  0852               	movf	main@nCommand,w
  2520  0240  3ED0               	addlw	208
  2521  0241  00A0               	movwf	___wmul@multiplier
  2522  0242  30FF               	movlw	255
  2523  0243  1803               	skipnc
  2524  0244  3000               	movlw	0
  2525  0245  00A1               	movwf	___wmul@multiplier+1
  2526  0246  3090               	movlw	144
  2527  0247  00A2               	movwf	___wmul@multiplicand
  2528  0248  3001               	movlw	1
  2529  0249  00A3               	movwf	___wmul@multiplicand+1
  2530  024A  3184  24B9  3181   	fcall	___wmul
  2531  024D  0020               	movlb	0	; select bank0
  2532  024E  0821               	movf	?___wmul+1,w
  2533  024F  00FD               	movwf	_dimmLevel+1	;volatile
  2534  0250  0820               	movf	?___wmul,w
  2535  0251  00FC               	movwf	_dimmLevel	;volatile
  2536  0252                     l392:	
  2537                           
  2538                           ;main.c: 149: }
  2539                           ;main.c: 150: EUSART_Write(nCommand);
  2540  0252  0852               	movf	main@nCommand,w
  2541  0253  3186  2601  3181   	fcall	_EUSART_Write
  2542                           
  2543                           ;main.c: 153: if(((nCommand >= 'a' && nCommand <= 'z') || (nCommand >= 'A' && nCommand <
      +                          = 'Z')) ||
  2544                           ;main.c: 154: ((nCommand >= '0' && nCommand <= '9') || (nCommand >= '!' && nCommand <= '
      +                          )')))
  2545  0256  3061               	movlw	97
  2546  0257  0020               	movlb	0	; select bank0
  2547  0258  0252               	subwf	main@nCommand,w
  2548  0259  1C03               	skipc
  2549  025A  2A5F               	goto	l2736
  2550  025B  307B               	movlw	123
  2551  025C  0252               	subwf	main@nCommand,w
  2552  025D  1C03               	skipc
  2553  025E  2A77               	goto	l2748
  2554  025F                     l2736:	
  2555  025F  3041               	movlw	65
  2556  0260  0252               	subwf	main@nCommand,w
  2557  0261  1C03               	skipc
  2558  0262  2A67               	goto	l2740
  2559  0263  305B               	movlw	91
  2560  0264  0252               	subwf	main@nCommand,w
  2561  0265  1C03               	skipc
  2562  0266  2A77               	goto	l2748
  2563  0267                     l2740:	
  2564  0267  3030               	movlw	48
  2565  0268  0252               	subwf	main@nCommand,w
  2566  0269  1C03               	skipc
  2567  026A  2A6F               	goto	l2744
  2568  026B  303A               	movlw	58
  2569  026C  0252               	subwf	main@nCommand,w
  2570  026D  1C03               	skipc
  2571  026E  2A77               	goto	l2748
  2572  026F                     l2744:	
  2573  026F  3021               	movlw	33
  2574  0270  0252               	subwf	main@nCommand,w
  2575  0271  1C03               	skipc
  2576  0272  2A2E               	goto	l2722
  2577  0273  302A               	movlw	42
  2578  0274  0252               	subwf	main@nCommand,w
  2579  0275  1803               	skipnc
  2580  0276  2A2E               	goto	l2722
  2581  0277                     l2748:	
  2582                           
  2583                           ;main.c: 155: {
  2584                           ;main.c: 158: if(ChrIdx < 16)
  2585  0277  3010               	movlw	16
  2586  0278  0251               	subwf	main@ChrIdx,w
  2587  0279  1803               	skipnc
  2588  027A  2A7E               	goto	l2754
  2589                           
  2590                           ;main.c: 159: {
  2591                           ;main.c: 160: LCDsetCursor(ChrIdx, 0);
  2592  027B  01C1               	clrf	LCDsetCursor@row
  2593  027C  0851               	movf	main@ChrIdx,w
  2594  027D  2A97               	goto	L1
  2595  027E                     l2754:	
  2596                           ;main.c: 162: }
  2597                           
  2598                           ;main.c: 161: LCD_Write_Char(nCommand);
  2599                           
  2600                           
  2601                           ;main.c: 163: else if(ChrIdx < 32)
  2602  027E  3020               	movlw	32
  2603  027F  0020               	movlb	0	; select bank0
  2604  0280  0251               	subwf	main@ChrIdx,w
  2605  0281  1803               	skipnc
  2606  0282  2A88               	goto	l2760
  2607                           
  2608                           ;main.c: 164: {
  2609                           ;main.c: 165: LCDsetCursor(ChrIdx % 16, 1);
  2610  0283  01C1               	clrf	LCDsetCursor@row
  2611  0284  0AC1               	incf	LCDsetCursor@row,f
  2612  0285  0851               	movf	main@ChrIdx,w
  2613  0286  390F               	andlw	15
  2614  0287  2A97               	goto	L1
  2615  0288                     l2760:	
  2616                           ;main.c: 167: }
  2617                           
  2618                           ;main.c: 166: LCD_Write_Char(nCommand);
  2619                           
  2620                           
  2621                           ;main.c: 168: else if(ChrIdx == 32)
  2622  0288  3020               	movlw	32
  2623  0289  0020               	movlb	0	; select bank0
  2624  028A  0651               	xorwf	main@ChrIdx,w
  2625  028B  1D03               	btfss	3,2
  2626  028C  2A9F               	goto	l2770
  2627                           
  2628                           ;main.c: 169: {
  2629                           ;main.c: 170: LCDclear();
  2630  028D  3185  2598  3181   	fcall	_LCDclear
  2631                           
  2632                           ;main.c: 171: ChrIdx = 0;
  2633  0290  0020               	movlb	0	; select bank0
  2634  0291  01D1               	clrf	main@ChrIdx
  2635                           
  2636                           ;main.c: 172: LCDsetCursor(0, ChrIdx);
  2637  0292  0851               	movf	main@ChrIdx,w
  2638  0293  00CC               	movwf	??_main
  2639  0294  084C               	movf	??_main,w
  2640  0295  00C1               	movwf	LCDsetCursor@row
  2641  0296  3000               	movlw	0
  2642  0297                     L1:	
  2643  0297  3184  2415  3181   	fcall	_LCDsetCursor
  2644                           
  2645                           ;main.c: 173: LCD_Write_Char(nCommand);
  2646  029A  0020               	movlb	0	; select bank0
  2647  029B  0852               	movf	main@nCommand,w
  2648  029C  3186  2629  3181   	fcall	_LCD_Write_Char
  2649  029F                     l2770:	
  2650                           
  2651                           ;main.c: 174: }
  2652                           ;main.c: 175: ChrIdx++;
  2653  029F  3001               	movlw	1
  2654  02A0  0020               	movlb	0	; select bank0
  2655  02A1  00CC               	movwf	??_main
  2656  02A2  084C               	movf	??_main,w
  2657  02A3  07D1               	addwf	main@ChrIdx,f
  2658  02A4  2A2E               	goto	l2722
  2659  02A5                     __end_of_main:	
  2660                           
  2661                           	psect	text1
  2662  04B9                     __ptext1:	
  2663 ;; *************** function ___wmul *****************
  2664 ;; Defined at:
  2665 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2668 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  product         2    4[BANK0 ] unsigned int 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  2    0[BANK0 ] unsigned int 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;Total ram usage:        6 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    5
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function ___wmul
  2696  04B9                     ___wmul:	
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2700  04B9  0020               	movlb	0	; select bank0
  2701  04BA  01A4               	clrf	___wmul@product
  2702  04BB  01A5               	clrf	___wmul@product+1
  2703  04BC                     l2666:	
  2704  04BC  1C20               	btfss	___wmul@multiplier,0
  2705  04BD  2CC2               	goto	l676
  2706  04BE  0822               	movf	___wmul@multiplicand,w
  2707  04BF  07A4               	addwf	___wmul@product,f
  2708  04C0  0823               	movf	___wmul@multiplicand+1,w
  2709  04C1  3DA5               	addwfc	___wmul@product+1,f
  2710  04C2                     l676:	
  2711  04C2  3001               	movlw	1
  2712  04C3                     u1495:	
  2713  04C3  35A2               	lslf	___wmul@multiplicand,f
  2714  04C4  0DA3               	rlf	___wmul@multiplicand+1,f
  2715  04C5  0B89               	decfsz	9,f
  2716  04C6  2CC3               	goto	u1495
  2717  04C7  3001               	movlw	1
  2718  04C8                     u1505:	
  2719  04C8  36A1               	lsrf	___wmul@multiplier+1,f
  2720  04C9  0CA0               	rrf	___wmul@multiplier,f
  2721  04CA  0B89               	decfsz	9,f
  2722  04CB  2CC8               	goto	u1505
  2723  04CC  0820               	movf	___wmul@multiplier,w
  2724  04CD  0421               	iorwf	___wmul@multiplier+1,w
  2725  04CE  1D03               	btfss	3,2
  2726  04CF  2CBC               	goto	l2666
  2727  04D0  0825               	movf	___wmul@product+1,w
  2728  04D1  00A1               	movwf	?___wmul+1
  2729  04D2  0824               	movf	___wmul@product,w
  2730  04D3  00A0               	movwf	?___wmul
  2731  04D4  0008               	return
  2732  04D5                     __end_of___wmul:	
  2733                           
  2734                           	psect	text2
  2735  0566                     __ptext2:	
  2736 ;; *************** function _SYSTEM_Initialize *****************
  2737 ;; Defined at:
  2738 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    7
  2759 ;; This function calls:
  2760 ;;		_EUSART_Initialize
  2761 ;;		_I2C1_Initialize
  2762 ;;		_OSCILLATOR_Initialize
  2763 ;;		_PIN_MANAGER_Initialize
  2764 ;;		_TMR1_Initialize
  2765 ;;		_WDT_Initialize
  2766 ;; This function is called by:
  2767 ;;		_main
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function _SYSTEM_Initialize
  2773  0566                     _SYSTEM_Initialize:	
  2774                           
  2775                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  2776                           
  2777                           ;incstack = 0
  2778                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2779  0566  3184  249C  3185   	fcall	_PIN_MANAGER_Initialize
  2780                           
  2781                           ;mcc.c: 73: OSCILLATOR_Initialize();
  2782  0569  3186  262F  3185   	fcall	_OSCILLATOR_Initialize
  2783                           
  2784                           ;mcc.c: 74: WDT_Initialize();
  2785  056C  3186  2634  3185   	fcall	_WDT_Initialize
  2786                           
  2787                           ;mcc.c: 75: I2C1_Initialize();
  2788  056F  3185  2509  3185   	fcall	_I2C1_Initialize
  2789                           
  2790                           ;mcc.c: 76: TMR1_Initialize();
  2791  0572  3184  24D5  3185   	fcall	_TMR1_Initialize
  2792                           
  2793                           ;mcc.c: 77: EUSART_Initialize();
  2794  0575  3185  25B2         	fcall	_EUSART_Initialize
  2795  0577  0008               	return
  2796  0578                     __end_of_SYSTEM_Initialize:	
  2797                           
  2798                           	psect	text3
  2799  0634                     __ptext3:	
  2800 ;; *************** function _WDT_Initialize *****************
  2801 ;; Defined at:
  2802 ;;		line 88 in file "mcc_generated_files/mcc.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    5
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_SYSTEM_Initialize
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _WDT_Initialize
  2832  0634                     _WDT_Initialize:	
  2833                           
  2834                           ;mcc.c: 91: WDTCON = 0x16;
  2835                           
  2836                           ;incstack = 0
  2837                           ; Regs used in _WDT_Initialize: [wreg]
  2838  0634  3016               	movlw	22
  2839  0635  0021               	movlb	1	; select bank1
  2840  0636  0097               	movwf	23	;volatile
  2841  0637  0008               	return
  2842  0638                     __end_of_WDT_Initialize:	
  2843                           
  2844                           	psect	text4
  2845  04D5                     __ptext4:	
  2846 ;; *************** function _TMR1_Initialize *****************
  2847 ;; Defined at:
  2848 ;;		line 22 in file "mcc_generated_files/tmr1.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    6
  2869 ;; This function calls:
  2870 ;;		_TMR1_SetInterruptHandler
  2871 ;;		_TMR1_StartTimer
  2872 ;; This function is called by:
  2873 ;;		_SYSTEM_Initialize
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function _TMR1_Initialize
  2879  04D5                     _TMR1_Initialize:	
  2880                           
  2881                           ;tmr1.c: 27: T1CON = 0x04;
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2885  04D5  3004               	movlw	4
  2886  04D6  0020               	movlb	0	; select bank0
  2887  04D7  0098               	movwf	24	;volatile
  2888                           
  2889                           ;tmr1.c: 30: T1GCON = 0x00;
  2890  04D8  0199               	clrf	25	;volatile
  2891                           
  2892                           ;tmr1.c: 33: TMR1H = 0xF0;
  2893  04D9  30F0               	movlw	240
  2894  04DA  0097               	movwf	23	;volatile
  2895                           
  2896                           ;tmr1.c: 36: TMR1L = 0x60;
  2897  04DB  3060               	movlw	96
  2898  04DC  0096               	movwf	22	;volatile
  2899                           
  2900                           ;tmr1.c: 39: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  2901  04DD  0817               	movf	23,w	;volatile
  2902  04DE  00FB               	movwf	_timer1ReloadVal+1	;volatile
  2903  04DF  0816               	movf	22,w	;volatile
  2904  04E0  00FA               	movwf	_timer1ReloadVal	;volatile
  2905                           
  2906                           ;tmr1.c: 42: PIR1bits.TMR1IF = 0;
  2907  04E1  1011               	bcf	17,0	;volatile
  2908                           
  2909                           ;tmr1.c: 45: PIE1bits.TMR1IE = 1;
  2910  04E2  0021               	movlb	1	; select bank1
  2911  04E3  1411               	bsf	17,0	;volatile
  2912                           
  2913                           ;tmr1.c: 48: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2914  04E4  303D               	movlw	low _TMR1_DefaultInterruptHandler
  2915  04E5  0020               	movlb	0	; select bank0
  2916  04E6  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2917  04E7  3006               	movlw	high _TMR1_DefaultInterruptHandler
  2918  04E8  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2919  04E9  3186  2623  3184   	fcall	_TMR1_SetInterruptHandler
  2920                           
  2921                           ;tmr1.c: 51: TMR1_StartTimer();
  2922  04EC  3186  2638         	fcall	_TMR1_StartTimer
  2923  04EE  0008               	return
  2924  04EF                     __end_of_TMR1_Initialize:	
  2925                           
  2926                           	psect	text5
  2927  0638                     __ptext5:	
  2928 ;; *************** function _TMR1_StartTimer *****************
  2929 ;; Defined at:
  2930 ;;		line 54 in file "mcc_generated_files/tmr1.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;		None
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		None
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;Total ram usage:        0 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    5
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_TMR1_Initialize
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function _TMR1_StartTimer
  2960  0638                     _TMR1_StartTimer:	
  2961                           
  2962                           ;tmr1.c: 57: T1CONbits.TMR1ON = 1;
  2963                           
  2964                           ;incstack = 0
  2965                           ; Regs used in _TMR1_StartTimer: []
  2966  0638  0020               	movlb	0	; select bank0
  2967  0639  1418               	bsf	24,0	;volatile
  2968  063A  0008               	return
  2969  063B                     __end_of_TMR1_StartTimer:	
  2970                           
  2971                           	psect	text6
  2972  0623                     __ptext6:	
  2973 ;; *************** function _TMR1_SetInterruptHandler *****************
  2974 ;; Defined at:
  2975 ;;		line 137 in file "mcc_generated_files/tmr1.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  2978 ;;		 -> TMR1_Routine(1), TMR1_DefaultInterruptHandler(1), 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2990 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2993 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;Total ram usage:        2 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    5
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_TMR1_Initialize
  3001 ;;		_main
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           
  3006                           ;psect for function _TMR1_SetInterruptHandler
  3007  0623                     _TMR1_SetInterruptHandler:	
  3008                           
  3009                           ;tmr1.c: 138: TMR1_InterruptHandler = InterruptHandler;
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3013  0623  0020               	movlb	0	; select bank0
  3014  0624  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3015  0625  00EC               	movwf	_TMR1_InterruptHandler+1
  3016  0626  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3017  0627  00EB               	movwf	_TMR1_InterruptHandler
  3018  0628  0008               	return
  3019  0629                     __end_of_TMR1_SetInterruptHandler:	
  3020                           
  3021                           	psect	text7
  3022  049C                     __ptext7:	
  3023 ;; *************** function _PIN_MANAGER_Initialize *****************
  3024 ;; Defined at:
  3025 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    5
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_SYSTEM_Initialize
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _PIN_MANAGER_Initialize
  3055  049C                     _PIN_MANAGER_Initialize:	
  3056                           
  3057                           ;pin_manager.c: 56: LATA = 0x00;
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3061  049C  0022               	movlb	2	; select bank2
  3062  049D  018C               	clrf	12	;volatile
  3063                           
  3064                           ;pin_manager.c: 57: LATB = 0x00;
  3065  049E  018D               	clrf	13	;volatile
  3066                           
  3067                           ;pin_manager.c: 58: LATC = 0x00;
  3068  049F  018E               	clrf	14	;volatile
  3069                           
  3070                           ;pin_manager.c: 63: TRISA = 0x3B;
  3071  04A0  303B               	movlw	59
  3072  04A1  0021               	movlb	1	; select bank1
  3073  04A2  008C               	movwf	12	;volatile
  3074                           
  3075                           ;pin_manager.c: 64: TRISB = 0xF0;
  3076  04A3  30F0               	movlw	240
  3077  04A4  008D               	movwf	13	;volatile
  3078                           
  3079                           ;pin_manager.c: 65: TRISC = 0x00;
  3080  04A5  018E               	clrf	14	;volatile
  3081                           
  3082                           ;pin_manager.c: 70: ANSELC = 0xCF;
  3083  04A6  30CF               	movlw	207
  3084  04A7  0023               	movlb	3	; select bank3
  3085  04A8  008E               	movwf	14	;volatile
  3086                           
  3087                           ;pin_manager.c: 71: ANSELB = 0x00;
  3088  04A9  018D               	clrf	13	;volatile
  3089                           
  3090                           ;pin_manager.c: 72: ANSELA = 0x17;
  3091  04AA  3017               	movlw	23
  3092  04AB  008C               	movwf	12	;volatile
  3093                           
  3094                           ;pin_manager.c: 77: WPUB = 0xF0;
  3095  04AC  30F0               	movlw	240
  3096  04AD  0024               	movlb	4	; select bank4
  3097  04AE  008D               	movwf	13	;volatile
  3098                           
  3099                           ;pin_manager.c: 78: WPUA = 0x3F;
  3100  04AF  303F               	movlw	63
  3101  04B0  008C               	movwf	12	;volatile
  3102                           
  3103                           ;pin_manager.c: 79: WPUC = 0xFF;
  3104  04B1  30FF               	movlw	255
  3105  04B2  008E               	movwf	14	;volatile
  3106                           
  3107                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  3108  04B3  0021               	movlb	1	; select bank1
  3109  04B4  1395               	bcf	21,7	;volatile
  3110                           
  3111                           ;pin_manager.c: 86: APFCON1 = 0x00;
  3112  04B5  0022               	movlb	2	; select bank2
  3113  04B6  019E               	clrf	30	;volatile
  3114                           
  3115                           ;pin_manager.c: 87: APFCON0 = 0x00;
  3116  04B7  019D               	clrf	29	;volatile
  3117  04B8  0008               	return
  3118  04B9                     __end_of_PIN_MANAGER_Initialize:	
  3119                           
  3120                           	psect	text8
  3121  062F                     __ptext8:	
  3122 ;; *************** function _OSCILLATOR_Initialize *****************
  3123 ;; Defined at:
  3124 ;;		line 80 in file "mcc_generated_files/mcc.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    5
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_SYSTEM_Initialize
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function _OSCILLATOR_Initialize
  3154  062F                     _OSCILLATOR_Initialize:	
  3155                           
  3156                           ;mcc.c: 83: OSCCON = 0x78;
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3160  062F  3078               	movlw	120
  3161  0630  0021               	movlb	1	; select bank1
  3162  0631  0099               	movwf	25	;volatile
  3163                           
  3164                           ;mcc.c: 85: OSCTUNE = 0x00;
  3165  0632  0198               	clrf	24	;volatile
  3166  0633  0008               	return
  3167  0634                     __end_of_OSCILLATOR_Initialize:	
  3168                           
  3169                           	psect	text9
  3170  0509                     __ptext9:	
  3171 ;; *************** function _I2C1_Initialize *****************
  3172 ;; Defined at:
  3173 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3189 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3190 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3191 ;;Total ram usage:        1 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    5
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_SYSTEM_Initialize
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _I2C1_Initialize
  3203  0509                     _I2C1_Initialize:	
  3204                           
  3205                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  3206                           
  3207                           ;incstack = 0
  3208                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  3209  0509  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  3210  050A  0020               	movlb	0	; select bank0
  3211  050B  00A0               	movwf	??_I2C1_Initialize
  3212  050C  0820               	movf	??_I2C1_Initialize,w
  3213  050D  00D4               	movwf	low ((_i2c1_object| 0+1))
  3214                           
  3215                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  3216  050E  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  3217  050F  00A0               	movwf	??_I2C1_Initialize
  3218  0510  0820               	movf	??_I2C1_Initialize,w
  3219  0511  00D3               	movwf	_i2c1_object
  3220                           
  3221                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  3222  0512  14D5               	bsf	_i2c1_object+2,1
  3223                           
  3224                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  3225  0513  1055               	bcf	_i2c1_object+2,0
  3226                           
  3227                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  3228  0514  01D7               	clrf	_i2c1_object+4
  3229                           
  3230                           ;i2c1.c: 208: SSP1STAT = 0x80;
  3231  0515  3080               	movlw	128
  3232  0516  0024               	movlb	4	; select bank4
  3233  0517  0094               	movwf	20	;volatile
  3234                           
  3235                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  3236  0518  3028               	movlw	40
  3237  0519  0095               	movwf	21	;volatile
  3238                           
  3239                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  3240  051A  0197               	clrf	23	;volatile
  3241                           
  3242                           ;i2c1.c: 214: SSP1ADD = 0x08;
  3243  051B  3008               	movlw	8
  3244  051C  0092               	movwf	18	;volatile
  3245                           
  3246                           ;i2c1.c: 218: PIR1bits.SSP1IF = 0;
  3247  051D  0020               	movlb	0	; select bank0
  3248  051E  1191               	bcf	17,3	;volatile
  3249                           
  3250                           ;i2c1.c: 220: PIE1bits.SSP1IE = 1;
  3251  051F  0021               	movlb	1	; select bank1
  3252  0520  1591               	bsf	17,3	;volatile
  3253  0521  0008               	return
  3254  0522                     __end_of_I2C1_Initialize:	
  3255                           
  3256                           	psect	text10
  3257  05B2                     __ptext10:	
  3258 ;; *************** function _EUSART_Initialize *****************
  3259 ;; Defined at:
  3260 ;;		line 55 in file "mcc_generated_files/eusart.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    5
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_SYSTEM_Initialize
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function _EUSART_Initialize
  3290  05B2                     _EUSART_Initialize:	
  3291                           
  3292                           ;eusart.c: 60: BAUDCON = 0x08;
  3293                           
  3294                           ;incstack = 0
  3295                           ; Regs used in _EUSART_Initialize: [wreg]
  3296  05B2  3008               	movlw	8
  3297  05B3  0023               	movlb	3	; select bank3
  3298  05B4  009F               	movwf	31	;volatile
  3299                           
  3300                           ;eusart.c: 63: RCSTA = 0x90;
  3301  05B5  3090               	movlw	144
  3302  05B6  009D               	movwf	29	;volatile
  3303                           
  3304                           ;eusart.c: 66: TXSTA = 0x24;
  3305  05B7  3024               	movlw	36
  3306  05B8  009E               	movwf	30	;volatile
  3307                           
  3308                           ;eusart.c: 69: SPBRGL = 0x82;
  3309  05B9  3082               	movlw	130
  3310  05BA  009B               	movwf	27	;volatile
  3311                           
  3312                           ;eusart.c: 72: SPBRGH = 0x06;
  3313  05BB  3006               	movlw	6
  3314  05BC  009C               	movwf	28	;volatile
  3315  05BD  0008               	return
  3316  05BE                     __end_of_EUSART_Initialize:	
  3317                           
  3318                           	psect	text11
  3319  0415                     __ptext11:	
  3320 ;; *************** function _LCDsetCursor *****************
  3321 ;; Defined at:
  3322 ;;		line 257 in file "LCD_I2C_PCF8574.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  col             1    wreg     unsigned char 
  3325 ;;  row             1   33[BANK0 ] unsigned char 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  col             1   43[BANK0 ] unsigned char 
  3328 ;;  row_offsets     8   35[BANK0 ] int [4]
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3338 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3342 ;;Total ram usage:       11 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:   13
  3345 ;; This function calls:
  3346 ;;		_LCDcommandWrite
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _LCDsetCursor
  3354  0415                     _LCDsetCursor:	
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _LCDsetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3358                           ;LCDsetCursor@col stored from wreg
  3359  0415  0020               	movlb	0	; select bank0
  3360  0416  00CB               	movwf	LCDsetCursor@col
  3361                           
  3362                           ;LCD_I2C_PCF8574.c: 259: int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
  3363  0417  30A8               	movlw	low LCDsetCursor@F3178
  3364  0418  0086               	movwf	6
  3365  0419  3000               	movlw	high LCDsetCursor@F3178
  3366  041A  0087               	movwf	7
  3367  041B  3043               	movlw	low LCDsetCursor@row_offsets
  3368  041C  0084               	movwf	4
  3369  041D  3000               	movlw	high LCDsetCursor@row_offsets
  3370  041E  0085               	movwf	5
  3371  041F  3008               	movlw	8
  3372  0420  00C2               	movwf	??_LCDsetCursor
  3373  0421                     u1450:	
  3374  0421  0016               	moviw fsr1++
  3375  0422  001A               	movwi fsr0++
  3376  0423  0BC2               	decfsz	??_LCDsetCursor,f
  3377  0424  2C21               	goto	u1450
  3378                           
  3379                           ;LCD_I2C_PCF8574.c: 260: if ( row >= _numlines ) {
  3380  0425  085B               	movf	__numlines,w
  3381  0426  0241               	subwf	LCDsetCursor@row,w
  3382  0427  1C03               	skipc
  3383  0428  2C2E               	goto	l2644
  3384                           
  3385                           ;LCD_I2C_PCF8574.c: 261: row = _numlines-1;
  3386  0429  085B               	movf	__numlines,w
  3387  042A  3EFF               	addlw	255
  3388  042B  00C2               	movwf	??_LCDsetCursor
  3389  042C  0842               	movf	??_LCDsetCursor,w
  3390  042D  00C1               	movwf	LCDsetCursor@row
  3391  042E                     l2644:	
  3392                           
  3393                           ;LCD_I2C_PCF8574.c: 262: }
  3394                           ;LCD_I2C_PCF8574.c: 264: LCDcommandWrite(0x80 | (col + row_offsets[row]));
  3395  042E  3541               	lslf	LCDsetCursor@row,w
  3396  042F  3E43               	addlw	(low (LCDsetCursor@row_offsets| 0))& (0+255)
  3397  0430  0086               	movwf	6
  3398  0431  0187               	clrf	7
  3399  0432  0801               	movf	1,w
  3400  0433  074B               	addwf	LCDsetCursor@col,w
  3401  0434  3880               	iorlw	128
  3402  0435  3186  2610         	fcall	_LCDcommandWrite
  3403  0437  0008               	return
  3404  0438                     __end_of_LCDsetCursor:	
  3405                           
  3406                           	psect	text12
  3407  04EF                     __ptext12:	
  3408 ;; *************** function _LCD_Write_Str *****************
  3409 ;; Defined at:
  3410 ;;		line 230 in file "LCD_I2C_PCF8574.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  message         2   33[BANK0 ] PTR const unsigned char 
  3413 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  message_ptr     2   36[BANK0 ] PTR unsigned char 
  3416 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3426 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;Total ram usage:        5 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:   13
  3433 ;; This function calls:
  3434 ;;		_LCDdataWrite
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function _LCD_Write_Str
  3442  04EF                     _LCD_Write_Str:	
  3443                           
  3444                           ;LCD_I2C_PCF8574.c: 232: unsigned char *message_ptr = (unsigned char *) message;
  3445                           
  3446                           ;incstack = 0
  3447                           ; Regs used in _LCD_Write_Str: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3448  04EF  0020               	movlb	0	; select bank0
  3449  04F0  0842               	movf	LCD_Write_Str@message+1,w
  3450  04F1  00C5               	movwf	LCD_Write_Str@message_ptr+1
  3451  04F2  0841               	movf	LCD_Write_Str@message,w
  3452  04F3  00C4               	movwf	LCD_Write_Str@message_ptr
  3453  04F4                     l2652:	
  3454                           ;LCD_I2C_PCF8574.c: 234: while (*message_ptr)
  3455                           
  3456  04F4  0844               	movf	LCD_Write_Str@message_ptr,w
  3457  04F5  0084               	movwf	4
  3458  04F6  0845               	movf	LCD_Write_Str@message_ptr+1,w
  3459  04F7  0085               	movwf	5
  3460  04F8  0012               	moviw fsr0++
  3461  04F9  1903               	btfsc	3,2
  3462  04FA  0008               	return
  3463                           
  3464                           ;LCD_I2C_PCF8574.c: 235: LCDdataWrite((unsigned char) (*message_ptr++));
  3465  04FB  0844               	movf	LCD_Write_Str@message_ptr,w
  3466  04FC  0084               	movwf	4
  3467  04FD  0845               	movf	LCD_Write_Str@message_ptr+1,w
  3468  04FE  0085               	movwf	5
  3469  04FF  0800               	movf	0,w	;code access
  3470  0500  3185  25F9  3184   	fcall	_LCDdataWrite
  3471  0503  3001               	movlw	1
  3472  0504  0020               	movlb	0	; select bank0
  3473  0505  07C4               	addwf	LCD_Write_Str@message_ptr,f
  3474  0506  3000               	movlw	0
  3475  0507  3DC5               	addwfc	LCD_Write_Str@message_ptr+1,f
  3476  0508  2CF4               	goto	l2652
  3477  0509                     __end_of_LCD_Write_Str:	
  3478                           
  3479                           	psect	text13
  3480  0629                     __ptext13:	
  3481 ;; *************** function _LCD_Write_Char *****************
  3482 ;; Defined at:
  3483 ;;		line 225 in file "LCD_I2C_PCF8574.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  message         1    wreg     unsigned char 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  message         1   33[BANK0 ] unsigned char 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;Total ram usage:        1 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:   13
  3504 ;; This function calls:
  3505 ;;		_LCDdataWrite
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _LCD_Write_Char
  3513  0629                     _LCD_Write_Char:	
  3514                           
  3515                           ;incstack = 0
  3516                           ; Regs used in _LCD_Write_Char: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3517                           ;LCD_Write_Char@message stored from wreg
  3518  0629  0020               	movlb	0	; select bank0
  3519  062A  00C1               	movwf	LCD_Write_Char@message
  3520                           
  3521                           ;LCD_I2C_PCF8574.c: 227: LCDdataWrite((unsigned char) message);
  3522  062B  0841               	movf	LCD_Write_Char@message,w
  3523  062C  3185  25F9         	fcall	_LCDdataWrite
  3524  062E  0008               	return
  3525  062F                     __end_of_LCD_Write_Char:	
  3526                           
  3527                           	psect	text14
  3528  05F9                     __ptext14:	
  3529 ;; *************** function _LCDdataWrite *****************
  3530 ;; Defined at:
  3531 ;;		line 373 in file "LCD_I2C_PCF8574.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  value           1    wreg     unsigned char 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  value           1   32[BANK0 ] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;Total ram usage:        1 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:   12
  3552 ;; This function calls:
  3553 ;;		_LCDsend
  3554 ;; This function is called by:
  3555 ;;		_LCD_Write_Char
  3556 ;;		_LCD_Write_Str
  3557 ;;		_LCDcreateChar
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           
  3562                           ;psect for function _LCDdataWrite
  3563  05F9                     _LCDdataWrite:	
  3564                           
  3565                           ;incstack = 0
  3566                           ; Regs used in _LCDdataWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3567                           ;LCDdataWrite@value stored from wreg
  3568  05F9  0020               	movlb	0	; select bank0
  3569  05FA  00C0               	movwf	LCDdataWrite@value
  3570                           
  3571                           ;LCD_I2C_PCF8574.c: 374: LCDsend(value, 0b00000001);
  3572  05FB  01BA               	clrf	LCDsend@RsMode
  3573  05FC  0ABA               	incf	LCDsend@RsMode,f
  3574  05FD  0840               	movf	LCDdataWrite@value,w
  3575  05FE  3184  2438         	fcall	_LCDsend
  3576  0600  0008               	return
  3577  0601                     __end_of_LCDdataWrite:	
  3578                           
  3579                           	psect	text15
  3580  02A5                     __ptext15:	
  3581 ;; *************** function _LCD_Init *****************
  3582 ;; Defined at:
  3583 ;;		line 160 in file "LCD_I2C_PCF8574.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;		None
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;		None
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;Total ram usage:        2 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:   14
  3604 ;; This function calls:
  3605 ;;		_I2C_Write_Byte_Single_Reg
  3606 ;;		_LCDclear
  3607 ;;		_LCDcommandWrite
  3608 ;;		_LCDdisplayOff
  3609 ;;		_LCDdisplayOn
  3610 ;;		_LCDwrite4bits
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           
  3617                           ;psect for function _LCD_Init
  3618  02A5                     _LCD_Init:	
  3619                           
  3620                           ;LCD_I2C_PCF8574.c: 162: _backlightval |= 0b00001000;
  3621                           
  3622                           ;incstack = 0
  3623                           ; Regs used in _LCD_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3624  02A5  0020               	movlb	0	; select bank0
  3625  02A6  15DA               	bsf	__backlightval,3
  3626                           
  3627                           ;LCD_I2C_PCF8574.c: 163: _numlines = 4;
  3628  02A7  3004               	movlw	4
  3629  02A8  00C2               	movwf	??_LCD_Init
  3630  02A9  0842               	movf	??_LCD_Init,w
  3631  02AA  00DB               	movwf	__numlines
  3632                           
  3633                           ;LCD_I2C_PCF8574.c: 166: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3634  02AB  3002               	movlw	2
  3635  02AC  0020               	movlb	0	; select bank0
  3636  02AD  00C3               	movwf	??_LCD_Init+1
  3637  02AE  3004               	movlw	4
  3638  02AF  00C2               	movwf	??_LCD_Init
  3639  02B0  30BA               	movlw	186
  3640  02B1                     u1737:	
  3641  02B1  0B89               	decfsz	9,f
  3642  02B2  2AB1               	goto	u1737
  3643  02B3  0BC2               	decfsz	??_LCD_Init,f
  3644  02B4  2AB1               	goto	u1737
  3645  02B5  0BC3               	decfsz	??_LCD_Init+1,f
  3646  02B6  2AB1               	goto	u1737
  3647  02B7  0000               	nop
  3648                           
  3649                           ;LCD_I2C_PCF8574.c: 169: I2C_Write_Byte_Single_Reg(0x3F, ((0b00000000 | 0b00000100) & ~0
      +                          b00000001) & (~0b00000010));
  3650  02B8  3004               	movlw	4
  3651  02B9  0020               	movlb	0	; select bank0
  3652  02BA  00C2               	movwf	??_LCD_Init
  3653  02BB  0842               	movf	??_LCD_Init,w
  3654  02BC  00AE               	movwf	I2C_Write_Byte_Single_Reg@info
  3655  02BD  303F               	movlw	63
  3656  02BE  3184  245B  3182   	fcall	_I2C_Write_Byte_Single_Reg
  3657                           
  3658                           ;LCD_I2C_PCF8574.c: 170: _delay((unsigned long)((100)*(16000000/4000000.0)));
  3659  02C1  3085               	movlw	133
  3660  02C2                     u1747:	
  3661  02C2  0B89               	decfsz	9,f
  3662  02C3  2AC2               	goto	u1747
  3663  02C4  0000               	nop
  3664                           
  3665                           ;LCD_I2C_PCF8574.c: 176: LCDwrite4bits(0b00110000);
  3666  02C5  3030               	movlw	48
  3667  02C6  3185  25A5  3182   	fcall	_LCDwrite4bits
  3668                           
  3669                           ;LCD_I2C_PCF8574.c: 177: _delay((unsigned long)((4500)*(16000000/4000000.0)));
  3670  02C9  3018               	movlw	24
  3671  02CA  0020               	movlb	0	; select bank0
  3672  02CB  00C2               	movwf	??_LCD_Init
  3673  02CC  305F               	movlw	95
  3674  02CD                     u1757:	
  3675  02CD  0B89               	decfsz	9,f
  3676  02CE  2ACD               	goto	u1757
  3677  02CF  0BC2               	decfsz	??_LCD_Init,f
  3678  02D0  2ACD               	goto	u1757
  3679                           
  3680                           ;LCD_I2C_PCF8574.c: 180: LCDwrite4bits(0b00110000);
  3681  02D1  3030               	movlw	48
  3682  02D2  3185  25A5  3182   	fcall	_LCDwrite4bits
  3683                           
  3684                           ;LCD_I2C_PCF8574.c: 181: _delay((unsigned long)((150)*(16000000/4000000.0)));
  3685  02D5  30C8               	movlw	200
  3686  02D6                     u1767:	
  3687  02D6  0B89               	decfsz	9,f
  3688  02D7  2AD6               	goto	u1767
  3689                           
  3690                           ;LCD_I2C_PCF8574.c: 184: LCDwrite4bits(0b00110000);
  3691  02D8  3030               	movlw	48
  3692  02D9  3185  25A5  3182   	fcall	_LCDwrite4bits
  3693                           
  3694                           ;LCD_I2C_PCF8574.c: 185: _delay((unsigned long)((150)*(16000000/4000000.0)));
  3695  02DC  30C8               	movlw	200
  3696  02DD                     u1777:	
  3697  02DD  0B89               	decfsz	9,f
  3698  02DE  2ADD               	goto	u1777
  3699                           
  3700                           ;LCD_I2C_PCF8574.c: 188: LCDwrite4bits(0b00100000);
  3701  02DF  3020               	movlw	32
  3702  02E0  3185  25A5  3182   	fcall	_LCDwrite4bits
  3703                           
  3704                           ;LCD_I2C_PCF8574.c: 189: _delay((unsigned long)((150)*(16000000/4000000.0)));
  3705  02E3  30C8               	movlw	200
  3706  02E4                     u1787:	
  3707  02E4  0B89               	decfsz	9,f
  3708  02E5  2AE4               	goto	u1787
  3709                           
  3710                           ;LCD_I2C_PCF8574.c: 192: _functionset = 0x00 | 0x08 | 0x00;
  3711  02E6  3008               	movlw	8
  3712  02E7  0020               	movlb	0	; select bank0
  3713  02E8  00C2               	movwf	??_LCD_Init
  3714  02E9  0842               	movf	??_LCD_Init,w
  3715  02EA  00DF               	movwf	__functionset
  3716                           
  3717                           ;LCD_I2C_PCF8574.c: 193: LCDcommandWrite(0x20 | _functionset);
  3718  02EB  085F               	movf	__functionset,w
  3719  02EC  3820               	iorlw	32
  3720  02ED  3186  2610  3182   	fcall	_LCDcommandWrite
  3721                           
  3722                           ;LCD_I2C_PCF8574.c: 196: _displayfunction = 0x00 | 0x00 | 0x00;
  3723  02F0  0020               	movlb	0	; select bank0
  3724  02F1  01DD               	clrf	__displayfunction
  3725                           
  3726                           ;LCD_I2C_PCF8574.c: 197: LCDdisplayOff();
  3727  02F2  3185  25D4  3182   	fcall	_LCDdisplayOff
  3728                           
  3729                           ;LCD_I2C_PCF8574.c: 200: LCDdisplayOn();
  3730  02F5  3186  2609  3182   	fcall	_LCDdisplayOn
  3731                           
  3732                           ;LCD_I2C_PCF8574.c: 203: _entrymodeset = 0x02 | 0x00;
  3733  02F8  3002               	movlw	2
  3734  02F9  0020               	movlb	0	; select bank0
  3735  02FA  00C2               	movwf	??_LCD_Init
  3736  02FB  0842               	movf	??_LCD_Init,w
  3737  02FC  00DE               	movwf	__entrymodeset
  3738                           
  3739                           ;LCD_I2C_PCF8574.c: 204: LCDcommandWrite(0x04 | _entrymodeset);
  3740  02FD  085E               	movf	__entrymodeset,w
  3741  02FE  3804               	iorlw	4
  3742  02FF  3186  2610  3182   	fcall	_LCDcommandWrite
  3743                           
  3744                           ;LCD_I2C_PCF8574.c: 208: LCDcommandWrite(0x08 | _displayfunction);
  3745  0302  0020               	movlb	0	; select bank0
  3746  0303  085D               	movf	__displayfunction,w
  3747  0304  3808               	iorlw	8
  3748  0305  3186  2610  3182   	fcall	_LCDcommandWrite
  3749                           
  3750                           ;LCD_I2C_PCF8574.c: 211: _displaycontrol = 0x08 | 0x00;
  3751  0308  3008               	movlw	8
  3752  0309  0020               	movlb	0	; select bank0
  3753  030A  00C2               	movwf	??_LCD_Init
  3754  030B  0842               	movf	??_LCD_Init,w
  3755  030C  00DC               	movwf	__displaycontrol
  3756                           
  3757                           ;LCD_I2C_PCF8574.c: 212: LCDcommandWrite(0x10 | _displaycontrol);
  3758  030D  085C               	movf	__displaycontrol,w
  3759  030E  3810               	iorlw	16
  3760  030F  3186  2610  3182   	fcall	_LCDcommandWrite
  3761                           
  3762                           ;LCD_I2C_PCF8574.c: 215: LCDclear();
  3763  0312  3185  2598         	fcall	_LCDclear
  3764  0314  0008               	return
  3765  0315                     __end_of_LCD_Init:	
  3766                           
  3767                           	psect	text16
  3768  0609                     __ptext16:	
  3769 ;; *************** function _LCDdisplayOn *****************
  3770 ;; Defined at:
  3771 ;;		line 273 in file "LCD_I2C_PCF8574.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;Total ram usage:        0 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:   13
  3792 ;; This function calls:
  3793 ;;		_LCDcommandWrite
  3794 ;; This function is called by:
  3795 ;;		_LCD_Init
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           
  3800                           ;psect for function _LCDdisplayOn
  3801  0609                     _LCDdisplayOn:	
  3802                           
  3803                           ;LCD_I2C_PCF8574.c: 274: _displayfunction |= 0x04;
  3804                           
  3805                           ;incstack = 0
  3806                           ; Regs used in _LCDdisplayOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3807  0609  0020               	movlb	0	; select bank0
  3808  060A  155D               	bsf	__displayfunction,2
  3809                           
  3810                           ;LCD_I2C_PCF8574.c: 275: LCDcommandWrite(0x08 | _displayfunction);
  3811  060B  085D               	movf	__displayfunction,w
  3812  060C  3808               	iorlw	8
  3813  060D  3186  2610         	fcall	_LCDcommandWrite
  3814  060F  0008               	return
  3815  0610                     __end_of_LCDdisplayOn:	
  3816                           
  3817                           	psect	text17
  3818  05D4                     __ptext17:	
  3819 ;; *************** function _LCDdisplayOff *****************
  3820 ;; Defined at:
  3821 ;;		line 268 in file "LCD_I2C_PCF8574.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;Total ram usage:        1 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:   13
  3842 ;; This function calls:
  3843 ;;		_LCDcommandWrite
  3844 ;; This function is called by:
  3845 ;;		_LCD_Init
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           
  3850                           ;psect for function _LCDdisplayOff
  3851  05D4                     _LCDdisplayOff:	
  3852                           
  3853                           ;LCD_I2C_PCF8574.c: 269: _displayfunction &= ~0x04;
  3854                           
  3855                           ;incstack = 0
  3856                           ; Regs used in _LCDdisplayOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3857  05D4  30FB               	movlw	251
  3858  05D5  0020               	movlb	0	; select bank0
  3859  05D6  00C1               	movwf	??_LCDdisplayOff
  3860  05D7  0841               	movf	??_LCDdisplayOff,w
  3861  05D8  05DD               	andwf	__displayfunction,f
  3862                           
  3863                           ;LCD_I2C_PCF8574.c: 270: LCDcommandWrite(0x08 | _displayfunction);
  3864  05D9  085D               	movf	__displayfunction,w
  3865  05DA  3808               	iorlw	8
  3866  05DB  3186  2610         	fcall	_LCDcommandWrite
  3867  05DD  0008               	return
  3868  05DE                     __end_of_LCDdisplayOff:	
  3869                           
  3870                           	psect	text18
  3871  0598                     __ptext18:	
  3872 ;; *************** function _LCDclear *****************
  3873 ;; Defined at:
  3874 ;;		line 239 in file "LCD_I2C_PCF8574.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;Total ram usage:        1 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:   13
  3895 ;; This function calls:
  3896 ;;		_LCDcommandWrite
  3897 ;; This function is called by:
  3898 ;;		_main
  3899 ;;		_LCD_Init
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function _LCDclear
  3905  0598                     _LCDclear:	
  3906                           
  3907                           ;LCD_I2C_PCF8574.c: 240: LCDcommandWrite(0x01);
  3908                           
  3909                           ;incstack = 0
  3910                           ; Regs used in _LCDclear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3911  0598  3001               	movlw	1
  3912  0599  3186  2610  3185   	fcall	_LCDcommandWrite
  3913                           
  3914                           ;LCD_I2C_PCF8574.c: 244: _delay((unsigned long)((30000)*(16000000/4000000.0)));
  3915  059C  309C               	movlw	156
  3916  059D  0020               	movlb	0	; select bank0
  3917  059E  00C1               	movwf	??_LCDclear
  3918  059F  30D7               	movlw	215
  3919  05A0                     u1797:	
  3920  05A0  0B89               	decfsz	9,f
  3921  05A1  2DA0               	goto	u1797
  3922  05A2  0BC1               	decfsz	??_LCDclear,f
  3923  05A3  2DA0               	goto	u1797
  3924  05A4  0008               	return
  3925  05A5                     __end_of_LCDclear:	
  3926                           
  3927                           	psect	text19
  3928  0610                     __ptext19:	
  3929 ;; *************** function _LCDcommandWrite *****************
  3930 ;; Defined at:
  3931 ;;		line 365 in file "LCD_I2C_PCF8574.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  value           1    wreg     unsigned char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  value           1   32[BANK0 ] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;Total ram usage:        1 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:   12
  3952 ;; This function calls:
  3953 ;;		_LCDsend
  3954 ;; This function is called by:
  3955 ;;		_LCD_Init
  3956 ;;		_LCDclear
  3957 ;;		_LCDsetCursor
  3958 ;;		_LCDdisplayOff
  3959 ;;		_LCDdisplayOn
  3960 ;;		_LCDhome
  3961 ;;		_LCDcursorOff
  3962 ;;		_LCDcursorOn
  3963 ;;		_LCDblinkOff
  3964 ;;		_LCDblinkOn
  3965 ;;		_LCDscrollDisplayLeft
  3966 ;;		_LCDscrollDisplayRight
  3967 ;;		_LCDleftToRight
  3968 ;;		_LCDrightToLeft
  3969 ;;		_LCDautoscroll
  3970 ;;		_LCDnoAutoscroll
  3971 ;;		_LCDcreateChar
  3972 ;;		_LCDreadDDRam
  3973 ;;		_LCDreadCGRam
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function _LCDcommandWrite
  3979  0610                     _LCDcommandWrite:	
  3980                           
  3981                           ;incstack = 0
  3982                           ; Regs used in _LCDcommandWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3983                           ;LCDcommandWrite@value stored from wreg
  3984  0610  0020               	movlb	0	; select bank0
  3985  0611  00C0               	movwf	LCDcommandWrite@value
  3986                           
  3987                           ;LCD_I2C_PCF8574.c: 366: LCDsend(value, 0b00000001 & ~0b00000001);
  3988  0612  01BA               	clrf	LCDsend@RsMode
  3989  0613  0840               	movf	LCDcommandWrite@value,w
  3990  0614  3184  2438         	fcall	_LCDsend
  3991  0616  0008               	return
  3992  0617                     __end_of_LCDcommandWrite:	
  3993                           
  3994                           	psect	text20
  3995  0438                     __ptext20:	
  3996 ;; *************** function _LCDsend *****************
  3997 ;; Defined at:
  3998 ;;		line 406 in file "LCD_I2C_PCF8574.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  value           1    wreg     unsigned char 
  4001 ;;  RsMode          1   26[BANK0 ] unsigned char 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  value           1   31[BANK0 ] unsigned char 
  4004 ;;  lownib          1   30[BANK0 ] unsigned char 
  4005 ;;  highnib         1   29[BANK0 ] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4015 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4016 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4017 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4018 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4019 ;;Total ram usage:        6 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:   11
  4022 ;; This function calls:
  4023 ;;		_LCDwrite4bits
  4024 ;; This function is called by:
  4025 ;;		_LCDcommandWrite
  4026 ;;		_LCDdataWrite
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           
  4031                           ;psect for function _LCDsend
  4032  0438                     _LCDsend:	
  4033                           
  4034                           ;incstack = 0
  4035                           ; Regs used in _LCDsend: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4036                           ;LCDsend@value stored from wreg
  4037  0438  0020               	movlb	0	; select bank0
  4038  0439  00BF               	movwf	LCDsend@value
  4039                           
  4040                           ;LCD_I2C_PCF8574.c: 407: unsigned char highnib = value & 0xF0;
  4041  043A  083F               	movf	LCDsend@value,w
  4042  043B  39F0               	andlw	240
  4043  043C  00BB               	movwf	??_LCDsend
  4044  043D  083B               	movf	??_LCDsend,w
  4045  043E  00BD               	movwf	LCDsend@highnib
  4046                           
  4047                           ;LCD_I2C_PCF8574.c: 409: unsigned char lownib = value << 4;
  4048  043F  083F               	movf	LCDsend@value,w
  4049  0440  00BB               	movwf	??_LCDsend
  4050  0441  3003               	movlw	3
  4051  0442                     u1415:	
  4052  0442  35BB               	lslf	??_LCDsend,f
  4053  0443  3EFF               	addlw	-1
  4054  0444  1D03               	skipz
  4055  0445  2C42               	goto	u1415
  4056  0446  353B               	lslf	??_LCDsend,w
  4057  0447  00BC               	movwf	??_LCDsend+1
  4058  0448  083C               	movf	??_LCDsend+1,w
  4059  0449  00BE               	movwf	LCDsend@lownib
  4060                           
  4061                           ;LCD_I2C_PCF8574.c: 410: lownib &= 0xF0;
  4062  044A  30F0               	movlw	240
  4063  044B  00BB               	movwf	??_LCDsend
  4064  044C  083B               	movf	??_LCDsend,w
  4065  044D  05BE               	andwf	LCDsend@lownib,f
  4066                           
  4067                           ;LCD_I2C_PCF8574.c: 412: LCDwrite4bits((highnib) | 0b00000100 | RsMode);
  4068  044E  083D               	movf	LCDsend@highnib,w
  4069  044F  043A               	iorwf	LCDsend@RsMode,w
  4070  0450  3804               	iorlw	4
  4071  0451  3185  25A5  3184   	fcall	_LCDwrite4bits
  4072                           
  4073                           ;LCD_I2C_PCF8574.c: 413: LCDwrite4bits((lownib ) | 0b00000100 | RsMode);
  4074  0454  0020               	movlb	0	; select bank0
  4075  0455  083E               	movf	LCDsend@lownib,w
  4076  0456  043A               	iorwf	LCDsend@RsMode,w
  4077  0457  3804               	iorlw	4
  4078  0458  3185  25A5         	fcall	_LCDwrite4bits
  4079  045A  0008               	return
  4080  045B                     __end_of_LCDsend:	
  4081                           
  4082                           	psect	text21
  4083  05A5                     __ptext21:	
  4084 ;; *************** function _LCDwrite4bits *****************
  4085 ;; Defined at:
  4086 ;;		line 432 in file "LCD_I2C_PCF8574.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  nibEnRsMode     1    wreg     unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  nibEnRsMode     1   25[BANK0 ] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;Total ram usage:        1 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:   10
  4107 ;; This function calls:
  4108 ;;		_LCDpulseEnableNeg
  4109 ;;		_LCDwritePCF8574
  4110 ;; This function is called by:
  4111 ;;		_LCD_Init
  4112 ;;		_LCDsend
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function _LCDwrite4bits
  4118  05A5                     _LCDwrite4bits:	
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in _LCDwrite4bits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4122                           ;LCDwrite4bits@nibEnRsMode stored from wreg
  4123  05A5  0020               	movlb	0	; select bank0
  4124  05A6  00B9               	movwf	LCDwrite4bits@nibEnRsMode
  4125                           
  4126                           ;LCD_I2C_PCF8574.c: 433: LCDwritePCF8574(nibEnRsMode & ~0b00000010);
  4127  05A7  0839               	movf	LCDwrite4bits@nibEnRsMode,w
  4128  05A8  39FD               	andlw	253
  4129  05A9  3185  25BE  3185   	fcall	_LCDwritePCF8574
  4130                           
  4131                           ;LCD_I2C_PCF8574.c: 434: LCDpulseEnableNeg(nibEnRsMode & ~0b00000010);
  4132  05AC  0020               	movlb	0	; select bank0
  4133  05AD  0839               	movf	LCDwrite4bits@nibEnRsMode,w
  4134  05AE  39FD               	andlw	253
  4135  05AF  3185  2552         	fcall	_LCDpulseEnableNeg
  4136  05B1  0008               	return
  4137  05B2                     __end_of_LCDwrite4bits:	
  4138                           
  4139                           	psect	text22
  4140  0552                     __ptext22:	
  4141 ;; *************** function _LCDpulseEnableNeg *****************
  4142 ;; Defined at:
  4143 ;;		line 446 in file "LCD_I2C_PCF8574.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  _data           1    wreg     unsigned char 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  _data           1   24[BANK0 ] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;Total ram usage:        1 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    9
  4164 ;; This function calls:
  4165 ;;		_LCDwritePCF8574
  4166 ;; This function is called by:
  4167 ;;		_LCDwrite4bits
  4168 ;;		_LCDread4bits
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           
  4173                           ;psect for function _LCDpulseEnableNeg
  4174  0552                     _LCDpulseEnableNeg:	
  4175                           
  4176                           ;incstack = 0
  4177                           ; Regs used in _LCDpulseEnableNeg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4178                           ;LCDpulseEnableNeg@_data stored from wreg
  4179  0552  0020               	movlb	0	; select bank0
  4180  0553  00B8               	movwf	LCDpulseEnableNeg@_data
  4181                           
  4182                           ;LCD_I2C_PCF8574.c: 447: LCDwritePCF8574(_data | 0b00000100);
  4183  0554  0838               	movf	LCDpulseEnableNeg@_data,w
  4184  0555  3804               	iorlw	4
  4185  0556  3185  25BE  3185   	fcall	_LCDwritePCF8574
  4186                           
  4187                           ;LCD_I2C_PCF8574.c: 448: _delay((unsigned long)((1)*(16000000/4000000.0)));
  4188  0559  3200               	nop2	;2 cycle nop
  4189  055A  3200               	nop2	;2 cycle nop
  4190                           
  4191                           ;LCD_I2C_PCF8574.c: 450: LCDwritePCF8574(_data & ~0b00000100);
  4192  055B  0020               	movlb	0	; select bank0
  4193  055C  0838               	movf	LCDpulseEnableNeg@_data,w
  4194  055D  39FB               	andlw	251
  4195  055E  3185  25BE  3185   	fcall	_LCDwritePCF8574
  4196                           
  4197                           ;LCD_I2C_PCF8574.c: 451: _delay((unsigned long)((50)*(16000000/4000000.0)));
  4198  0561  3042               	movlw	66
  4199  0562                     u1807:	
  4200  0562  0B89               	decfsz	9,f
  4201  0563  2D62               	goto	u1807
  4202  0564  3200               	nop2
  4203  0565  0008               	return
  4204  0566                     __end_of_LCDpulseEnableNeg:	
  4205                           
  4206                           	psect	text23
  4207  05BE                     __ptext23:	
  4208 ;; *************** function _LCDwritePCF8574 *****************
  4209 ;; Defined at:
  4210 ;;		line 463 in file "LCD_I2C_PCF8574.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  value           1    wreg     unsigned char 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  value           1   23[BANK0 ] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;Total ram usage:        2 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    8
  4231 ;; This function calls:
  4232 ;;		_I2C_Write_Byte_Single_Reg
  4233 ;; This function is called by:
  4234 ;;		_LCDwrite4bits
  4235 ;;		_LCDpulseEnableNeg
  4236 ;;		_LCDnoBacklight
  4237 ;;		_LCDbacklight
  4238 ;;		_LCDreceive
  4239 ;;		_LCDpulseEnablePos
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           
  4244                           ;psect for function _LCDwritePCF8574
  4245  05BE                     _LCDwritePCF8574:	
  4246                           
  4247                           ;incstack = 0
  4248                           ; Regs used in _LCDwritePCF8574: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4249                           ;LCDwritePCF8574@value stored from wreg
  4250  05BE  0020               	movlb	0	; select bank0
  4251  05BF  00B7               	movwf	LCDwritePCF8574@value
  4252                           
  4253                           ;LCD_I2C_PCF8574.c: 464: I2C_Write_Byte_Single_Reg(0x3F, value | _backlightval);
  4254  05C0  0837               	movf	LCDwritePCF8574@value,w
  4255  05C1  045A               	iorwf	__backlightval,w
  4256  05C2  00B6               	movwf	??_LCDwritePCF8574
  4257  05C3  0836               	movf	??_LCDwritePCF8574,w
  4258  05C4  00AE               	movwf	I2C_Write_Byte_Single_Reg@info
  4259  05C5  303F               	movlw	63
  4260  05C6  3184  245B         	fcall	_I2C_Write_Byte_Single_Reg
  4261  05C8  0008               	return
  4262  05C9                     __end_of_LCDwritePCF8574:	
  4263                           
  4264                           	psect	text24
  4265  045B                     __ptext24:	
  4266 ;; *************** function _I2C_Write_Byte_Single_Reg *****************
  4267 ;; Defined at:
  4268 ;;		line 10 in file "I2C_UTILS.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  device          1    wreg     unsigned char 
  4271 ;;  info            1   14[BANK0 ] unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  device          1   20[BANK0 ] unsigned char 
  4274 ;;  temp            2   18[BANK0 ] unsigned char [2]
  4275 ;;  status          1   21[BANK0 ] enum E2977
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4285 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;Total ram usage:        8 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    7
  4292 ;; This function calls:
  4293 ;;		_I2C1_MasterWrite
  4294 ;; This function is called by:
  4295 ;;		_LCD_Init
  4296 ;;		_LCDwritePCF8574
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           
  4301                           ;psect for function _I2C_Write_Byte_Single_Reg
  4302  045B                     _I2C_Write_Byte_Single_Reg:	
  4303                           
  4304                           ;incstack = 0
  4305                           ; Regs used in _I2C_Write_Byte_Single_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  4306                           ;I2C_Write_Byte_Single_Reg@device stored from wreg
  4307  045B  0020               	movlb	0	; select bank0
  4308  045C  00B4               	movwf	I2C_Write_Byte_Single_Reg@device
  4309                           
  4310                           ;I2C_UTILS.c: 12: char temp[2];
  4311                           ;I2C_UTILS.c: 13: temp[0] = info;
  4312  045D  082E               	movf	I2C_Write_Byte_Single_Reg@info,w
  4313  045E  00AF               	movwf	??_I2C_Write_Byte_Single_Reg
  4314  045F  082F               	movf	??_I2C_Write_Byte_Single_Reg,w
  4315  0460  00B2               	movwf	I2C_Write_Byte_Single_Reg@temp
  4316                           
  4317                           ;I2C_UTILS.c: 14: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  4318  0461  3002               	movlw	2
  4319  0462  00AF               	movwf	??_I2C_Write_Byte_Single_Reg
  4320  0463  082F               	movf	??_I2C_Write_Byte_Single_Reg,w
  4321  0464  00B5               	movwf	I2C_Write_Byte_Single_Reg@status
  4322                           
  4323                           ;I2C_UTILS.c: 15: I2C1_MasterWrite( temp,
  4324                           ;I2C_UTILS.c: 16: 1,
  4325                           ;I2C_UTILS.c: 17: device,
  4326                           ;I2C_UTILS.c: 18: &status);
  4327  0465  01A7               	clrf	I2C1_MasterWrite@length
  4328  0466  0AA7               	incf	I2C1_MasterWrite@length,f
  4329  0467  0834               	movf	I2C_Write_Byte_Single_Reg@device,w
  4330  0468  00AF               	movwf	??_I2C_Write_Byte_Single_Reg
  4331  0469  01B0               	clrf	??_I2C_Write_Byte_Single_Reg+1
  4332  046A  082F               	movf	??_I2C_Write_Byte_Single_Reg,w
  4333  046B  00A8               	movwf	I2C1_MasterWrite@address
  4334  046C  0830               	movf	??_I2C_Write_Byte_Single_Reg+1,w
  4335  046D  00A9               	movwf	I2C1_MasterWrite@address+1
  4336  046E  3035               	movlw	(low (I2C_Write_Byte_Single_Reg@status| 0))& (0+255)
  4337  046F  00B1               	movwf	??_I2C_Write_Byte_Single_Reg+2
  4338  0470  0831               	movf	??_I2C_Write_Byte_Single_Reg+2,w
  4339  0471  00AA               	movwf	I2C1_MasterWrite@pflag
  4340  0472  3032               	movlw	(low (I2C_Write_Byte_Single_Reg@temp| 0))& (0+255)
  4341  0473  3183  23ED  3184   	fcall	_I2C1_MasterWrite
  4342  0476                     l1830:	
  4343                           ;I2C_UTILS.c: 21: while(status == I2C1_MESSAGE_PENDING);
  4344                           
  4345  0476  3002               	movlw	2
  4346  0477  0020               	movlb	0	; select bank0
  4347  0478  0635               	xorwf	I2C_Write_Byte_Single_Reg@status,w
  4348  0479  1D03               	btfss	3,2
  4349  047A  0008               	return
  4350  047B  2C76               	goto	l1830
  4351  047C                     __end_of_I2C_Write_Byte_Single_Reg:	
  4352                           
  4353                           	psect	text25
  4354  03ED                     __ptext25:	
  4355 ;; *************** function _I2C1_MasterWrite *****************
  4356 ;; Defined at:
  4357 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  pdata           1    wreg     PTR unsigned char 
  4360 ;;		 -> I2C_Write_Byte_Single_Reg@temp(2), main@temp(2), 
  4361 ;;  length          1    7[BANK0 ] unsigned char 
  4362 ;;  address         2    8[BANK0 ] unsigned int 
  4363 ;;  pflag           1   10[BANK0 ] PTR enum E2972
  4364 ;;		 -> I2C_Write_Byte_Single_Reg@status(1), main@status(1), 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  4367 ;;		 -> I2C_Write_Byte_Single_Reg@temp(2), main@temp(2), 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;Total ram usage:        7 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    6
  4384 ;; This function calls:
  4385 ;;		_I2C1_MasterTRBInsert
  4386 ;;		_I2C1_MasterWriteTRBBuild
  4387 ;; This function is called by:
  4388 ;;		_main
  4389 ;;		_I2C_Write_Byte_Single_Reg
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _I2C1_MasterWrite
  4395  03ED                     _I2C1_MasterWrite:	
  4396                           
  4397                           ;incstack = 0
  4398                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4399                           ;I2C1_MasterWrite@pdata stored from wreg
  4400  03ED  0020               	movlb	0	; select bank0
  4401  03EE  00AD               	movwf	I2C1_MasterWrite@pdata
  4402                           
  4403                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  4404                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  4405  03EF  1855               	btfsc	_i2c1_object+2,0
  4406  03F0  2C0E               	goto	l1824
  4407                           
  4408                           ;i2c1.c: 608: {
  4409                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  4410  03F1  082D               	movf	I2C1_MasterWrite@pdata,w
  4411  03F2  00AB               	movwf	??_I2C1_MasterWrite
  4412  03F3  082B               	movf	??_I2C1_MasterWrite,w
  4413  03F4  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  4414  03F5  0827               	movf	I2C1_MasterWrite@length,w
  4415  03F6  00AC               	movwf	??_I2C1_MasterWrite+1
  4416  03F7  082C               	movf	??_I2C1_MasterWrite+1,w
  4417  03F8  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  4418  03F9  0829               	movf	I2C1_MasterWrite@address+1,w
  4419  03FA  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  4420  03FB  0828               	movf	I2C1_MasterWrite@address,w
  4421  03FC  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  4422  03FD  30A4               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  4423  03FE  3184  247C  3183   	fcall	_I2C1_MasterWriteTRBBuild
  4424                           
  4425                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  4426  0401  30A4               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  4427  0402  0020               	movlb	0	; select bank0
  4428  0403  00AB               	movwf	??_I2C1_MasterWrite
  4429  0404  082B               	movf	??_I2C1_MasterWrite,w
  4430  0405  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  4431  0406  082A               	movf	I2C1_MasterWrite@pflag,w
  4432  0407  00AC               	movwf	??_I2C1_MasterWrite+1
  4433  0408  082C               	movf	??_I2C1_MasterWrite+1,w
  4434  0409  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  4435  040A  3001               	movlw	1
  4436  040B  3183  2364         	fcall	_I2C1_MasterTRBInsert
  4437                           
  4438                           ;i2c1.c: 611: }
  4439  040D  0008               	return
  4440  040E                     l1824:	
  4441                           
  4442                           ;i2c1.c: 612: else
  4443                           ;i2c1.c: 613: {
  4444                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  4445  040E  0020               	movlb	0	; select bank0
  4446  040F  082A               	movf	I2C1_MasterWrite@pflag,w
  4447  0410  0086               	movwf	6
  4448  0411  0187               	clrf	7
  4449  0412  0181               	clrf	1
  4450  0413  0A81               	incf	1,f
  4451  0414  0008               	return
  4452  0415                     __end_of_I2C1_MasterWrite:	
  4453                           
  4454                           	psect	text26
  4455  047C                     __ptext26:	
  4456 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  4457 ;; Defined at:
  4458 ;;		line 707 in file "mcc_generated_files/i2c1.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  ptrb            1    wreg     PTR struct .
  4461 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  4462 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  4463 ;;		 -> I2C_Write_Byte_Single_Reg@temp(2), main@temp(2), 
  4464 ;;  length          1    1[BANK0 ] unsigned char 
  4465 ;;  address         2    2[BANK0 ] unsigned int 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  ptrb            1    6[BANK0 ] PTR struct .
  4468 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4478 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;Total ram usage:        7 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    5
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		_I2C1_MasterWrite
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function _I2C1_MasterWriteTRBBuild
  4494  047C                     _I2C1_MasterWriteTRBBuild:	
  4495                           
  4496                           ;incstack = 0
  4497                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  4498                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
  4499  047C  0020               	movlb	0	; select bank0
  4500  047D  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  4501                           
  4502                           ;i2c1.c: 713: ptrb->address = address << 1;
  4503  047E  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
  4504  047F  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
  4505  0480  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
  4506  0481  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  4507  0482  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
  4508  0483  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
  4509  0484  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  4510  0485  0086               	movwf	6
  4511  0486  0187               	clrf	7
  4512  0487  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  4513  0488  3FC0               	movwi [0]fsr1
  4514  0489  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
  4515  048A  3FC1               	movwi [1]fsr1
  4516                           
  4517                           ;i2c1.c: 714: ptrb->length = length;
  4518  048B  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
  4519  048C  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  4520  048D  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  4521  048E  3E02               	addlw	2
  4522  048F  0086               	movwf	6
  4523  0490  0187               	clrf	7
  4524  0491  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  4525  0492  0081               	movwf	1
  4526                           
  4527                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
  4528  0493  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
  4529  0494  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  4530  0495  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  4531  0496  3E03               	addlw	3
  4532  0497  0086               	movwf	6
  4533  0498  0187               	clrf	7
  4534  0499  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  4535  049A  0081               	movwf	1
  4536  049B  0008               	return
  4537  049C                     __end_of_I2C1_MasterWriteTRBBuild:	
  4538                           
  4539                           	psect	text27
  4540  0364                     __ptext27:	
  4541 ;; *************** function _I2C1_MasterTRBInsert *****************
  4542 ;; Defined at:
  4543 ;;		line 641 in file "mcc_generated_files/i2c1.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  count           1    wreg     unsigned char 
  4546 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  4547 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
  4548 ;;  pflag           1    1[BANK0 ] PTR enum E2972
  4549 ;;		 -> I2C_Read_Byte_Single_Reg@status(1), I2C_Write_Byte_Single_Reg@status(1), main@status(1), 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  count           1    3[BANK0 ] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4561 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;Total ram usage:        4 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    5
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_I2C1_MasterWrite
  4572 ;;		_I2C1_MasterRead
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function _I2C1_MasterTRBInsert
  4578  0364                     _I2C1_MasterTRBInsert:	
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  4582                           ;I2C1_MasterTRBInsert@count stored from wreg
  4583  0364  0020               	movlb	0	; select bank0
  4584  0365  00A3               	movwf	I2C1_MasterTRBInsert@count
  4585                           
  4586                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
  4587  0366  1855               	btfsc	_i2c1_object+2,0
  4588  0367  2B98               	goto	l1812
  4589                           
  4590                           ;i2c1.c: 649: {
  4591                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
  4592  0368  3002               	movlw	2
  4593  0369  00A2               	movwf	??_I2C1_MasterTRBInsert
  4594  036A  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  4595  036B  0086               	movwf	6
  4596  036C  0187               	clrf	7
  4597  036D  0822               	movf	??_I2C1_MasterTRBInsert,w
  4598  036E  0081               	movwf	1
  4599                           
  4600                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  4601  036F  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
  4602  0370  00A2               	movwf	??_I2C1_MasterTRBInsert
  4603  0371  0A53               	incf	_i2c1_object,w
  4604  0372  0086               	movwf	6
  4605  0373  0187               	clrf	7
  4606  0374  0822               	movf	??_I2C1_MasterTRBInsert,w
  4607  0375  0081               	movwf	1
  4608                           
  4609                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
  4610  0376  0823               	movf	I2C1_MasterTRBInsert@count,w
  4611  0377  00A2               	movwf	??_I2C1_MasterTRBInsert
  4612  0378  0853               	movf	_i2c1_object,w
  4613  0379  0086               	movwf	6
  4614  037A  0187               	clrf	7
  4615  037B  0822               	movf	??_I2C1_MasterTRBInsert,w
  4616  037C  0081               	movwf	1
  4617                           
  4618                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
  4619  037D  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  4620  037E  00A2               	movwf	??_I2C1_MasterTRBInsert
  4621  037F  0853               	movf	_i2c1_object,w
  4622  0380  3E02               	addlw	2
  4623  0381  0086               	movwf	6
  4624  0382  0187               	clrf	7
  4625  0383  0822               	movf	??_I2C1_MasterTRBInsert,w
  4626  0384  0081               	movwf	1
  4627                           
  4628                           ;i2c1.c: 655: i2c1_object.pTrTail++;
  4629  0385  3003               	movlw	3
  4630  0386  00A2               	movwf	??_I2C1_MasterTRBInsert
  4631  0387  0822               	movf	??_I2C1_MasterTRBInsert,w
  4632  0388  07D3               	addwf	_i2c1_object,f
  4633                           
  4634                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  4635  0389  0853               	movf	_i2c1_object,w
  4636  038A  3A6B               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  4637  038B  1D03               	skipz
  4638  038C  2B91               	goto	l1808
  4639                           
  4640                           ;i2c1.c: 659: {
  4641                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
  4642  038D  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  4643  038E  00A2               	movwf	??_I2C1_MasterTRBInsert
  4644  038F  0822               	movf	??_I2C1_MasterTRBInsert,w
  4645  0390  00D3               	movwf	_i2c1_object
  4646  0391                     l1808:	
  4647                           
  4648                           ;i2c1.c: 662: }
  4649                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
  4650  0391  10D5               	bcf	_i2c1_object+2,1
  4651                           
  4652                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  4653  0392  0854               	movf	low ((_i2c1_object| 0+1)),w
  4654  0393  0653               	xorwf	_i2c1_object,w
  4655  0394  1D03               	skipz
  4656  0395  2B9D               	goto	l1814
  4657                           
  4658                           ;i2c1.c: 670: {
  4659                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
  4660  0396  1455               	bsf	_i2c1_object+2,0
  4661                           
  4662                           ;i2c1.c: 673: }
  4663                           ;i2c1.c: 675: }
  4664  0397  2B9D               	goto	l1814
  4665  0398                     l1812:	
  4666                           
  4667                           ;i2c1.c: 676: else
  4668                           ;i2c1.c: 677: {
  4669                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
  4670  0398  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  4671  0399  0086               	movwf	6
  4672  039A  0187               	clrf	7
  4673  039B  0181               	clrf	1
  4674  039C  0A81               	incf	1,f
  4675  039D                     l1814:	
  4676                           
  4677                           ;i2c1.c: 679: }
  4678                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
  4679  039D  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  4680  039E  0086               	movwf	6
  4681  039F  0187               	clrf	7
  4682  03A0  3002               	movlw	2
  4683  03A1  0601               	xorwf	1,w
  4684  03A2  1D03               	btfss	3,2
  4685  03A3  0008               	return
  4686  03A4                     l1818:	
  4687                           ;i2c1.c: 683: {
  4688                           ;i2c1.c: 684: while(i2c1_state != S_MASTER_IDLE);
  4689                           
  4690  03A4  0867               	movf	_i2c1_state,w
  4691  03A5  1D03               	btfss	3,2
  4692  03A6  2BA4               	goto	l1818
  4693                           
  4694                           ;i2c1.c: 685: {
  4695                           ;i2c1.c: 688: PIR1bits.SSP1IF = 1;
  4696  03A7  1591               	bsf	17,3	;volatile
  4697  03A8  0008               	return
  4698  03A9                     __end_of_I2C1_MasterTRBInsert:	
  4699                           
  4700                           	psect	text28
  4701  0601                     __ptext28:	
  4702 ;; *************** function _EUSART_Write *****************
  4703 ;; Defined at:
  4704 ;;		line 96 in file "mcc_generated_files/eusart.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  txData          1    wreg     unsigned char 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  txData          1    0[BANK0 ] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;Total ram usage:        1 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    5
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_main
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _EUSART_Write
  4734  0601                     _EUSART_Write:	
  4735                           
  4736                           ;incstack = 0
  4737                           ; Regs used in _EUSART_Write: [wreg]
  4738                           ;EUSART_Write@txData stored from wreg
  4739  0601  0020               	movlb	0	; select bank0
  4740  0602  00A0               	movwf	EUSART_Write@txData
  4741  0603                     l31:	
  4742                           ;eusart.c: 99: {
  4743                           
  4744                           ;eusart.c: 98: while(0 == PIR1bits.TXIF)
  4745                           
  4746  0603  1E11               	btfss	17,4	;volatile
  4747  0604  2E03               	goto	l31
  4748                           
  4749                           ;eusart.c: 100: }
  4750                           ;eusart.c: 102: TXREG = txData;
  4751  0605  0820               	movf	EUSART_Write@txData,w
  4752  0606  0023               	movlb	3	; select bank3
  4753  0607  009A               	movwf	26	;volatile
  4754  0608  0008               	return
  4755  0609                     __end_of_EUSART_Write:	
  4756                           
  4757                           	psect	text29
  4758  05DE                     __ptext29:	
  4759 ;; *************** function _EUSART_Read *****************
  4760 ;; Defined at:
  4761 ;;		line 77 in file "mcc_generated_files/eusart.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      unsigned char 
  4768 ;; Registers used:
  4769 ;;		wreg
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;Total ram usage:        0 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    5
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_main
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           
  4790                           ;psect for function _EUSART_Read
  4791  05DE                     _EUSART_Read:	
  4792  05DE                     l24:	
  4793                           ;eusart.c: 81: {
  4794                           
  4795                           ;eusart.c: 80: while(!PIR1bits.RCIF)
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in _EUSART_Read: [wreg]
  4799                           
  4800  05DE  0020               	movlb	0	; select bank0
  4801  05DF  1E91               	btfss	17,5	;volatile
  4802  05E0  2DDE               	goto	l24
  4803                           
  4804                           ;eusart.c: 82: }
  4805                           ;eusart.c: 85: if(1 == RCSTAbits.OERR)
  4806  05E1  0023               	movlb	3	; select bank3
  4807  05E2  1C9D               	btfss	29,1	;volatile
  4808  05E3  2DE6               	goto	l2590
  4809                           
  4810                           ;eusart.c: 86: {
  4811                           ;eusart.c: 89: RCSTAbits.SPEN = 0;
  4812  05E4  139D               	bcf	29,7	;volatile
  4813                           
  4814                           ;eusart.c: 90: RCSTAbits.SPEN = 1;
  4815  05E5  179D               	bsf	29,7	;volatile
  4816  05E6                     l2590:	
  4817                           
  4818                           ;eusart.c: 91: }
  4819                           ;eusart.c: 93: return RCREG;
  4820  05E6  0819               	movf	25,w	;volatile
  4821  05E7  0008               	return
  4822  05E8                     __end_of_EUSART_Read:	
  4823                           
  4824                           	psect	intentry
  4825  0004                     __pintentry:	
  4826 ;; *************** function _INTERRUPT_InterruptManager *****************
  4827 ;; Defined at:
  4828 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    4
  4849 ;; This function calls:
  4850 ;;		_I2C1_BusCollisionISR
  4851 ;;		_I2C1_ISR
  4852 ;;		_TMR1_ISR
  4853 ;; This function is called by:
  4854 ;;		Interrupt level 1
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858  0004                     _INTERRUPT_InterruptManager:	
  4859                           
  4860                           ;incstack = 0
  4861  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4862                           
  4863                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4864  0005  3180               	pagesel	$
  4865  0006  0020               	movlb	0	; select bank0
  4866  0007  087F               	movf	127,w
  4867  0008  00F6               	movwf	??_INTERRUPT_InterruptManager
  4868                           
  4869                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE2bits.BCL1IE == 1 && PIR2bits.BC
      +                          L1IF == 1)
  4870  0009  1F0B               	btfss	11,6	;volatile
  4871  000A  2815               	goto	i1l183
  4872  000B  0021               	movlb	1	; select bank1
  4873  000C  1D92               	btfss	18,3	;volatile
  4874  000D  2815               	goto	i1l183
  4875  000E  0020               	movlb	0	; select bank0
  4876  000F  1D92               	btfss	18,3	;volatile
  4877  0010  2815               	goto	i1l183
  4878                           
  4879                           ;interrupt_manager.c: 55: {
  4880                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
  4881  0011  3186  263E  3180   	fcall	_I2C1_BusCollisionISR
  4882                           
  4883                           ;interrupt_manager.c: 57: }
  4884  0014  282B               	goto	i1l189
  4885  0015                     i1l183:	
  4886                           
  4887                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.SSP1IE == 1 && PIR1bi
      +                          ts.SSP1IF == 1)
  4888  0015  1F0B               	btfss	11,6	;volatile
  4889  0016  2821               	goto	i1l185
  4890  0017  0021               	movlb	1	; select bank1
  4891  0018  1D91               	btfss	17,3	;volatile
  4892  0019  2821               	goto	i1l185
  4893  001A  0020               	movlb	0	; select bank0
  4894  001B  1D91               	btfss	17,3	;volatile
  4895  001C  2821               	goto	i1l185
  4896                           
  4897                           ;interrupt_manager.c: 59: {
  4898                           ;interrupt_manager.c: 60: I2C1_ISR();
  4899  001D  3180  205C  3180   	fcall	_I2C1_ISR
  4900                           
  4901                           ;interrupt_manager.c: 61: }
  4902  0020  282B               	goto	i1l189
  4903  0021                     i1l185:	
  4904                           
  4905                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  4906  0021  1F0B               	btfss	11,6	;volatile
  4907  0022  282B               	goto	i1l189
  4908  0023  0021               	movlb	1	; select bank1
  4909  0024  1C11               	btfss	17,0	;volatile
  4910  0025  282B               	goto	i1l189
  4911  0026  0020               	movlb	0	; select bank0
  4912  0027  1C11               	btfss	17,0	;volatile
  4913  0028  282B               	goto	i1l189
  4914                           
  4915                           ;interrupt_manager.c: 63: {
  4916                           ;interrupt_manager.c: 64: TMR1_ISR();
  4917  0029  3185  25E8         	fcall	_TMR1_ISR
  4918  002B                     i1l189:	
  4919                           ;interrupt_manager.c: 66: else
  4920                           ;interrupt_manager.c: 67: {
  4921                           
  4922                           ;interrupt_manager.c: 65: }
  4923                           
  4924  002B  0876               	movf	??_INTERRUPT_InterruptManager,w
  4925  002C  0020               	movlb	0	; select bank0
  4926  002D  00FF               	movwf	127
  4927  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4928  002F  0009               	retfie
  4929  0030                     __end_of_INTERRUPT_InterruptManager:	
  4930                           
  4931                           	psect	text31
  4932  05E8                     __ptext31:	
  4933 ;; *************** function _TMR1_ISR *****************
  4934 ;; Defined at:
  4935 ;;		line 114 in file "mcc_generated_files/tmr1.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0, pclath, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    3
  4956 ;; This function calls:
  4957 ;;		_TMR1_CallBack
  4958 ;; This function is called by:
  4959 ;;		_INTERRUPT_InterruptManager
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function _TMR1_ISR
  4965  05E8                     _TMR1_ISR:	
  4966                           
  4967                           ;tmr1.c: 118: PIR1bits.TMR1IF = 0;
  4968                           
  4969                           ;incstack = 0
  4970                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4971  05E8  0020               	movlb	0	; select bank0
  4972  05E9  1011               	bcf	17,0	;volatile
  4973                           
  4974                           ;tmr1.c: 120: TMR1H = (timer1ReloadVal >> 8);
  4975  05EA  087B               	movf	_timer1ReloadVal+1,w	;volatile
  4976  05EB  0097               	movwf	23	;volatile
  4977                           
  4978                           ;tmr1.c: 121: TMR1L = timer1ReloadVal;
  4979  05EC  087A               	movf	_timer1ReloadVal,w	;volatile
  4980  05ED  0096               	movwf	22	;volatile
  4981                           
  4982                           ;tmr1.c: 125: TMR1_CallBack();
  4983  05EE  3185  25C9         	fcall	_TMR1_CallBack
  4984  05F0  0008               	return
  4985  05F1                     __end_of_TMR1_ISR:	
  4986                           
  4987                           	psect	text32
  4988  05C9                     __ptext32:	
  4989 ;; *************** function _TMR1_CallBack *****************
  4990 ;; Defined at:
  4991 ;;		line 128 in file "mcc_generated_files/tmr1.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0, pclath, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;Total ram usage:        0 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    2
  5012 ;; This function calls:
  5013 ;;		Absolute function
  5014 ;;		_TMR1_DefaultInterruptHandler
  5015 ;;		_TMR1_Routine
  5016 ;; This function is called by:
  5017 ;;		_TMR1_ISR
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function _TMR1_CallBack
  5023  05C9                     _TMR1_CallBack:	
  5024                           
  5025                           ;tmr1.c: 131: if(TMR1_InterruptHandler)
  5026                           
  5027                           ;incstack = 0
  5028                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  5029  05C9  0020               	movlb	0	; select bank0
  5030  05CA  086B               	movf	_TMR1_InterruptHandler,w
  5031  05CB  046C               	iorwf	_TMR1_InterruptHandler+1,w
  5032  05CC  1903               	btfsc	3,2
  5033  05CD  0008               	return
  5034                           
  5035                           ;tmr1.c: 132: {
  5036                           ;tmr1.c: 133: TMR1_InterruptHandler();
  5037  05CE  086C               	movf	_TMR1_InterruptHandler+1,w
  5038  05CF  008A               	movwf	10
  5039  05D0  086B               	movf	_TMR1_InterruptHandler,w
  5040  05D1  000A               	callw
  5041  05D2  3185               	pagesel	$
  5042  05D3  0008               	return
  5043  05D4                     __end_of_TMR1_CallBack:	
  5044                           
  5045                           	psect	text33
  5046  063D                     __ptext33:	
  5047 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5048 ;; Defined at:
  5049 ;;		line 141 in file "mcc_generated_files/tmr1.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;		None
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		None
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5067 ;;Total ram usage:        0 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_TMR1_Initialize
  5073 ;;		_TMR1_CallBack
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function _TMR1_DefaultInterruptHandler
  5079  063D                     _TMR1_DefaultInterruptHandler:	
  5080                           
  5081                           ;incstack = 0
  5082                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  5083  063D  0008               	return
  5084  063E                     __end_of_TMR1_DefaultInterruptHandler:	
  5085                           
  5086                           	psect	text34
  5087  0315                     __ptext34:	
  5088 ;; *************** function _TMR1_Routine *****************
  5089 ;; Defined at:
  5090 ;;		line 54 in file "main.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, pclath, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;Total ram usage:        4 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    1
  5111 ;; This function calls:
  5112 ;;		_TMR1_WriteTimer
  5113 ;; This function is called by:
  5114 ;;		_main
  5115 ;;		_TMR1_CallBack
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           
  5120                           ;psect for function _TMR1_Routine
  5121  0315                     _TMR1_Routine:	
  5122                           
  5123                           ;main.c: 57: if(outputStatus)
  5124                           
  5125                           ;incstack = 0
  5126                           ; Regs used in _TMR1_Routine: [wreg+status,2+status,0+pclath+cstack]
  5127  0315  0020               	movlb	0	; select bank0
  5128  0316  0861               	movf	_outputStatus,w	;volatile
  5129  0317  1903               	btfsc	3,2
  5130  0318  2B37               	goto	i1l1878
  5131                           
  5132                           ;main.c: 58: {
  5133                           ;main.c: 59: outputStatus = 0;
  5134  0319  01E1               	clrf	_outputStatus	;volatile
  5135                           
  5136                           ;main.c: 60: TMR1_WriteTimer(65535 - (4000 - dimmLevel));
  5137  031A  097C               	comf	_dimmLevel,w	;volatile
  5138  031B  00F2               	movwf	??_TMR1_Routine
  5139  031C  097D               	comf	_dimmLevel+1,w	;volatile
  5140  031D  00F3               	movwf	??_TMR1_Routine+1
  5141  031E  0AF2               	incf	??_TMR1_Routine,f
  5142  031F  1903               	skipnz
  5143  0320  0AF3               	incf	??_TMR1_Routine+1,f
  5144  0321  0872               	movf	??_TMR1_Routine,w
  5145  0322  3EA0               	addlw	160
  5146  0323  00F4               	movwf	??_TMR1_Routine+2
  5147  0324  300F               	movlw	15
  5148  0325  3D73               	addwfc	??_TMR1_Routine+1,w
  5149  0326  00F5               	movwf	??_TMR1_Routine+3
  5150  0327  09F4               	comf	??_TMR1_Routine+2,f
  5151  0328  09F5               	comf	??_TMR1_Routine+3,f
  5152  0329  0AF4               	incf	??_TMR1_Routine+2,f
  5153  032A  1903               	skipnz
  5154  032B  0AF5               	incf	??_TMR1_Routine+3,f
  5155  032C  0874               	movf	??_TMR1_Routine+2,w
  5156  032D  3EFF               	addlw	255
  5157  032E  00F0               	movwf	TMR1_WriteTimer@timerVal
  5158  032F  30FF               	movlw	255
  5159  0330  3D75               	addwfc	??_TMR1_Routine+3,w
  5160  0331  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5161  0332  3185  2589         	fcall	_TMR1_WriteTimer
  5162                           
  5163                           ;main.c: 61: do { LATCbits.LATC3 = 0; } while(0);
  5164  0334  0022               	movlb	2	; select bank2
  5165  0335  118E               	bcf	14,3	;volatile
  5166                           
  5167                           ;main.c: 62: }
  5168  0336  0008               	return
  5169  0337                     i1l1878:	
  5170                           
  5171                           ;main.c: 63: else
  5172                           ;main.c: 64: {
  5173                           ;main.c: 65: outputStatus = 1;
  5174  0337  3001               	movlw	1
  5175  0338  00F2               	movwf	??_TMR1_Routine
  5176  0339  0872               	movf	??_TMR1_Routine,w
  5177  033A  0020               	movlb	0	; select bank0
  5178  033B  00E1               	movwf	_outputStatus	;volatile
  5179                           
  5180                           ;main.c: 66: if(dimmLevel == 0)
  5181  033C  087C               	movf	_dimmLevel,w	;volatile
  5182  033D  047D               	iorwf	_dimmLevel+1,w	;volatile
  5183  033E  1D03               	btfss	3,2
  5184  033F  2B52               	goto	i1l1886
  5185                           
  5186                           ;main.c: 67: {
  5187                           ;main.c: 68: TMR1_WriteTimer(65535 - dimmLevel);
  5188  0340  097C               	comf	_dimmLevel,w	;volatile
  5189  0341  00F2               	movwf	??_TMR1_Routine
  5190  0342  097D               	comf	_dimmLevel+1,w	;volatile
  5191  0343  00F3               	movwf	??_TMR1_Routine+1
  5192  0344  0AF2               	incf	??_TMR1_Routine,f
  5193  0345  1903               	skipnz
  5194  0346  0AF3               	incf	??_TMR1_Routine+1,f
  5195  0347  0872               	movf	??_TMR1_Routine,w
  5196  0348  3EFF               	addlw	255
  5197  0349  00F0               	movwf	TMR1_WriteTimer@timerVal
  5198  034A  30FF               	movlw	255
  5199  034B  3D73               	addwfc	??_TMR1_Routine+1,w
  5200  034C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5201  034D  3185  2589         	fcall	_TMR1_WriteTimer
  5202                           
  5203                           ;main.c: 69: do { LATCbits.LATC3 = 0; } while(0);
  5204  034F  0022               	movlb	2	; select bank2
  5205  0350  118E               	bcf	14,3	;volatile
  5206                           
  5207                           ;main.c: 70: }
  5208  0351  0008               	return
  5209  0352                     i1l1886:	
  5210                           
  5211                           ;main.c: 71: else
  5212                           ;main.c: 72: {
  5213                           ;main.c: 73: TMR1_WriteTimer(65535 - dimmLevel);
  5214  0352  097C               	comf	_dimmLevel,w	;volatile
  5215  0353  00F2               	movwf	??_TMR1_Routine
  5216  0354  097D               	comf	_dimmLevel+1,w	;volatile
  5217  0355  00F3               	movwf	??_TMR1_Routine+1
  5218  0356  0AF2               	incf	??_TMR1_Routine,f
  5219  0357  1903               	skipnz
  5220  0358  0AF3               	incf	??_TMR1_Routine+1,f
  5221  0359  0872               	movf	??_TMR1_Routine,w
  5222  035A  3EFF               	addlw	255
  5223  035B  00F0               	movwf	TMR1_WriteTimer@timerVal
  5224  035C  30FF               	movlw	255
  5225  035D  3D73               	addwfc	??_TMR1_Routine+1,w
  5226  035E  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5227  035F  3185  2589         	fcall	_TMR1_WriteTimer
  5228                           
  5229                           ;main.c: 74: do { LATCbits.LATC3 = 1; } while(0);
  5230  0361  0022               	movlb	2	; select bank2
  5231  0362  158E               	bsf	14,3	;volatile
  5232  0363  0008               	return
  5233  0364                     __end_of_TMR1_Routine:	
  5234                           
  5235                           	psect	text35
  5236  0589                     __ptext35:	
  5237 ;; *************** function _TMR1_WriteTimer *****************
  5238 ;; Defined at:
  5239 ;;		line 75 in file "mcc_generated_files/tmr1.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  timerVal        2    0[COMMON] unsigned int 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5257 ;;Total ram usage:        2 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_TMR1_Routine
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           
  5267                           ;psect for function _TMR1_WriteTimer
  5268  0589                     _TMR1_WriteTimer:	
  5269                           
  5270                           ;tmr1.c: 77: if (T1CONbits.nT1SYNC == 1)
  5271                           
  5272                           ;incstack = 0
  5273                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5274  0589  0020               	movlb	0	; select bank0
  5275  058A  1D18               	btfss	24,2	;volatile
  5276  058B  2D93               	goto	i1l1852
  5277                           
  5278                           ;tmr1.c: 78: {
  5279                           ;tmr1.c: 80: T1CONbits.TMR1ON = 0;
  5280  058C  1018               	bcf	24,0	;volatile
  5281                           
  5282                           ;tmr1.c: 83: TMR1H = (timerVal >> 8);
  5283  058D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5284  058E  0097               	movwf	23	;volatile
  5285                           
  5286                           ;tmr1.c: 84: TMR1L = timerVal;
  5287  058F  0870               	movf	TMR1_WriteTimer@timerVal,w
  5288  0590  0096               	movwf	22	;volatile
  5289                           
  5290                           ;tmr1.c: 87: T1CONbits.TMR1ON =1;
  5291  0591  1418               	bsf	24,0	;volatile
  5292                           
  5293                           ;tmr1.c: 88: }
  5294  0592  0008               	return
  5295  0593                     i1l1852:	
  5296                           
  5297                           ;tmr1.c: 89: else
  5298                           ;tmr1.c: 90: {
  5299                           ;tmr1.c: 92: TMR1H = (timerVal >> 8);
  5300  0593  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5301  0594  0097               	movwf	23	;volatile
  5302                           
  5303                           ;tmr1.c: 93: TMR1L = timerVal;
  5304  0595  0870               	movf	TMR1_WriteTimer@timerVal,w
  5305  0596  0096               	movwf	22	;volatile
  5306  0597  0008               	return
  5307  0598                     __end_of_TMR1_WriteTimer:	
  5308                           
  5309                           	psect	text36
  5310  005C                     __ptext36:	
  5311 ;; *************** function _I2C1_ISR *****************
  5312 ;; Defined at:
  5313 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;Total ram usage:        4 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    1
  5334 ;; This function calls:
  5335 ;;		_I2C1_FunctionComplete
  5336 ;;		_I2C1_Stop
  5337 ;; This function is called by:
  5338 ;;		_INTERRUPT_InterruptManager
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           
  5343                           ;psect for function _I2C1_ISR
  5344  005C                     _I2C1_ISR:	
  5345                           
  5346                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  5347                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  5348                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  5349                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  5350                           ;i2c1.c: 241: PIR1bits.SSP1IF = 0;
  5351                           
  5352                           ;incstack = 0
  5353                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5354  005C  0020               	movlb	0	; select bank0
  5355  005D  1191               	bcf	17,3	;volatile
  5356                           
  5357                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  5358  005E  0024               	movlb	4	; select bank4
  5359  005F  1F95               	btfss	21,7	;volatile
  5360  0060  2990               	goto	i1l2142
  5361                           
  5362                           ;i2c1.c: 246: {
  5363                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  5364  0061  1395               	bcf	21,7	;volatile
  5365                           
  5366                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  5367  0062  0020               	movlb	0	; select bank0
  5368  0063  01E7               	clrf	_i2c1_state
  5369                           
  5370                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  5371  0064  0865               	movf	_p_i2c1_current,w
  5372  0065  3E02               	addlw	2
  5373  0066  0086               	movwf	6
  5374  0067  0187               	clrf	7
  5375  0068  0801               	movf	1,w
  5376  0069  0086               	movwf	6
  5377  006A  0187               	clrf	7
  5378  006B  0181               	clrf	1
  5379  006C  0A81               	incf	1,f
  5380                           
  5381                           ;i2c1.c: 253: p_i2c1_current = (0);
  5382  006D  01E5               	clrf	_p_i2c1_current
  5383                           
  5384                           ;i2c1.c: 255: return;
  5385  006E  0008               	return
  5386  006F                     i1l249:	
  5387                           ;i2c1.c: 260: {
  5388                           ;i2c1.c: 261: case S_MASTER_IDLE:
  5389                           
  5390                           ;i2c1.c: 256: }
  5391                           ;i2c1.c: 259: switch(i2c1_state)
  5392                           
  5393                           
  5394                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  5395  006F  18D5               	btfsc	_i2c1_object+2,1
  5396  0070  0008               	return
  5397                           
  5398                           ;i2c1.c: 264: {
  5399                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  5400  0071  0854               	movf	low ((_i2c1_object| 0+1)),w
  5401  0072  00F2               	movwf	??_I2C1_ISR
  5402  0073  0872               	movf	??_I2C1_ISR,w
  5403  0074  00E5               	movwf	_p_i2c1_current
  5404                           
  5405                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  5406  0075  0854               	movf	low ((_i2c1_object| 0+1)),w
  5407  0076  0086               	movwf	6
  5408  0077  0187               	clrf	7
  5409  0078  0801               	movf	1,w
  5410  0079  00F2               	movwf	??_I2C1_ISR
  5411  007A  0872               	movf	??_I2C1_ISR,w
  5412  007B  00E6               	movwf	_i2c1_trb_count
  5413                           
  5414                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  5415  007C  0854               	movf	low ((_i2c1_object| 0+1)),w
  5416  007D  0086               	movwf	6
  5417  007E  0187               	clrf	7
  5418  007F  3F41               	moviw [1]fsr1
  5419  0080  00F7               	movwf	_p_i2c1_trb_current
  5420                           
  5421                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  5422  0081  3003               	movlw	3
  5423  0082  00F2               	movwf	??_I2C1_ISR
  5424  0083  0872               	movf	??_I2C1_ISR,w
  5425  0084  07D4               	addwf	low ((_i2c1_object| 0+1)),f
  5426                           
  5427                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  5428  0085  0854               	movf	low ((_i2c1_object| 0+1)),w
  5429  0086  3A6B               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  5430  0087  1D03               	skipz
  5431  0088  288D               	goto	i1l2030
  5432                           
  5433                           ;i2c1.c: 274: {
  5434                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  5435  0089  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  5436  008A  00F2               	movwf	??_I2C1_ISR
  5437  008B  0872               	movf	??_I2C1_ISR,w
  5438  008C  00D4               	movwf	low ((_i2c1_object| 0+1))
  5439  008D                     i1l2030:	
  5440                           
  5441                           ;i2c1.c: 277: }
  5442                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  5443  008D  1055               	bcf	_i2c1_object+2,0
  5444                           
  5445                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  5446  008E  0854               	movf	low ((_i2c1_object| 0+1)),w
  5447  008F  0653               	xorwf	_i2c1_object,w
  5448  0090  1903               	btfsc	3,2
  5449                           
  5450                           ;i2c1.c: 285: {
  5451                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  5452  0091  14D5               	bsf	_i2c1_object+2,1
  5453                           
  5454                           ;i2c1.c: 288: }
  5455                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  5456  0092  0024               	movlb	4	; select bank4
  5457  0093  1416               	bsf	22,0	;volatile
  5458                           
  5459                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  5460  0094  3002               	movlw	2
  5461  0095  00F2               	movwf	??_I2C1_ISR
  5462  0096  0872               	movf	??_I2C1_ISR,w
  5463  0097  0020               	movlb	0	; select bank0
  5464  0098  00E7               	movwf	_i2c1_state
  5465                           
  5466                           ;i2c1.c: 295: }
  5467                           ;i2c1.c: 297: break;
  5468  0099  0008               	return
  5469  009A                     i1l254:	
  5470                           ;i2c1.c: 299: case S_MASTER_RESTART:
  5471                           
  5472                           
  5473                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  5474  009A  0024               	movlb	4	; select bank4
  5475  009B  1496               	bsf	22,1	;volatile
  5476                           
  5477                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  5478  009C  3002               	movlw	2
  5479  009D  00F2               	movwf	??_I2C1_ISR
  5480  009E  0872               	movf	??_I2C1_ISR,w
  5481  009F  0020               	movlb	0	; select bank0
  5482  00A0  00E7               	movwf	_i2c1_state
  5483                           
  5484                           ;i2c1.c: 309: break;
  5485  00A1  0008               	return
  5486  00A2                     i1l255:	
  5487                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  5488                           
  5489                           
  5490                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  5491  00A2  0024               	movlb	4	; select bank4
  5492  00A3  1F16               	btfss	22,6	;volatile
  5493  00A4  28AE               	goto	i1l2042
  5494                           
  5495                           ;i2c1.c: 314: {
  5496                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  5497  00A5  3001               	movlw	1
  5498  00A6  00F2               	movwf	??_I2C1_ISR
  5499  00A7  0872               	movf	??_I2C1_ISR,w
  5500  00A8  0020               	movlb	0	; select bank0
  5501  00A9  07D7               	addwf	_i2c1_object+4,f
  5502                           
  5503                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5504  00AA  3004               	movlw	4
  5505  00AB  3185  253A         	fcall	_I2C1_Stop
  5506                           
  5507                           ;i2c1.c: 317: }
  5508  00AD  0008               	return
  5509  00AE                     i1l2042:	
  5510                           
  5511                           ;i2c1.c: 318: else
  5512                           ;i2c1.c: 319: {
  5513                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  5514  00AE  0879               	movf	I2C1_ISR@i2c_address+1,w
  5515  00AF  00F3               	movwf	??_I2C1_ISR+1
  5516  00B0  0878               	movf	I2C1_ISR@i2c_address,w
  5517  00B1  00F2               	movwf	??_I2C1_ISR
  5518  00B2  36F3               	lsrf	??_I2C1_ISR+1,f
  5519  00B3  0CF2               	rrf	??_I2C1_ISR,f
  5520  00B4  0872               	movf	??_I2C1_ISR,w
  5521  00B5  0024               	movlb	4	; select bank4
  5522  00B6  0091               	movwf	17	;volatile
  5523                           
  5524                           ;i2c1.c: 324: if(i2c_address & 0x01)
  5525  00B7  1C78               	btfss	I2C1_ISR@i2c_address,0
  5526  00B8  28BF               	goto	i1l2048
  5527                           
  5528                           ;i2c1.c: 325: {
  5529                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  5530  00B9  300B               	movlw	11
  5531  00BA  00F2               	movwf	??_I2C1_ISR
  5532  00BB  0872               	movf	??_I2C1_ISR,w
  5533  00BC  0020               	movlb	0	; select bank0
  5534  00BD  00E7               	movwf	_i2c1_state
  5535                           
  5536                           ;i2c1.c: 329: }
  5537  00BE  0008               	return
  5538  00BF                     i1l2048:	
  5539                           
  5540                           ;i2c1.c: 330: else
  5541                           ;i2c1.c: 331: {
  5542                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  5543  00BF  3003               	movlw	3
  5544  00C0  00F2               	movwf	??_I2C1_ISR
  5545  00C1  0872               	movf	??_I2C1_ISR,w
  5546  00C2  0020               	movlb	0	; select bank0
  5547  00C3  00E7               	movwf	_i2c1_state
  5548                           
  5549                           ;i2c1.c: 334: }
  5550                           ;i2c1.c: 335: }
  5551                           ;i2c1.c: 337: break;
  5552  00C4  0008               	return
  5553  00C5                     i1l260:	
  5554                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
  5555                           
  5556                           
  5557                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  5558  00C5  0024               	movlb	4	; select bank4
  5559  00C6  1F16               	btfss	22,6	;volatile
  5560  00C7  28D1               	goto	i1l261
  5561                           
  5562                           ;i2c1.c: 342: {
  5563                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  5564  00C8  3001               	movlw	1
  5565  00C9  00F2               	movwf	??_I2C1_ISR
  5566  00CA  0872               	movf	??_I2C1_ISR,w
  5567  00CB  0020               	movlb	0	; select bank0
  5568  00CC  07D7               	addwf	_i2c1_object+4,f
  5569                           
  5570                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5571  00CD  3004               	movlw	4
  5572  00CE  3185  253A         	fcall	_I2C1_Stop
  5573                           
  5574                           ;i2c1.c: 345: }
  5575  00D0  0008               	return
  5576  00D1                     i1l261:	
  5577                           
  5578                           ;i2c1.c: 346: else
  5579                           ;i2c1.c: 347: {
  5580                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  5581  00D1  1496               	bsf	22,1	;volatile
  5582                           
  5583                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  5584  00D2  0879               	movf	I2C1_ISR@i2c_address+1,w
  5585  00D3  00F3               	movwf	??_I2C1_ISR+1
  5586  00D4  0878               	movf	I2C1_ISR@i2c_address,w
  5587  00D5  00F2               	movwf	??_I2C1_ISR
  5588  00D6  0873               	movf	??_I2C1_ISR+1,w
  5589  00D7  00F2               	movwf	??_I2C1_ISR
  5590  00D8  01F3               	clrf	??_I2C1_ISR+1
  5591  00D9  3006               	movlw	6
  5592  00DA  0572               	andwf	??_I2C1_ISR,w
  5593  00DB  00F4               	movwf	??_I2C1_ISR+2
  5594  00DC  3000               	movlw	0
  5595  00DD  0573               	andwf	??_I2C1_ISR+1,w
  5596  00DE  00F5               	movwf	??_I2C1_ISR+3
  5597  00DF  30F0               	movlw	240
  5598  00E0  0474               	iorwf	??_I2C1_ISR+2,w
  5599  00E1  00F8               	movwf	I2C1_ISR@i2c_address
  5600  00E2  3000               	movlw	0
  5601  00E3  0475               	iorwf	??_I2C1_ISR+3,w
  5602  00E4  00F9               	movwf	I2C1_ISR@i2c_address+1
  5603                           
  5604                           ;i2c1.c: 357: i2c_address |= 0x0001;
  5605  00E5  1478               	bsf	I2C1_ISR@i2c_address,0
  5606                           
  5607                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  5608  00E6  0020               	movlb	0	; select bank0
  5609  00E7  01E2               	clrf	I2C1_ISR@i2c_10bit_address_restart
  5610  00E8  0AE2               	incf	I2C1_ISR@i2c_10bit_address_restart,f
  5611                           
  5612                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  5613  00E9  3002               	movlw	2
  5614  00EA  00F2               	movwf	??_I2C1_ISR
  5615  00EB  0872               	movf	??_I2C1_ISR,w
  5616  00EC  00E7               	movwf	_i2c1_state
  5617                           
  5618                           ;i2c1.c: 364: }
  5619                           ;i2c1.c: 366: break;
  5620  00ED  0008               	return
  5621  00EE                     i1l2062:	
  5622                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
  5623                           
  5624                           
  5625                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  5626  00EE  0362               	decf	I2C1_ISR@i2c_10bit_address_restart,w
  5627  00EF  1903               	btfsc	3,2
  5628  00F0  2902               	goto	i1l2082
  5629                           
  5630                           ;i2c1.c: 382: {
  5631                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  5632  00F1  0877               	movf	_p_i2c1_trb_current,w
  5633  00F2  0086               	movwf	6
  5634  00F3  0187               	clrf	7
  5635  00F4  3F40               	moviw [0]fsr1
  5636  00F5  00F8               	movwf	I2C1_ISR@i2c_address
  5637  00F6  3F41               	moviw [1]fsr1
  5638  00F7  00F9               	movwf	I2C1_ISR@i2c_address+1
  5639                           
  5640                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  5641  00F8  0877               	movf	_p_i2c1_trb_current,w
  5642  00F9  0086               	movwf	6
  5643  00FA  0187               	clrf	7
  5644  00FB  3F43               	moviw [3]fsr1
  5645  00FC  00E4               	movwf	I2C1_ISR@pi2c_buf_ptr
  5646                           
  5647                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  5648  00FD  0877               	movf	_p_i2c1_trb_current,w
  5649  00FE  0086               	movwf	6
  5650  00FF  0187               	clrf	7
  5651  0100  3F42               	moviw [2]fsr1
  5652  0101  00E3               	movwf	I2C1_ISR@i2c_bytes_left
  5653  0102                     i1l2082:	
  5654                           ;i2c1.c: 407: }
  5655                           ;i2c1.c: 408: }
  5656                           
  5657                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
  5658                           
  5659                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
  5660                           
  5661                           ;i2c1.c: 400: else
  5662                           ;i2c1.c: 401: {
  5663                           ;i2c1.c: 403: SSP1BUF = i2c_address;
  5664                           
  5665                           ;i2c1.c: 399: }
  5666                           
  5667                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  5668                           
  5669                           ;i2c1.c: 393: {
  5670                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  5671                           
  5672                           ;i2c1.c: 391: {
  5673                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
  5674                           
  5675                           ;i2c1.c: 387: }
  5676                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
  5677                           
  5678                           
  5679                           ;i2c1.c: 409: else
  5680                           ;i2c1.c: 410: {
  5681                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  5682  0102  0878               	movf	I2C1_ISR@i2c_address,w
  5683  0103  0024               	movlb	4	; select bank4
  5684  0104  0091               	movwf	17	;volatile
  5685                           
  5686                           ;i2c1.c: 413: if(i2c_address & 0x01)
  5687  0105  1C78               	btfss	I2C1_ISR@i2c_address,0
  5688  0106  290D               	goto	i1l2088
  5689                           
  5690                           ;i2c1.c: 414: {
  5691                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  5692  0107  3005               	movlw	5
  5693  0108  00F2               	movwf	??_I2C1_ISR
  5694  0109  0872               	movf	??_I2C1_ISR,w
  5695  010A  0020               	movlb	0	; select bank0
  5696  010B  00E7               	movwf	_i2c1_state
  5697                           
  5698                           ;i2c1.c: 417: }
  5699  010C  0008               	return
  5700  010D                     i1l2088:	
  5701                           
  5702                           ;i2c1.c: 418: else
  5703                           ;i2c1.c: 419: {
  5704                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  5705  010D  3003               	movlw	3
  5706  010E  00F2               	movwf	??_I2C1_ISR
  5707  010F  0872               	movf	??_I2C1_ISR,w
  5708  0110  0020               	movlb	0	; select bank0
  5709  0111  00E7               	movwf	_i2c1_state
  5710                           
  5711                           ;i2c1.c: 422: }
  5712                           ;i2c1.c: 423: }
  5713                           ;i2c1.c: 424: break;
  5714  0112  0008               	return
  5715  0113                     i1l271:	
  5716                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
  5717                           
  5718                           
  5719                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  5720  0113  0024               	movlb	4	; select bank4
  5721  0114  1F16               	btfss	22,6	;volatile
  5722  0115  2921               	goto	i1l2096
  5723                           
  5724                           ;i2c1.c: 430: {
  5725                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  5726  0116  3001               	movlw	1
  5727  0117  00F2               	movwf	??_I2C1_ISR
  5728  0118  0872               	movf	??_I2C1_ISR,w
  5729  0119  0020               	movlb	0	; select bank0
  5730  011A  07D7               	addwf	_i2c1_object+4,f
  5731                           
  5732                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  5733  011B  0024               	movlb	4	; select bank4
  5734  011C  1316               	bcf	22,6	;volatile
  5735                           
  5736                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  5737  011D  3005               	movlw	5
  5738  011E  3185  253A         	fcall	_I2C1_Stop
  5739                           
  5740                           ;i2c1.c: 440: }
  5741  0120  0008               	return
  5742  0121                     i1l2096:	
  5743                           
  5744                           ;i2c1.c: 441: else
  5745                           ;i2c1.c: 442: {
  5746                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  5747  0121  3001               	movlw	1
  5748  0122  0020               	movlb	0	; select bank0
  5749  0123  02E3               	subwf	I2C1_ISR@i2c_bytes_left,f
  5750  0124  0A63               	incf	I2C1_ISR@i2c_bytes_left,w
  5751  0125  1D03               	btfss	3,2
  5752  0126  293B               	goto	i1l2104
  5753                           
  5754                           ;i2c1.c: 445: {
  5755                           ;i2c1.c: 449: p_i2c1_trb_current++;
  5756  0127  3004               	movlw	4
  5757  0128  00F2               	movwf	??_I2C1_ISR
  5758  0129  0872               	movf	??_I2C1_ISR,w
  5759  012A  07F7               	addwf	_p_i2c1_trb_current,f
  5760                           
  5761                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  5762  012B  3001               	movlw	1
  5763  012C  02E6               	subwf	_i2c1_trb_count,f
  5764  012D  1D03               	btfss	3,2
  5765  012E  2933               	goto	i1l275
  5766                           
  5767                           ;i2c1.c: 453: {
  5768                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  5769  012F  3000               	movlw	0
  5770  0130  3185  253A         	fcall	_I2C1_Stop
  5771                           
  5772                           ;i2c1.c: 455: }
  5773  0132  0008               	return
  5774  0133                     i1l275:	
  5775                           
  5776                           ;i2c1.c: 456: else
  5777                           ;i2c1.c: 457: {
  5778                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  5779  0133  0024               	movlb	4	; select bank4
  5780  0134  1496               	bsf	22,1	;volatile
  5781                           
  5782                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  5783  0135  3002               	movlw	2
  5784  0136  00F2               	movwf	??_I2C1_ISR
  5785  0137  0872               	movf	??_I2C1_ISR,w
  5786  0138  0020               	movlb	0	; select bank0
  5787  0139  00E7               	movwf	_i2c1_state
  5788                           
  5789                           ;i2c1.c: 469: }
  5790                           ;i2c1.c: 470: }
  5791  013A  0008               	return
  5792  013B                     i1l2104:	
  5793                           
  5794                           ;i2c1.c: 471: else
  5795                           ;i2c1.c: 472: {
  5796                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  5797  013B  0864               	movf	I2C1_ISR@pi2c_buf_ptr,w
  5798  013C  0086               	movwf	6
  5799  013D  0187               	clrf	7
  5800  013E  0801               	movf	1,w
  5801  013F  0024               	movlb	4	; select bank4
  5802  0140  0091               	movwf	17	;volatile
  5803  0141  3001               	movlw	1
  5804  0142  00F2               	movwf	??_I2C1_ISR
  5805  0143  0872               	movf	??_I2C1_ISR,w
  5806  0144  0020               	movlb	0	; select bank0
  5807  0145  07E4               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  5808                           
  5809                           ;i2c1.c: 475: }
  5810                           ;i2c1.c: 476: }
  5811                           ;i2c1.c: 477: break;
  5812  0146  0008               	return
  5813  0147                     i1l278:	
  5814                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
  5815                           
  5816                           
  5817                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  5818  0147  0024               	movlb	4	; select bank4
  5819  0148  1F16               	btfss	22,6	;volatile
  5820  0149  2955               	goto	i1l279
  5821                           
  5822                           ;i2c1.c: 483: {
  5823                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  5824  014A  3001               	movlw	1
  5825  014B  00F2               	movwf	??_I2C1_ISR
  5826  014C  0872               	movf	??_I2C1_ISR,w
  5827  014D  0020               	movlb	0	; select bank0
  5828  014E  07D7               	addwf	_i2c1_object+4,f
  5829                           
  5830                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5831  014F  3004               	movlw	4
  5832  0150  3185  253A         	fcall	_I2C1_Stop
  5833                           
  5834                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  5835  0152  0024               	movlb	4	; select bank4
  5836  0153  1316               	bcf	22,6	;volatile
  5837                           
  5838                           ;i2c1.c: 493: }
  5839  0154  0008               	return
  5840  0155                     i1l279:	
  5841                           
  5842                           ;i2c1.c: 494: else
  5843                           ;i2c1.c: 495: {
  5844                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  5845  0155  1596               	bsf	22,3	;volatile
  5846                           
  5847                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  5848  0156  3008               	movlw	8
  5849  0157  00F2               	movwf	??_I2C1_ISR
  5850  0158  0872               	movf	??_I2C1_ISR,w
  5851  0159  0020               	movlb	0	; select bank0
  5852  015A  00E7               	movwf	_i2c1_state
  5853                           
  5854                           ;i2c1.c: 498: }
  5855                           ;i2c1.c: 499: break;
  5856  015B  0008               	return
  5857  015C                     i1l2116:	
  5858                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
  5859                           
  5860                           
  5861                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  5862  015C  3008               	movlw	8
  5863  015D  00F2               	movwf	??_I2C1_ISR
  5864  015E  0872               	movf	??_I2C1_ISR,w
  5865  015F  00E7               	movwf	_i2c1_state
  5866                           
  5867                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  5868  0160  0024               	movlb	4	; select bank4
  5869  0161  1596               	bsf	22,3	;volatile
  5870                           
  5871                           ;i2c1.c: 511: break;
  5872  0162  0008               	return
  5873  0163                     i1l2120:	
  5874                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
  5875                           
  5876                           
  5877                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  5878  0163  0024               	movlb	4	; select bank4
  5879  0164  0811               	movf	17,w	;volatile
  5880  0165  00F2               	movwf	??_I2C1_ISR
  5881  0166  0020               	movlb	0	; select bank0
  5882  0167  0864               	movf	I2C1_ISR@pi2c_buf_ptr,w
  5883  0168  0086               	movwf	6
  5884  0169  0187               	clrf	7
  5885  016A  0872               	movf	??_I2C1_ISR,w
  5886  016B  0081               	movwf	1
  5887  016C  3001               	movlw	1
  5888  016D  00F2               	movwf	??_I2C1_ISR
  5889  016E  0872               	movf	??_I2C1_ISR,w
  5890  016F  07E4               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  5891                           
  5892                           ;i2c1.c: 519: if(--i2c_bytes_left)
  5893  0170  3001               	movlw	1
  5894  0171  02E3               	subwf	I2C1_ISR@i2c_bytes_left,f
  5895  0172  1903               	btfsc	3,2
  5896  0173  297C               	goto	i1l283
  5897                           
  5898                           ;i2c1.c: 520: {
  5899                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  5900  0174  0024               	movlb	4	; select bank4
  5901  0175  1296               	bcf	22,5	;volatile
  5902                           
  5903                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  5904  0176  3006               	movlw	6
  5905  0177  00F2               	movwf	??_I2C1_ISR
  5906  0178  0872               	movf	??_I2C1_ISR,w
  5907  0179  0020               	movlb	0	; select bank0
  5908  017A  00E7               	movwf	_i2c1_state
  5909                           
  5910                           ;i2c1.c: 530: }
  5911  017B  2980               	goto	i1l2132
  5912  017C                     i1l283:	
  5913                           
  5914                           ;i2c1.c: 531: else
  5915                           ;i2c1.c: 532: {
  5916                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  5917  017C  0024               	movlb	4	; select bank4
  5918  017D  1696               	bsf	22,5	;volatile
  5919                           
  5920                           ;i2c1.c: 538: I2C1_FunctionComplete();
  5921  017E  3185  2578         	fcall	_I2C1_FunctionComplete
  5922  0180                     i1l2132:	
  5923                           
  5924                           ;i2c1.c: 539: }
  5925                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  5926  0180  0024               	movlb	4	; select bank4
  5927  0181  1616               	bsf	22,4	;volatile
  5928                           
  5929                           ;i2c1.c: 543: break;
  5930  0182  0008               	return
  5931  0183                     i1l2134:	
  5932                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
  5933                           
  5934                           
  5935                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  5936                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  5937  0183  3000               	movlw	0
  5938  0184  3185  253A         	fcall	_I2C1_Stop
  5939                           
  5940                           ;i2c1.c: 550: break;
  5941  0186  0008               	return
  5942  0187                     i1l2136:	
  5943                           ;i2c1.c: 552: default:
  5944                           
  5945                           
  5946                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  5947  0187  3001               	movlw	1
  5948  0188  00F2               	movwf	??_I2C1_ISR
  5949  0189  0872               	movf	??_I2C1_ISR,w
  5950  018A  0020               	movlb	0	; select bank0
  5951  018B  07D7               	addwf	_i2c1_object+4,f
  5952                           
  5953                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  5954  018C  3006               	movlw	6
  5955  018D  3185  253A         	fcall	_I2C1_Stop
  5956                           
  5957                           ;i2c1.c: 560: }
  5958                           
  5959                           ;i2c1.c: 558: break;
  5960  018F  0008               	return
  5961  0190                     i1l2142:	
  5962  0190  0020               	movlb	0	; select bank0
  5963  0191  0867               	movf	_i2c1_state,w
  5964                           
  5965                           ; Switch size 1, requested type "space"
  5966                           ; Number of cases is 11, Range of values is 0 to 11
  5967                           ; switch strategies available:
  5968                           ; Name         Instructions Cycles
  5969                           ; direct_byte           30     6 (fixed)
  5970                           ; simple_byte           34    18 (average)
  5971                           ; jumptable            260     6 (fixed)
  5972                           ;	Chosen strategy is direct_byte
  5973  0192  0084               	movwf	4
  5974  0193  300C               	movlw	12
  5975  0194  0204               	subwf	4,w
  5976  0195  1803               	skipnc
  5977  0196  2987               	goto	i1l2136
  5978  0197  3185               	movlp	high i1S2886
  5979  0198  3504               	lslf	4,w
  5980  0199  3E22               	addlw	low i1S2886
  5981  019A  0082               	movwf	2
  5982  019B  0008               	return
  5983  019C                     __end_of_I2C1_ISR:	
  5984                           
  5985                           	psect	swtext1
  5986  0522                     __pswtext1:	
  5987  0522                     i1S2886:	
  5988  0522  3180  286F         	ljmp	i1l249
  5989  0524  3180  289A         	ljmp	i1l254
  5990  0526  3180  28EE         	ljmp	i1l2062
  5991  0528  3181  2913         	ljmp	i1l271
  5992  052A  3181  2983         	ljmp	i1l2134
  5993  052C  3181  2947         	ljmp	i1l278
  5994  052E  3181  295C         	ljmp	i1l2116
  5995  0530  3181  2983         	ljmp	i1l2134
  5996  0532  3181  2963         	ljmp	i1l2120
  5997  0534  3181  2987         	ljmp	i1l2136
  5998  0536  3180  28A2         	ljmp	i1l255
  5999  0538  3180  28C5         	ljmp	i1l260
  6000                           
  6001                           	psect	text37
  6002  053A                     __ptext37:	
  6003 ;; *************** function _I2C1_Stop *****************
  6004 ;; Defined at:
  6005 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  completion_c    1    wreg     enum E2972
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;  completion_c    1    1[COMMON] enum E2972
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      void 
  6012 ;; Registers used:
  6013 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;Total ram usage:        2 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; This function calls:
  6026 ;;		Nothing
  6027 ;; This function is called by:
  6028 ;;		_I2C1_ISR
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           
  6033                           ;psect for function _I2C1_Stop
  6034  053A                     _I2C1_Stop:	
  6035                           
  6036                           ;incstack = 0
  6037                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6038                           ;I2C1_Stop@completion_code stored from wreg
  6039  053A  00F1               	movwf	I2C1_Stop@completion_code
  6040                           
  6041                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  6042  053B  0024               	movlb	4	; select bank4
  6043  053C  1516               	bsf	22,2	;volatile
  6044                           
  6045                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  6046  053D  0020               	movlb	0	; select bank0
  6047  053E  0865               	movf	_p_i2c1_current,w
  6048  053F  3E02               	addlw	2
  6049  0540  0086               	movwf	6
  6050  0541  0187               	clrf	7
  6051  0542  0801               	movf	1,w
  6052  0543  1903               	btfsc	3,2
  6053  0544  2D50               	goto	i1l1962
  6054                           
  6055                           ;i2c1.c: 588: {
  6056                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  6057  0545  0871               	movf	I2C1_Stop@completion_code,w
  6058  0546  00F0               	movwf	??_I2C1_Stop
  6059  0547  0865               	movf	_p_i2c1_current,w
  6060  0548  3E02               	addlw	2
  6061  0549  0086               	movwf	6
  6062  054A  0187               	clrf	7
  6063  054B  0801               	movf	1,w
  6064  054C  0086               	movwf	6
  6065  054D  0187               	clrf	7
  6066  054E  0870               	movf	??_I2C1_Stop,w
  6067  054F  0081               	movwf	1
  6068  0550                     i1l1962:	
  6069                           
  6070                           ;i2c1.c: 591: }
  6071                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  6072  0550  01E7               	clrf	_i2c1_state
  6073  0551  0008               	return
  6074  0552                     __end_of_I2C1_Stop:	
  6075                           
  6076                           	psect	text38
  6077  0578                     __ptext38:	
  6078 ;; *************** function _I2C1_FunctionComplete *****************
  6079 ;; Defined at:
  6080 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;		None
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      void 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;Total ram usage:        1 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; This function calls:
  6101 ;;		Nothing
  6102 ;; This function is called by:
  6103 ;;		_I2C1_ISR
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           
  6108                           ;psect for function _I2C1_FunctionComplete
  6109  0578                     _I2C1_FunctionComplete:	
  6110                           
  6111                           ;i2c1.c: 567: p_i2c1_trb_current++;
  6112                           
  6113                           ;incstack = 0
  6114                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
  6115  0578  3004               	movlw	4
  6116  0579  00F0               	movwf	??_I2C1_FunctionComplete
  6117  057A  0870               	movf	??_I2C1_FunctionComplete,w
  6118  057B  07F7               	addwf	_p_i2c1_trb_current,f
  6119                           
  6120                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  6121  057C  3001               	movlw	1
  6122  057D  0020               	movlb	0	; select bank0
  6123  057E  02E6               	subwf	_i2c1_trb_count,f
  6124  057F  1D03               	btfss	3,2
  6125  0580  2D86               	goto	i1l290
  6126                           
  6127                           ;i2c1.c: 571: {
  6128                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  6129  0581  3004               	movlw	4
  6130  0582  00F0               	movwf	??_I2C1_FunctionComplete
  6131  0583  0870               	movf	??_I2C1_FunctionComplete,w
  6132  0584  00E7               	movwf	_i2c1_state
  6133                           
  6134                           ;i2c1.c: 573: }
  6135  0585  0008               	return
  6136  0586                     i1l290:	
  6137                           
  6138                           ;i2c1.c: 574: else
  6139                           ;i2c1.c: 575: {
  6140                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  6141  0586  01E7               	clrf	_i2c1_state
  6142  0587  0AE7               	incf	_i2c1_state,f
  6143  0588  0008               	return
  6144  0589                     __end_of_I2C1_FunctionComplete:	
  6145                           
  6146                           	psect	text39
  6147  063E                     __ptext39:	
  6148 ;; *************** function _I2C1_BusCollisionISR *****************
  6149 ;; Defined at:
  6150 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  1    wreg      void 
  6157 ;; Registers used:
  6158 ;;		None
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;Total ram usage:        0 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_INTERRUPT_InterruptManager
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           
  6178                           ;psect for function _I2C1_BusCollisionISR
  6179  063E                     _I2C1_BusCollisionISR:	
  6180                           
  6181                           ;incstack = 0
  6182                           ; Regs used in _I2C1_BusCollisionISR: []
  6183  063E  0008               	return
  6184  063F                     __end_of_I2C1_BusCollisionISR:	
  6185  007E                     btemp	set	126	;btemp
  6186  007E                     int$flags	set	126
  6187  007E                     wtemp0	set	126


Data Sizes:
    Strings     68
    Constant    0
    Data        10
    BSS         35
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     51      77
    BANK1            80      0      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), main@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    LCD_Write_Str@message	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    LCD_Write_Str@message_ptr	PTR unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), main@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E2972 size(1) Largest target is 1
		 -> I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), main@status(BANK0[1]), 

    F3084.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E2972 size(1) Largest target is 1
		 -> I2C_Write_Byte_Single_Reg@status(BANK0[1]), main@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    F3079.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), LCDreceive@RsMode(COMMON[1]), main@temp(BANK0[2]), 
		 -> I2C1_ISR@i2c_address(COMMON[2]), NULL(NULL[0]), 

    S457$pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), main@temp(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), main@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S469$pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), main@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), main@status(BANK0[1]), 

    S469$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S480$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S480$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_Routine(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Routine(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _TMR1_CallBack->_TMR1_Routine
    _TMR1_Routine->_TMR1_WriteTimer
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_LCDsetCursor
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDsetCursor->_LCDcommandWrite
    _LCD_Write_Str->_LCDdataWrite
    _LCD_Write_Char->_LCDdataWrite
    _LCDdataWrite->_LCDsend
    _LCD_Init->_LCDclear
    _LCD_Init->_LCDdisplayOff
    _LCDdisplayOn->_LCDcommandWrite
    _LCDdisplayOff->_LCDcommandWrite
    _LCDclear->_LCDcommandWrite
    _LCDcommandWrite->_LCDsend
    _LCDsend->_LCDwrite4bits
    _LCDwrite4bits->_LCDpulseEnableNeg
    _LCDpulseEnableNeg->_LCDwritePCF8574
    _LCDwritePCF8574->_I2C_Write_Byte_Single_Reg
    _I2C_Write_Byte_Single_Reg->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   34018
                                             44 BANK0      7     7      0
                        _EUSART_Read
                       _EUSART_Write
                   _I2C1_MasterWrite
                           _LCD_Init
                     _LCD_Write_Char
                      _LCD_Write_Str
                           _LCDclear
                       _LCDsetCursor
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     161
                  _EUSART_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     161
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDsetCursor                                        11    10      1    3864
                                             33 BANK0     11    10      1
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Str                                        5     3      2    3635
                                             33 BANK0      5     3      2
                       _LCDdataWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Char                                       1     1      0    3307
                                             33 BANK0      1     1      0
                       _LCDdataWrite
 ---------------------------------------------------------------------------------
 (2) _LCDdataWrite                                         1     1      0    3276
                                             32 BANK0      1     1      0
                            _LCDsend
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0   17400
                                             34 BANK0      2     2      0
          _I2C_Write_Byte_Single_Reg
                           _LCDclear
                    _LCDcommandWrite
                      _LCDdisplayOff
                       _LCDdisplayOn
                      _LCDwrite4bits
 ---------------------------------------------------------------------------------
 (2) _LCDdisplayOn                                         0     0      0    3276
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (2) _LCDdisplayOff                                        1     1      0    3276
                                             33 BANK0      1     1      0
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (1) _LCDclear                                             1     1      0    3276
                                             33 BANK0      1     1      0
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (2) _LCDcommandWrite                                      1     1      0    3276
                                             32 BANK0      1     1      0
                            _LCDsend
 ---------------------------------------------------------------------------------
 (3) _LCDsend                                              6     5      1    3245
                                             26 BANK0      6     5      1
                      _LCDwrite4bits
 ---------------------------------------------------------------------------------
 (4) _LCDwrite4bits                                        1     1      0    2920
                                             25 BANK0      1     1      0
                  _LCDpulseEnableNeg
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (5) _LCDpulseEnableNeg                                    1     1      0    1460
                                             24 BANK0      1     1      0
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (5) _LCDwritePCF8574                                      2     2      0    1398
                                             22 BANK0      2     2      0
          _I2C_Write_Byte_Single_Reg
 ---------------------------------------------------------------------------------
 (6) _I2C_Write_Byte_Single_Reg                            8     7      1    1376
                                             14 BANK0      8     7      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterWrite                                     7     3      4    1144
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWriteTRBBuild                             7     3      4     318
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterTRBInsert                                 4     2      2     344
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0     269
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     247
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR1_CallBack                                       0     0      0     247
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR1_Routine *
 ---------------------------------------------------------------------------------
 (14) _TMR1_Routine                                        4     4      0     247
                                              2 COMMON     4     4      0
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_WriteTimer                                     2     0      2     247
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (13) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_Write
   _I2C1_MasterWrite
     _I2C1_MasterTRBInsert
     _I2C1_MasterWriteTRBBuild
   _LCD_Init
     _I2C_Write_Byte_Single_Reg
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LCDclear
       _LCDcommandWrite
         _LCDsend
           _LCDwrite4bits
             _LCDpulseEnableNeg
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                     _I2C1_MasterWriteTRBBuild
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                   _I2C1_MasterWriteTRBBuild
     _LCDcommandWrite
       _LCDsend
         _LCDwrite4bits
           _LCDpulseEnableNeg
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                   _I2C1_MasterWriteTRBBuild
           _LCDwritePCF8574
             _I2C_Write_Byte_Single_Reg
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                 _I2C1_MasterWriteTRBBuild
     _LCDdisplayOff
       _LCDcommandWrite
         _LCDsend
           _LCDwrite4bits
             _LCDpulseEnableNeg
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                     _I2C1_MasterWriteTRBBuild
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                   _I2C1_MasterWriteTRBBuild
     _LCDdisplayOn
       _LCDcommandWrite
         _LCDsend
           _LCDwrite4bits
             _LCDpulseEnableNeg
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                     _I2C1_MasterWriteTRBBuild
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                   _I2C1_MasterWriteTRBBuild
     _LCDwrite4bits
       _LCDpulseEnableNeg
         _LCDwritePCF8574
           _I2C_Write_Byte_Single_Reg
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
               _I2C1_MasterWriteTRBBuild
       _LCDwritePCF8574
         _I2C_Write_Byte_Single_Reg
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
   _LCD_Write_Char
     _LCDdataWrite
       _LCDsend
         _LCDwrite4bits
           _LCDpulseEnableNeg
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                   _I2C1_MasterWriteTRBBuild
           _LCDwritePCF8574
             _I2C_Write_Byte_Single_Reg
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                 _I2C1_MasterWriteTRBBuild
   _LCD_Write_Str
     _LCDdataWrite
       _LCDsend
         _LCDwrite4bits
           _LCDpulseEnableNeg
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                   _I2C1_MasterWriteTRBBuild
           _LCDwritePCF8574
             _I2C_Write_Byte_Single_Reg
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                 _I2C1_MasterWriteTRBBuild
   _LCDclear
     _LCDcommandWrite
       _LCDsend
         _LCDwrite4bits
           _LCDpulseEnableNeg
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                   _I2C1_MasterWriteTRBBuild
           _LCDwritePCF8574
             _I2C_Write_Byte_Single_Reg
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                 _I2C1_MasterWriteTRBBuild
   _LCDsetCursor
     _LCDcommandWrite
       _LCDsend
         _LCDwrite4bits
           _LCDpulseEnableNeg
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                   _I2C1_MasterWriteTRBBuild
           _LCDwritePCF8574
             _I2C_Write_Byte_Single_Reg
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                 _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR1_Routine *
         _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 16 09:44:38 2017

                                       pc 0002                      LCD_Write_Str@message 0041  
                             __CFG_CP$OFF 0000                                        l31 0603  
                                      l24 05DE                       ___wmul@multiplicand 0022  
                        ?_LCDcommandWrite 0070                                       l392 0252  
                                     l676 04C2                              __CFG_CPD$OFF 0000  
                         _timer1ReloadVal 007A                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                __size_of_LCDwritePCF8574 000B                              ?_EUSART_Read 0070  
                            __CFG_LVP$OFF 0000                          __end_of_I2C1_ISR 019C  
                                    l1812 0398                                      l1814 039D  
                                    l1830 0476                                      l1808 0391  
                                    l1824 040E                                      l1818 03A4  
                                    l2722 022E                                      l2652 04F4  
                                    l2644 042E                                      l2740 0267  
                                    l2590 05E6                                      l2760 0288  
                                    l2744 026F                                      l2736 025F  
                                    l2666 04BC                                      l2770 029F  
                                    l2754 027E                                      l2748 0277  
                         __end_of_LCDsend 045B                                      STR_1 03A9  
                                    STR_2 03CB                                      STR_3 03BA  
                                    STR_4 03DC                                      _LATA 010C  
                                    _LATB 010D                                      u1415 0442  
                                    _LATC 010E                                      u1505 04C8  
                                    u1450 0421                                      u1707 01AF  
                                    u1717 01F5                                      u1807 0562  
                                    u1495 04C3                                      u1727 0222  
                                    u1737 02B1                                      u1747 02C2  
                                    u1757 02CD                                      u1767 02D6  
                                    u1777 02DD                                      u1787 02E4  
                                    u1797 05A0                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 019C                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                    ??_I2C1_MasterTRBInsert 0022  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 0030                              main@nCommand 0052  
              ??_TMR1_SetInterruptHandler 0022             I2C_Write_Byte_Single_Reg@info 002E  
                           __CFG_MCLRE$ON 0000             I2C_Write_Byte_Single_Reg@temp 0032  
                           _LCD_Write_Str 04EF            I2C1_MasterWriteTRBBuild@length 0021  
                        __end_of_LCD_Init 0315                                _i2c1_state 0067  
                           __CFG_PLLEN$ON 0000                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 0005                 I2C1_MasterTRBInsert@count 0023  
           __end_of_OSCILLATOR_Initialize 0634                          __end_of_LCDclear 05A5  
               I2C1_MasterTRBInsert@pflag 0021                                     ?_main 0070  
                       __end_of_I2C1_Stop 0552                             __CFG_WDTE$OFF 0000  
                         _TMR1_StartTimer 0638                                     _T1CON 0018  
                                   i1l260 00C5                                     i1l261 00D1  
                                   i1l254 009A                                     i1l271 0113  
                                   i1l255 00A2                                     i1l183 0015  
                                   i1l249 006F                                     i1l185 0021  
                                   i1l290 0586                                     i1l283 017C  
                                   i1l275 0133                                     i1l189 002B  
                                   i1l278 0147                                     i1l279 0155  
                                   _RCREG 0199                                     _RCSTA 019D  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                                     _TXREG 019A  
                  __size_of_LCDdisplayOff 000A                                     _TXSTA 019E  
            __end_of_I2C1_BusCollisionISR 063F                              _outputStatus 0061  
                       ??_I2C1_Initialize 0020                          __end_of_TMR1_ISR 05F1  
                           ?_LCDdataWrite 0070                            _WDT_Initialize 0634  
                 __end_of_TMR1_Initialize 04EF                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0589                             ?_LCDdisplayOn 0070  
         I2C1_MasterWriteTRBBuild@address 0022                            ?_LCD_Write_Str 0041  
                          _LCD_Write_Char 0629                           __initialization 0032  
                   I2C1_MasterWrite@pdata 002D                     I2C1_MasterWrite@pflag 002A  
                            __end_of_main 02A5                            ??_EUSART_Write 0020  
                LCD_Write_Str@message_ptr 0044               ?_INTERRUPT_InterruptManager 0070  
                             _i2c1_object 0053                                    ??_main 004C  
                               ??_LCDsend 003B                            ??_LCDdataWrite 0040  
                  __end_of_WDT_Initialize 0638                         _LCDpulseEnableNeg 0552  
                           ?_LCDsetCursor 0041                        ?_LCDpulseEnableNeg 0070  
                                  i1S2886 0522                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0070  
                                  i1l2030 008D                                    i1l2120 0163  
                                  i1l2104 013B                                    i1l2042 00AE  
                                  i1l2132 0180                                    i1l2116 015C  
                                  i1l2134 0183                                    i1l2062 00EE  
                                  i1l2142 0190                                    i1l2136 0187  
                                  i1l2048 00BF                                    i1l2082 0102  
                                  i1l2096 0121                                    i1l2088 010D  
                                  i1l1852 0593                                    i1l1962 0550  
                                  i1l1886 0352                                    i1l1878 0337  
                       ??_LCDwritePCF8574 0036                                    _OSCCON 0099  
                                  _SPBRGH 019C                                    _SPBRGL 019B  
                                  _WDTCON 0097                       ??_LCDpulseEnableNeg 0038  
                          ??_LCDdisplayOn 0041                         ?_I2C1_MasterWrite 0027  
                  __end_of_LCD_Write_Char 062F                             _LCDdisplayOff 05D4  
                          __CFG_PWRTE$OFF 0000                        ??_I2C1_MasterWrite 002B  
    __end_of_TMR1_DefaultInterruptHandler 063E     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 063D                            _p_i2c1_current 0065  
                 __end_of_TMR1_StartTimer 063B                                    ___wmul 04B9  
                          __CFG_STVREN$ON 0000                ??_I2C1_MasterWriteTRBBuild 0024  
                               ?_I2C1_ISR 0070                 __end_of_LCDpulseEnableNeg 0566  
                            __pdataCOMMON 007C                           LCDsetCursor@col 004B  
                          ??_LCDsetCursor 0042                           LCDsetCursor@row 0041  
                         ?_WDT_Initialize 0070  TMR1_SetInterruptHandler@InterruptHandler 0020  
           I2C1_MasterWriteTRBBuild@pdata 0020                   __end_of_TMR1_WriteTimer 0598  
                   __end_of_TMR1_CallBack 05D4                          ?_TMR1_Initialize 0070  
                    __size_of_EUSART_Read 000A                         _SYSTEM_Initialize 0566  
                   LCD_Write_Char@message 0041                   __end_of__initialization 0058  
                               ?_LCD_Init 0070                        ?_SYSTEM_Initialize 0070  
                          ?_LCDdisplayOff 0070                                 ?_LCDclear 0070  
                         ??_LCD_Write_Str 0043                           ?_LCD_Write_Char 0070  
                  __size_of_LCDwrite4bits 000D                            _i2c1_trb_count 0066  
                   _I2C1_FunctionComplete 0578                      _I2C1_BusCollisionISR 063E  
                          __pcstackCOMMON 0070                    I2C1_MasterWrite@length 0027  
                            __pidataBANK1 05F1                       ??_SYSTEM_Initialize 0022  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                            __functionset 005F                                ??_I2C1_ISR 0072  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 0578  
                              __pbssBANK0 0053                                __pbssBANK1 00A0  
                    __end_of_EUSART_Write 0609                                ??_LCD_Init 0042  
                              __pnvCOMMON 007A                                ??_LCDclear 0041  
                   ?_I2C1_BusCollisionISR 0070                                __pmaintext 019C  
                    __end_of_LCDdataWrite 0601                                   ?___wmul 0020  
                        ?_TMR1_StartTimer 0070                                ??_TMR1_ISR 0076  
                              __pintentry 0004                           _I2C1_Initialize 0509  
                                 _BAUDCON 019F                                   _APFCON0 011D  
                                 _APFCON1 011E                      LCDcommandWrite@value 0040  
              __size_of_LCDpulseEnableNeg 0014                             _LCDwrite4bits 05A5  
                    __end_of_LCDdisplayOn 0610                                   _LCDsend 0438  
                               _I2C1_Stop 053A                  __size_of_LCDcommandWrite 0007  
                                 _OSCTUNE 0098                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                          ?_TMR1_WriteTimer 0070  
                         ??_LCDdisplayOff 0041             I2C1_MasterTRBInsert@ptrb_list 0020  
                  ?_I2C1_FunctionComplete 0070             __size_of_I2C1_MasterTRBInsert 0045  
                            LCDsend@value 003F                      __end_of_LCDsetCursor 0438  
                      _p_i2c1_trb_current 0077                           __size_of___wmul 001C  
                                 __ptext1 04B9                                   __ptext2 0566  
                                 __ptext3 0634                                   __ptext4 04D5  
                                 __ptext5 0638                                   __ptext6 0623  
                                 __ptext7 049C                                   __ptext8 062F  
                                 __ptext9 0509                             ?_TMR1_Routine 0070  
                                 _nStatus 0060            ??_TMR1_DefaultInterruptHandler 0070  
                          ?_LCDwrite4bits 0070                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 062F                           _LCDwritePCF8574 05BE  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 0020  
               ?_TMR1_SetInterruptHandler 0020                                ?_I2C1_Stop 0070  
                         __displaycontrol 005C                __size_of_SYSTEM_Initialize 0012  
                    I2C1_ISR@pi2c_buf_ptr 0064                                   clrloop0 061E  
                    end_of_initialization 0058                                   init_ram 0617  
                                 initloop 0618                    ??_I2C1_BusCollisionISR 0070  
                       _EUSART_Initialize 05B2                   __end_of_I2C1_Initialize 0522  
                      ?_EUSART_Initialize 0070                                 _RCSTAbits 019D  
                            __pstringtext 03A9                            ??_TMR1_Routine 0072  
                     ??_EUSART_Initialize 0020                          ??_WDT_Initialize 0020  
               __size_of_I2C1_MasterWrite 0028                         __size_of_I2C1_ISR 0140  
                        __CFG_FOSC$INTOSC 0000                     __size_of_EUSART_Write 0008  
                              main@ChrIdx 0051        __size_of_I2C_Write_Byte_Single_Reg 0021  
              ?_I2C_Write_Byte_Single_Reg 002E         I2C1_ISR@i2c_10bit_address_restart 0062  
                        ??_LCD_Write_Char 0041                 __end_of_EUSART_Initialize 05BE  
                       ??_LCDcommandWrite 0040                     __size_of_LCDdataWrite 0008  
                           __entrymodeset 005E                         __size_of_LCD_Init 0070  
                 I2C1_MasterWrite@address 0028                                main@status 0050  
                       __size_of_LCDclear 000D                   __end_of_LCDwritePCF8574 05C9  
                          __end_of___wmul 04D5                   I2C1_MasterWrite@trBlock 00A4  
                   __size_of_LCDdisplayOn 0007                           ??_LCDwrite4bits 0039  
                           __pidataCOMMON 063B                              _EUSART_Write 0601  
                       __size_of_TMR1_ISR 0009                  I2C1_Stop@completion_code 0071  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 0032  
                             ??_I2C1_Stop 0070           __size_of_PIN_MANAGER_Initialize 001D  
                            _LCDdataWrite 05F9                             ??_EUSART_Read 0020  
                          LCDsend@highnib 003D         __size_of_I2C1_MasterWriteTRBBuild 0020  
       __end_of_I2C_Write_Byte_Single_Reg 047C                 ?_I2C1_MasterWriteTRBBuild 0020  
                   __size_of_LCDsetCursor 0023                          ?_I2C1_Initialize 0070  
                            _LCDdisplayOn 0609                     __end_of_LCD_Write_Str 0509  
                __size_of_TMR1_Initialize 001A                                  ??___wmul 0024  
                             __pdataBANK1 00A8                    __size_of_TMR1_CallBack 000B  
            I2C1_MasterWriteTRBBuild@ptrb 0026                               __pbssCOMMON 0077  
                                ?_LCDsend 003A                                 ___latbits 0002  
                           __pcstackBANK0 0020                              _LCDsetCursor 0415  
                           _i2c1_tr_queue 0068                   ??_I2C1_FunctionComplete 0070  
              __size_of_EUSART_Initialize 000C                      __end_of_TMR1_Routine 0364  
                     __end_of_EUSART_Read 05E8                                 __pnvBANK0 006B  
                  _PIN_MANAGER_Initialize 049C                                 _dimmLevel 007C  
        __end_of_TMR1_SetInterruptHandler 0629                                 __numlines 005B  
                        ?_LCDwritePCF8574 0070                                  _I2C1_ISR 005C  
            ??_INTERRUPT_InterruptManager 0076                                 __pswtext1 0522  
                        _I2C1_MasterWrite 03ED              __end_of_I2C1_MasterTRBInsert 03A9  
                __size_of_TMR1_StartTimer 0003                             _TMR1_CallBack 05C9  
                  I2C1_MasterRead@trBlock 00A0                                  _LCD_Init 02A5  
                          ___wmul@product 0024                                  _LATCbits 010E  
                   __end_of_LCDdisplayOff 05DE                                  _LCDclear 0598  
                               clear_ram0 061D                                  _PIE1bits 0091  
                                _PIE2bits 0092                  __size_of_TMR1_WriteTimer 000F  
     __size_of_INTERRUPT_InterruptManager 002C                                  _PIR1bits 0011  
                                _PIR2bits 0012                                  _SSP1CON1 0215  
                                _SSP1CON3 0217                                  _TMR1_ISR 05E8  
                                _SSP1STAT 0214                         ??_TMR1_Initialize 0022  
                       ___wmul@multiplier 0020                           _LCDcommandWrite 0610  
                        __size_of_LCDsend 0023                               _EUSART_Read 05DE  
             ??_I2C_Write_Byte_Single_Reg 002F                             LCDsend@RsMode 003A  
                       LCDdataWrite@value 0040                            ?_TMR1_CallBack 0070  
                                _SecTimer 0058                             LCDsend@lownib 003E  
                LCDwrite4bits@nibEnRsMode 0039             __size_of_I2C1_BusCollisionISR 0001  
                  I2C1_ISR@i2c_bytes_left 0063                   ??_OSCILLATOR_Initialize 0020  
        __end_of_I2C1_MasterWriteTRBBuild 049C                  _TMR1_SetInterruptHandler 0623  
                 LCDsetCursor@row_offsets 0043                     _TMR1_InterruptHandler 006B  
                  LCDpulseEnableNeg@_data 0038                       I2C1_ISR@i2c_address 0078  
                                __ptext10 05B2                                  __ptext11 0415  
                                __ptext20 0438                                  __ptext12 04EF  
                                __ptext21 05A5                                  __ptext13 0629  
                              _T1GCONbits 0019                                  __ptext22 0552  
                                __ptext14 05F9                                  __ptext31 05E8  
                                __ptext23 05BE                                  __ptext15 02A5  
                                __ptext32 05C9                                  __ptext24 045B  
                                __ptext16 0609                                  __ptext33 063D  
                                __ptext25 03ED                                  __ptext17 05D4  
                                __ptext34 0315                                  __ptext26 047C  
                                __ptext18 0598                                  __ptext35 0589  
                                __ptext27 0364                                  __ptext19 0610  
                                __ptext36 005C                                  __ptext28 0601  
                                __ptext37 053A                                  __ptext29 05DE  
                                __ptext38 0578                                  __ptext39 063E  
                   __size_of_TMR1_Routine 004F                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                         ??_TMR1_StartTimer 0020  
         I2C_Write_Byte_Single_Reg@device 0034                             __size_of_main 0109  
         I2C_Write_Byte_Single_Reg@status 0035                      _I2C1_MasterTRBInsert 0364  
               _I2C_Write_Byte_Single_Reg 045B                                  int$flags 007E  
                        __displayfunction 005D        __end_of_INTERRUPT_InterruptManager 0030  
              _INTERRUPT_InterruptManager 0004                      LCDwritePCF8574@value 0037  
                 __end_of_LCDcommandWrite 0617                         ??_TMR1_WriteTimer 0072  
                                main@temp 004E                              _TMR1_Routine 0315  
                   __end_of_LCDwrite4bits 05B2                         LCDsetCursor@F3178 00A8  
                              _INTCONbits 000B                           ??_TMR1_CallBack 0076  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0070                  __end_of_I2C1_MasterWrite 0415  
                       __CFG_CLKOUTEN$OFF 0000            __size_of_I2C1_FunctionComplete 0011  
           __end_of_I2C1_FunctionComplete 0589                     ?_I2C1_MasterTRBInsert 0020  
                 __size_of_LCD_Write_Char 0006                  __size_of_I2C1_Initialize 0019  
                _I2C1_MasterWriteTRBBuild 047C                    __size_of_LCD_Write_Str 001A  
                      EUSART_Write@txData 0020            __end_of_PIN_MANAGER_Initialize 04B9  
                      __size_of_I2C1_Stop 0018                           _TMR1_Initialize 04D5  
                           __backlightval 005A  
